{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/replica/source/css/base.styl","path":"css/base.styl","modified":0,"renderable":1},{"_id":"themes/replica/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/replica/source/css/calendar.styl","path":"css/calendar.styl","modified":0,"renderable":1},{"_id":"themes/replica/source/css/code.styl","path":"css/code.styl","modified":0,"renderable":1},{"_id":"themes/replica/source/css/footer.styl","path":"css/footer.styl","modified":0,"renderable":1},{"_id":"themes/replica/source/css/main.css","path":"css/main.css","modified":0,"renderable":1},{"_id":"themes/replica/source/css/header.styl","path":"css/header.styl","modified":0,"renderable":1},{"_id":"themes/replica/source/css/post.styl","path":"css/post.styl","modified":0,"renderable":1},{"_id":"themes/replica/source/css/navbar.styl","path":"css/navbar.styl","modified":0,"renderable":1},{"_id":"themes/replica/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1}],"Cache":[{"_id":"themes/replica/_config.yml","hash":"44869cada3da45c57e51bb4941f4841ce53451d5","modified":1558692152898},{"_id":"themes/replica/README.md","hash":"119b32f0e90b1d266d163282a0f1beb16ad83607","modified":1558692152898},{"_id":"themes/replica/.gitignore","hash":"b9c4d3cfcf0530fa5ee6eacf43499be4b0fd0505","modified":1558692152898},{"_id":"themes/replica/LICENSE","hash":"dae982bca6e2d3d0527e4619de459419c7c838fc","modified":1558692152898},{"_id":"source/_posts/20180428-hexo.md","hash":"4691b58373b706d0dacb00dbae5c64b56ae6e135","modified":1559126259954},{"_id":"source/about/index.md","hash":"f1bb8f42023744e4d6c32394224090aa72b376e6","modified":1558835195115},{"_id":"source/_posts/20180508-linux-record.md","hash":"aa5df573d328ac89ac905cf311cb0d73407f4348","modified":1559125681680},{"_id":"source/_posts/20180530-greenplum.md","hash":"45f0890dc3287ef444f04913519d78793c001fbb","modified":1559125757465},{"_id":"source/_posts/20190528-mxnet-gpu.md","hash":"2366b82563abfb9145730caae6ce525780beedbc","modified":1559125794400},{"_id":"source/_posts/20180530-kafka.md","hash":"2877effd1ad08d91687da315016f0883ce4b074a","modified":1559184329571},{"_id":"source/_posts/20190530-jupyter.md","hash":"a85d6be17d8ed88b178d92aa2e44e3609672bd97","modified":1559404727833},{"_id":"themes/replica/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1558692152895},{"_id":"source/categories/index.md","hash":"c2a56afd33206597ea94184f3d6da2417a985c0d","modified":1559125196667},{"_id":"source/tags/index.md","hash":"012afcdfcadb92b1bd8fc3028b98ff505ab19713","modified":1559125202527},{"_id":"themes/replica/.git/config","hash":"900fe5384f301a0a79861d5ed347fb597d54adcb","modified":1558692152897},{"_id":"themes/replica/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1558692148845},{"_id":"themes/replica/.git/index","hash":"5d5990eaba24403ef88ff3e429ea0c35d64336eb","modified":1559126334318},{"_id":"themes/replica/.git/packed-refs","hash":"8b779fd668db858d93eea9fee46e93b2623ef094","modified":1558692152893},{"_id":"themes/replica/layout/archive.ejs","hash":"272d2625953f60a28b90c074c3e2d606b3cd28d3","modified":1558692152901},{"_id":"themes/replica/layout/index.ejs","hash":"da2ab461d0d44dbd7f1bd0b36aa7d6b508aa34ba","modified":1558692152901},{"_id":"themes/replica/layout/page.ejs","hash":"f9b3d303225b32893b411f3638a3885c56e90cdb","modified":1558692152901},{"_id":"themes/replica/layout/layout.ejs","hash":"f6a45300b7e765a360de6903cb500fffdf5c7a74","modified":1558692152901},{"_id":"themes/replica/layout/post.ejs","hash":"851e9404a79274d2cb8a13808116dfcb53d069d4","modified":1558692152901},{"_id":"themes/replica/test/main.test.js","hash":"f754846394a9e01b6e0feb590dd1d9ccd0d5d4de","modified":1558692152903},{"_id":"themes/replica/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1558692148846},{"_id":"themes/replica/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1558692148847},{"_id":"themes/replica/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1558692148847},{"_id":"themes/replica/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1558692148849},{"_id":"themes/replica/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1558692148849},{"_id":"themes/replica/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1558692148847},{"_id":"themes/replica/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1558692148850},{"_id":"themes/replica/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1558692148846},{"_id":"themes/replica/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1558692148848},{"_id":"themes/replica/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1558692148850},{"_id":"themes/replica/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1558692148848},{"_id":"themes/replica/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1558692148845},{"_id":"themes/replica/.git/logs/HEAD","hash":"f1b9d888fb4efbbfb94d9474d2d79889ab3cd25b","modified":1558692152896},{"_id":"themes/replica/source/css/_variables.styl","hash":"0a92cf3cc9eb415bbbab6e8877b6e8e74a9dcba9","modified":1558692152902},{"_id":"themes/replica/source/css/base.styl","hash":"2e8da20b7b1c4ac07d2d1f8d757280b9d5be448f","modified":1558692152902},{"_id":"themes/replica/source/js/main.js","hash":"0765b737c847cd7d0ab79997b7fdd8eb989b7aee","modified":1558692152903},{"_id":"themes/replica/source/css/calendar.styl","hash":"becd031536714de84b2eed0f3ef126c13b039b83","modified":1558692152902},{"_id":"themes/replica/source/css/code.styl","hash":"564801429f03baf12febbfdd26b22b75bbfa0942","modified":1558692152902},{"_id":"themes/replica/source/css/footer.styl","hash":"f50089ebf0e9b560983b09faad3cc9ced495aaed","modified":1558692152902},{"_id":"themes/replica/source/css/main.css","hash":"79f4322bba35e45842b0f716b0729d63aa7e701d","modified":1558692152903},{"_id":"themes/replica/source/css/header.styl","hash":"b6819022575a1c6ed6039ac7cce8803c109a57f6","modified":1558692152902},{"_id":"themes/replica/source/css/post.styl","hash":"fe2ca0f09fcaca787fe265817feed5d3ec2ce94a","modified":1558692152903},{"_id":"themes/replica/source/css/navbar.styl","hash":"89ffd20429b149ac492334a8a02fda28cfedb93e","modified":1558692152903},{"_id":"themes/replica/source/css/main.styl","hash":"be52d36fe639daf41bc3dd1ebbee5b095dc2fe94","modified":1558692152903},{"_id":"themes/replica/layout/_partial/article.ejs","hash":"a44a7c573357b68cfaf17241a5b8f766ec739e26","modified":1558692152899},{"_id":"themes/replica/layout/_partial/calendar.ejs","hash":"5c5168d6d633b1e59a692b52556b62d808e14527","modified":1558692152899},{"_id":"themes/replica/layout/_partial/head.ejs","hash":"3c1dc5519a7a8d6a62b5be9d11301a0a5423df67","modified":1558692152899},{"_id":"themes/replica/layout/_partial/footer.ejs","hash":"2b45f1d2d28d51b674f5df24ef846d307b7db81b","modified":1558692152899},{"_id":"themes/replica/layout/_partial/header.ejs","hash":"ccfbea43f40e18c3ea4c2d3737c31d492469c5f7","modified":1558692152899},{"_id":"themes/replica/layout/_partial/navbar-secondary.ejs","hash":"aac14de4f63d8d9c4fde0219d1206aa1f0d7627b","modified":1558692152900},{"_id":"themes/replica/layout/_partial/navbar.ejs","hash":"5c98071ca0ba54cb62bc2f6d05c1e5cdb87af720","modified":1558692152900},{"_id":"themes/replica/layout/_partial/intro.ejs","hash":"237c0f450091987c8a288e0db3d1594d1cd73261","modified":1558692152900},{"_id":"themes/replica/layout/_widget/baidutongji.ejs","hash":"f11adfa3dd5d47039b58bf9174a16ced87a10a6e","modified":1558692152900},{"_id":"themes/replica/layout/_partial/script.ejs","hash":"c917cc709366b5706b1112a2d25f7daf387a12a1","modified":1558692152900},{"_id":"themes/replica/layout/_widget/gitalk.ejs","hash":"03547aaf44fe813f3d35613a086f567c4c0287dc","modified":1558692152901},{"_id":"themes/replica/layout/_widget/disqus.ejs","hash":"ac8a5ae8517318d094381621a6ef9c3e00e60c8f","modified":1558692152900},{"_id":"themes/replica/layout/_widget/google-analytics.ejs","hash":"21e4951dd61edd4f09056485d2e15b177895b46f","modified":1558692152901},{"_id":"themes/replica/layout/_widget/google-custom-search.ejs","hash":"789f910476fe50827c6e9733efae44358c084360","modified":1558692152901},{"_id":"themes/replica/.git/refs/heads/master","hash":"afe70dd9446d94864d1910c7de846cf4a307d82e","modified":1558692152896},{"_id":"themes/replica/.git/objects/pack/pack-25e14df34c8683a1409db96d462ddd58d6270f92.idx","hash":"df029a497a6d1aafb64334c4bbe930611998dac1","modified":1558692152881},{"_id":"themes/replica/.git/logs/refs/heads/master","hash":"f1b9d888fb4efbbfb94d9474d2d79889ab3cd25b","modified":1558692152896},{"_id":"themes/replica/.git/objects/pack/pack-25e14df34c8683a1409db96d462ddd58d6270f92.pack","hash":"77627a6d21713b25079e3f3deff551a01aecc86d","modified":1558692152881},{"_id":"themes/replica/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1558692152895},{"_id":"themes/replica/.git/logs/refs/remotes/origin/HEAD","hash":"f1b9d888fb4efbbfb94d9474d2d79889ab3cd25b","modified":1558692152895},{"_id":"public/categories/index.html","hash":"34e7dd068f3e7daccc5fa1bcb62dc7da165c8ff9","modified":1559405147314},{"_id":"public/tags/index.html","hash":"251b9211bda025381314406529f0b6c582067635","modified":1559405147314},{"_id":"public/about/index.html","hash":"a33152f8e903b4628f4b68fe836bb00fae32748d","modified":1559405147314},{"_id":"public/2019/05/30/jupyter/index.html","hash":"6f55361e4dfca20c0d9be2db32c6227e7de43c79","modified":1559405147314},{"_id":"public/2018/05/30/kafka/index.html","hash":"492f558e421ec94e6d0964c0620b77eea25f7241","modified":1559405147314},{"_id":"public/2018/05/08/linux-record/index.html","hash":"4a524eb9faf7f5a295168bf548fcb008558d737d","modified":1559405147314},{"_id":"public/2018/04/28/hexo/index.html","hash":"bdb9060148cf2404533d79d3fe1611d32b85546c","modified":1559405147314},{"_id":"public/archives/index.html","hash":"542597090e3d255aa68c1b03f19bf051feac479e","modified":1559405147314},{"_id":"public/archives/2018/index.html","hash":"09595bd14946843f5ef5dfa963690c83c32f7018","modified":1559405147315},{"_id":"public/archives/2018/04/index.html","hash":"2074b9bab6f46229b2bba28805c648ca6273d682","modified":1559405147315},{"_id":"public/archives/2018/05/index.html","hash":"3f831eaec3396036c6fea5a533654426c73b4065","modified":1559405147315},{"_id":"public/archives/2019/index.html","hash":"921b53b002cbb44ad72c2e62a285b108b68bee51","modified":1559405147315},{"_id":"public/archives/2019/05/index.html","hash":"921b53b002cbb44ad72c2e62a285b108b68bee51","modified":1559405147315},{"_id":"public/tags/linux-python-docker/index.html","hash":"83d9d9667b6206ea0b669ffc135863b71c6932ac","modified":1559405147315},{"_id":"public/tags/博客搭建-教程/index.html","hash":"15e3644e58a46c9a55ea9dbd4dd69fdfaf8bb127","modified":1559405147315},{"_id":"public/tags/数据仓库-教程/index.html","hash":"7c8f207128473ebccecda214ad09a04bccab66bb","modified":1559405147315},{"_id":"public/tags/mxnet-cuda/index.html","hash":"bf2fe2761f49131a48a9142b7889664d8ef75289","modified":1559405147315},{"_id":"public/tags/消息队列/index.html","hash":"fdf4f5e1c50a8f513410962b7d3af90ef032bc53","modified":1559405147315},{"_id":"public/tags/jupyter/index.html","hash":"8c46d6146fb8092892597db02f8d375a446e71b6","modified":1559405147315},{"_id":"public/categories/bug/index.html","hash":"65bf056b12aa6921623abfd566f5468c3ef96248","modified":1559405147315},{"_id":"public/categories/hexo/index.html","hash":"b4e0c5cf22edae9e15a9c624af08eb58260433cf","modified":1559405147315},{"_id":"public/categories/data-warehouse/index.html","hash":"f640b862155db824ae7134bb7c4e728b25e90571","modified":1559405147315},{"_id":"public/categories/deep-learning/index.html","hash":"92468c6941000ae67e4c4d5386a5968cd3b4cc4f","modified":1559405147315},{"_id":"public/categories/教程/index.html","hash":"bb8cbb30a66cc822eb1973d3b149a3ccb522617a","modified":1559405147315},{"_id":"public/2019/05/28/mxnet-gpu/index.html","hash":"6f9d2a261fbee91ff7cddc4657d5b115c6917d26","modified":1559405147316},{"_id":"public/2018/05/30/greenplum/index.html","hash":"28167c11cf2c391bbfb9aa9798953583df977f45","modified":1559405147316},{"_id":"public/index.html","hash":"8399f379b37078cea47a4b9c05b3e478eb743d42","modified":1559405147316},{"_id":"public/css/base.css","hash":"46d94f57872e554fb7eda3cbc290ce29a9dfc969","modified":1559405147586},{"_id":"public/js/main.js","hash":"0765b737c847cd7d0ab79997b7fdd8eb989b7aee","modified":1559405147586},{"_id":"public/css/calendar.css","hash":"7a7631065237b046550b885dd1f9b77f6f6997c1","modified":1559405147586},{"_id":"public/css/code.css","hash":"363e8f6c079361c8ffa515015708116d1b896541","modified":1559405147586},{"_id":"public/css/footer.css","hash":"7df1b3fc06147cccfedeb9bf2dccd1b68b2eff39","modified":1559405147586},{"_id":"public/css/header.css","hash":"94db4946462f6638405c74f075dce73a8577f7d2","modified":1559405147586},{"_id":"public/css/post.css","hash":"11a2d15f1d82405a2c8a1c07132e2864eee8b20c","modified":1559405147586},{"_id":"public/css/navbar.css","hash":"330328411107337e08291fba3dc9398a4b45cb01","modified":1559405147587},{"_id":"public/css/main.css","hash":"145239704564ffa6b612246022a2fb191d8ef213","modified":1559405147587}],"Category":[{"name":"bug","_id":"cjwdpk7yg000462xsvyav3pw1"},{"name":"hexo","_id":"cjwdpk7yl000a62xsirkufgmc"},{"name":"data warehouse","_id":"cjwdpk7yn000f62xsesg0n0qx"},{"name":"deep learning","_id":"cjwdpk7yo000j62xs9depunk1"},{"name":"教程","_id":"cjwdpk7yp000n62xs4bnsfugx"}],"Data":[],"Page":[{"title":"categories","date":"2019-05-29T10:19:56.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2019-05-29 18:19:56\n---\n","updated":"2019-05-29T10:19:56.667Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjwdpk7yd000162xso28qoky5","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2019-05-29T10:20:02.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-05-29 18:20:02\n---\n","updated":"2019-05-29T10:20:02.527Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjwdpk7yf000362xsrzc860vs","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"# 关于我\n\n## 基本介绍\n\n一个来自魔都的小码农 主要从事python 后端，大数据处理\n目前的方向是 python 数据挖掘，对机器学习有浓厚兴趣\n\n## 技能标签\n\n* web (django/flask/tornado/sanic)\n\n* databases (mysql/postgresql/mongo)\n\n* big data (hadoop/spark/hdfs/greenplum)\n\n* machine learning (tensorflow/cnn/rnn)\n\n* message queue (kafka/rabbirmq)\n\n## 联系方式\n\n* 邮箱：youngs@yeah.net\n\n## 爱好\n\n* 徒步\n* 游戏 （吃鸡 LOL 王者）\n\n## 其他\n\n* python 相关问题欢迎探讨\n* 数据挖掘 在努力中","source":"about/index.md","raw":"# 关于我\n\n## 基本介绍\n\n一个来自魔都的小码农 主要从事python 后端，大数据处理\n目前的方向是 python 数据挖掘，对机器学习有浓厚兴趣\n\n## 技能标签\n\n* web (django/flask/tornado/sanic)\n\n* databases (mysql/postgresql/mongo)\n\n* big data (hadoop/spark/hdfs/greenplum)\n\n* machine learning (tensorflow/cnn/rnn)\n\n* message queue (kafka/rabbirmq)\n\n## 联系方式\n\n* 邮箱：youngs@yeah.net\n\n## 爱好\n\n* 徒步\n* 游戏 （吃鸡 LOL 王者）\n\n## 其他\n\n* python 相关问题欢迎探讨\n* 数据挖掘 在努力中","date":"2019-05-26T01:46:35.115Z","updated":"2019-05-26T01:46:35.115Z","path":"about/index.html","title":"","comments":1,"layout":"page","_id":"cjwdpk7yj000762xss8t7d103","content":"<h1 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h1><h2 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h2><p>一个来自魔都的小码农 主要从事python 后端，大数据处理<br>目前的方向是 python 数据挖掘，对机器学习有浓厚兴趣</p>\n<h2 id=\"技能标签\"><a href=\"#技能标签\" class=\"headerlink\" title=\"技能标签\"></a>技能标签</h2><ul>\n<li><p>web (django/flask/tornado/sanic)</p>\n</li>\n<li><p>databases (mysql/postgresql/mongo)</p>\n</li>\n<li><p>big data (hadoop/spark/hdfs/greenplum)</p>\n</li>\n<li><p>machine learning (tensorflow/cnn/rnn)</p>\n</li>\n<li><p>message queue (kafka/rabbirmq)</p>\n</li>\n</ul>\n<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h2><ul>\n<li>邮箱：<a href=\"mailto:youngs@yeah.net\" target=\"_blank\" rel=\"noopener\">youngs@yeah.net</a></li>\n</ul>\n<h2 id=\"爱好\"><a href=\"#爱好\" class=\"headerlink\" title=\"爱好\"></a>爱好</h2><ul>\n<li>徒步</li>\n<li>游戏 （吃鸡 LOL 王者）</li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul>\n<li>python 相关问题欢迎探讨</li>\n<li>数据挖掘 在努力中</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h1><h2 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h2><p>一个来自魔都的小码农 主要从事python 后端，大数据处理<br>目前的方向是 python 数据挖掘，对机器学习有浓厚兴趣</p>\n<h2 id=\"技能标签\"><a href=\"#技能标签\" class=\"headerlink\" title=\"技能标签\"></a>技能标签</h2><ul>\n<li><p>web (django/flask/tornado/sanic)</p>\n</li>\n<li><p>databases (mysql/postgresql/mongo)</p>\n</li>\n<li><p>big data (hadoop/spark/hdfs/greenplum)</p>\n</li>\n<li><p>machine learning (tensorflow/cnn/rnn)</p>\n</li>\n<li><p>message queue (kafka/rabbirmq)</p>\n</li>\n</ul>\n<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h2><ul>\n<li>邮箱：<a href=\"mailto:youngs@yeah.net\" target=\"_blank\" rel=\"noopener\">youngs@yeah.net</a></li>\n</ul>\n<h2 id=\"爱好\"><a href=\"#爱好\" class=\"headerlink\" title=\"爱好\"></a>爱好</h2><ul>\n<li>徒步</li>\n<li>游戏 （吃鸡 LOL 王者）</li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul>\n<li>python 相关问题欢迎探讨</li>\n<li>数据挖掘 在努力中</li>\n</ul>\n"}],"Post":[{"title":"Code 日常","date":"2018-05-08T02:07:55.000Z","_content":"\n## 日常问题、小技巧收集\n\n主要记录日常遇到的问题及解决方法\n包括但不限于 python/linux/docker/database\n\n## linux命令终端显示-bash-4.2#解决方法\n\n* 近期在折腾docker centos 使用别人的镜像 发现终端显示 `bash-4.2#` 很是忧伤（之前遇到，好记性不如烂笔头）\n\n    ``` bash\n    # 这里的root 可以替换成你的用户\n    cp /etc/skel/.bashrc /root/  \n    cp /etc/skel/.bash_profile  /root/  \n\n    ```\n\n* 然后 exit 重新登录就好了\n\n## linux 文件编辑\n\n* 在线上操作文件 一般都是 vi 但是 vi 适用于各种花式操作 这里介绍实用的简单的操作\n\n    ```bash\n\n    # echo > file 覆盖文件\n    echo \"\" > file  # 这个操作可以快速清空某一文件\n    echo \"Hello World\" > file\n    # echo >> file 追加文件\n    echo \"Hello World\" >> file\n\n\n    # cat 配合 EOF > 覆盖  >> 追加\n    cat << EOF > file\n    > Hello\n    > Hello world\n    ```\n\n    EOF是END Of File的缩写,表示自定义终止符.既然自定义,那么EOF就不是固定的,可以随意设置别名,在linux按ctrl-d就代表EOF, \n    **EOF一般会配合cat能够多行文本输出.**\n\n## pyhon matplotlib 安装\n\n* 问题： 安装matplotlib python-tk 网上解决方法需要重新编译 python matplotlib error python Tkinter module not found on Ubuntu\n* 解决方案\n\n``` bash\nsudo apt-get install python3.6-tk\n```\n\n> [stackoverflow  链接](https://stackoverflow.com/questions/6084416/tkinter-module-not-found-on-ubuntu)\n\n## docker 镜像加速\n\n``` bash\nsudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json <<-'EOF'\n{\n  \"registry-mirrors\": [\"https://etsgrm2s.mirror.aliyuncs.com\"]\n}\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n```\n\n## ubuntu-18.04 安装 mysql-5.7 root 密码\n\n``` bash\nsudo apt install mysql-server mysql-client\n\n# 查询 默认 用户名 密码\nsudo vi /etc/mysql/debian.cnf\n\n# 登录 mysql 修改 root 密码\nupdate mysql.user set authentication_string=password('password') where user='root';\n\n# 修改远程连接\nupdate user set host = '%' where user = 'root';\n\n# 修改验证方式\nUPDATE user SET plugin='mysql_native_password' WHERE User='root';\n\n\n## option 2\n\nmysql> CREATE USER 'YOUR_SYSTEM_USER'@'localhost' IDENTIFIED BY '';\nmysql> GRANT ALL PRIVILEGES ON *.* TO 'YOUR_SYSTEM_USER'@'localhost';\nmysql> UPDATE user SET plugin='auth_socket' WHERE User='YOUR_SYSTEM_USER';\nmysql> FLUSH PRIVILEGES;\n```\n\n## python 换源以及格式化pip输出\n\n```bash\n\ncd ~ & mkdir .pip\nvi ~/.pip/pip.conf\n\n[global]\ntimeout = 60\nindex-url = http://pypi.douban.com/simple\ntrusted-host = pypi.douban.com\nformat=columns\n```","source":"_posts/20180508-linux-record.md","raw":"---\ntitle: Code 日常\ndate: 2018-05-08 10:07:55\ntags: linux python docker\ncategories: bug\n---\n\n## 日常问题、小技巧收集\n\n主要记录日常遇到的问题及解决方法\n包括但不限于 python/linux/docker/database\n\n## linux命令终端显示-bash-4.2#解决方法\n\n* 近期在折腾docker centos 使用别人的镜像 发现终端显示 `bash-4.2#` 很是忧伤（之前遇到，好记性不如烂笔头）\n\n    ``` bash\n    # 这里的root 可以替换成你的用户\n    cp /etc/skel/.bashrc /root/  \n    cp /etc/skel/.bash_profile  /root/  \n\n    ```\n\n* 然后 exit 重新登录就好了\n\n## linux 文件编辑\n\n* 在线上操作文件 一般都是 vi 但是 vi 适用于各种花式操作 这里介绍实用的简单的操作\n\n    ```bash\n\n    # echo > file 覆盖文件\n    echo \"\" > file  # 这个操作可以快速清空某一文件\n    echo \"Hello World\" > file\n    # echo >> file 追加文件\n    echo \"Hello World\" >> file\n\n\n    # cat 配合 EOF > 覆盖  >> 追加\n    cat << EOF > file\n    > Hello\n    > Hello world\n    ```\n\n    EOF是END Of File的缩写,表示自定义终止符.既然自定义,那么EOF就不是固定的,可以随意设置别名,在linux按ctrl-d就代表EOF, \n    **EOF一般会配合cat能够多行文本输出.**\n\n## pyhon matplotlib 安装\n\n* 问题： 安装matplotlib python-tk 网上解决方法需要重新编译 python matplotlib error python Tkinter module not found on Ubuntu\n* 解决方案\n\n``` bash\nsudo apt-get install python3.6-tk\n```\n\n> [stackoverflow  链接](https://stackoverflow.com/questions/6084416/tkinter-module-not-found-on-ubuntu)\n\n## docker 镜像加速\n\n``` bash\nsudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json <<-'EOF'\n{\n  \"registry-mirrors\": [\"https://etsgrm2s.mirror.aliyuncs.com\"]\n}\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n```\n\n## ubuntu-18.04 安装 mysql-5.7 root 密码\n\n``` bash\nsudo apt install mysql-server mysql-client\n\n# 查询 默认 用户名 密码\nsudo vi /etc/mysql/debian.cnf\n\n# 登录 mysql 修改 root 密码\nupdate mysql.user set authentication_string=password('password') where user='root';\n\n# 修改远程连接\nupdate user set host = '%' where user = 'root';\n\n# 修改验证方式\nUPDATE user SET plugin='mysql_native_password' WHERE User='root';\n\n\n## option 2\n\nmysql> CREATE USER 'YOUR_SYSTEM_USER'@'localhost' IDENTIFIED BY '';\nmysql> GRANT ALL PRIVILEGES ON *.* TO 'YOUR_SYSTEM_USER'@'localhost';\nmysql> UPDATE user SET plugin='auth_socket' WHERE User='YOUR_SYSTEM_USER';\nmysql> FLUSH PRIVILEGES;\n```\n\n## python 换源以及格式化pip输出\n\n```bash\n\ncd ~ & mkdir .pip\nvi ~/.pip/pip.conf\n\n[global]\ntimeout = 60\nindex-url = http://pypi.douban.com/simple\ntrusted-host = pypi.douban.com\nformat=columns\n```","slug":"linux-record","published":1,"updated":"2019-05-29T10:28:01.680Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwdpk7y9000062xsit93kk32","content":"<h2 id=\"日常问题、小技巧收集\"><a href=\"#日常问题、小技巧收集\" class=\"headerlink\" title=\"日常问题、小技巧收集\"></a>日常问题、小技巧收集</h2><p>主要记录日常遇到的问题及解决方法<br>包括但不限于 python/linux/docker/database</p>\n<h2 id=\"linux命令终端显示-bash-4-2-解决方法\"><a href=\"#linux命令终端显示-bash-4-2-解决方法\" class=\"headerlink\" title=\"linux命令终端显示-bash-4.2#解决方法\"></a>linux命令终端显示-bash-4.2#解决方法</h2><ul>\n<li><p>近期在折腾docker centos 使用别人的镜像 发现终端显示 <code>bash-4.2#</code> 很是忧伤（之前遇到，好记性不如烂笔头）</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这里的root 可以替换成你的用户</span></span><br><span class=\"line\">cp /etc/skel/.bashrc /root/  </span><br><span class=\"line\">cp /etc/skel/.bash_profile  /root/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>然后 exit 重新登录就好了</p>\n</li>\n</ul>\n<h2 id=\"linux-文件编辑\"><a href=\"#linux-文件编辑\" class=\"headerlink\" title=\"linux 文件编辑\"></a>linux 文件编辑</h2><ul>\n<li><p>在线上操作文件 一般都是 vi 但是 vi 适用于各种花式操作 这里介绍实用的简单的操作</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># echo &gt; file 覆盖文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"\"</span> &gt; file  <span class=\"comment\"># 这个操作可以快速清空某一文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Hello World\"</span> &gt; file</span><br><span class=\"line\"><span class=\"comment\"># echo &gt;&gt; file 追加文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Hello World\"</span> &gt;&gt; file</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># cat 配合 EOF &gt; 覆盖  &gt;&gt; 追加</span></span><br><span class=\"line\">cat &lt;&lt; EOF &gt; file</span><br><span class=\"line\">&gt; Hello</span><br><span class=\"line\">&gt; Hello world</span><br></pre></td></tr></table></figure>\n\n<p>  EOF是END Of File的缩写,表示自定义终止符.既然自定义,那么EOF就不是固定的,可以随意设置别名,在linux按ctrl-d就代表EOF,<br>  <strong>EOF一般会配合cat能够多行文本输出.</strong></p>\n</li>\n</ul>\n<h2 id=\"pyhon-matplotlib-安装\"><a href=\"#pyhon-matplotlib-安装\" class=\"headerlink\" title=\"pyhon matplotlib 安装\"></a>pyhon matplotlib 安装</h2><ul>\n<li>问题： 安装matplotlib python-tk 网上解决方法需要重新编译 python matplotlib error python Tkinter module not found on Ubuntu</li>\n<li>解决方案</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python3.6-tk</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><a href=\"https://stackoverflow.com/questions/6084416/tkinter-module-not-found-on-ubuntu\" target=\"_blank\" rel=\"noopener\">stackoverflow  链接</a></p>\n</blockquote>\n<h2 id=\"docker-镜像加速\"><a href=\"#docker-镜像加速\" class=\"headerlink\" title=\"docker 镜像加速\"></a>docker 镜像加速</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /etc/docker</span><br><span class=\"line\">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class=\"string\">'EOF'</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"registry-mirrors\"</span>: [<span class=\"string\">\"https://etsgrm2s.mirror.aliyuncs.com\"</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ubuntu-18-04-安装-mysql-5-7-root-密码\"><a href=\"#ubuntu-18-04-安装-mysql-5-7-root-密码\" class=\"headerlink\" title=\"ubuntu-18.04 安装 mysql-5.7 root 密码\"></a>ubuntu-18.04 安装 mysql-5.7 root 密码</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install mysql-server mysql-client</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询 默认 用户名 密码</span></span><br><span class=\"line\">sudo vi /etc/mysql/debian.cnf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 登录 mysql 修改 root 密码</span></span><br><span class=\"line\">update mysql.user <span class=\"built_in\">set</span> authentication_string=password(<span class=\"string\">'password'</span>) <span class=\"built_in\">where</span> user=<span class=\"string\">'root'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改远程连接</span></span><br><span class=\"line\">update user <span class=\"built_in\">set</span> host = <span class=\"string\">'%'</span> <span class=\"built_in\">where</span> user = <span class=\"string\">'root'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改验证方式</span></span><br><span class=\"line\">UPDATE user SET plugin=<span class=\"string\">'mysql_native_password'</span> WHERE User=<span class=\"string\">'root'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## option 2</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; CREATE USER <span class=\"string\">'YOUR_SYSTEM_USER'</span>@<span class=\"string\">'localhost'</span> IDENTIFIED BY <span class=\"string\">''</span>;</span><br><span class=\"line\">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO <span class=\"string\">'YOUR_SYSTEM_USER'</span>@<span class=\"string\">'localhost'</span>;</span><br><span class=\"line\">mysql&gt; UPDATE user SET plugin=<span class=\"string\">'auth_socket'</span> WHERE User=<span class=\"string\">'YOUR_SYSTEM_USER'</span>;</span><br><span class=\"line\">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"python-换源以及格式化pip输出\"><a href=\"#python-换源以及格式化pip输出\" class=\"headerlink\" title=\"python 换源以及格式化pip输出\"></a>python 换源以及格式化pip输出</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~ &amp; mkdir .pip</span><br><span class=\"line\">vi ~/.pip/pip.conf</span><br><span class=\"line\"></span><br><span class=\"line\">[global]</span><br><span class=\"line\">timeout = 60</span><br><span class=\"line\">index-url = http://pypi.douban.com/simple</span><br><span class=\"line\">trusted-host = pypi.douban.com</span><br><span class=\"line\">format=columns</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"日常问题、小技巧收集\"><a href=\"#日常问题、小技巧收集\" class=\"headerlink\" title=\"日常问题、小技巧收集\"></a>日常问题、小技巧收集</h2><p>主要记录日常遇到的问题及解决方法<br>包括但不限于 python/linux/docker/database</p>\n<h2 id=\"linux命令终端显示-bash-4-2-解决方法\"><a href=\"#linux命令终端显示-bash-4-2-解决方法\" class=\"headerlink\" title=\"linux命令终端显示-bash-4.2#解决方法\"></a>linux命令终端显示-bash-4.2#解决方法</h2><ul>\n<li><p>近期在折腾docker centos 使用别人的镜像 发现终端显示 <code>bash-4.2#</code> 很是忧伤（之前遇到，好记性不如烂笔头）</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这里的root 可以替换成你的用户</span></span><br><span class=\"line\">cp /etc/skel/.bashrc /root/  </span><br><span class=\"line\">cp /etc/skel/.bash_profile  /root/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>然后 exit 重新登录就好了</p>\n</li>\n</ul>\n<h2 id=\"linux-文件编辑\"><a href=\"#linux-文件编辑\" class=\"headerlink\" title=\"linux 文件编辑\"></a>linux 文件编辑</h2><ul>\n<li><p>在线上操作文件 一般都是 vi 但是 vi 适用于各种花式操作 这里介绍实用的简单的操作</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># echo &gt; file 覆盖文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"\"</span> &gt; file  <span class=\"comment\"># 这个操作可以快速清空某一文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Hello World\"</span> &gt; file</span><br><span class=\"line\"><span class=\"comment\"># echo &gt;&gt; file 追加文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Hello World\"</span> &gt;&gt; file</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># cat 配合 EOF &gt; 覆盖  &gt;&gt; 追加</span></span><br><span class=\"line\">cat &lt;&lt; EOF &gt; file</span><br><span class=\"line\">&gt; Hello</span><br><span class=\"line\">&gt; Hello world</span><br></pre></td></tr></table></figure>\n\n<p>  EOF是END Of File的缩写,表示自定义终止符.既然自定义,那么EOF就不是固定的,可以随意设置别名,在linux按ctrl-d就代表EOF,<br>  <strong>EOF一般会配合cat能够多行文本输出.</strong></p>\n</li>\n</ul>\n<h2 id=\"pyhon-matplotlib-安装\"><a href=\"#pyhon-matplotlib-安装\" class=\"headerlink\" title=\"pyhon matplotlib 安装\"></a>pyhon matplotlib 安装</h2><ul>\n<li>问题： 安装matplotlib python-tk 网上解决方法需要重新编译 python matplotlib error python Tkinter module not found on Ubuntu</li>\n<li>解决方案</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python3.6-tk</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><a href=\"https://stackoverflow.com/questions/6084416/tkinter-module-not-found-on-ubuntu\" target=\"_blank\" rel=\"noopener\">stackoverflow  链接</a></p>\n</blockquote>\n<h2 id=\"docker-镜像加速\"><a href=\"#docker-镜像加速\" class=\"headerlink\" title=\"docker 镜像加速\"></a>docker 镜像加速</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /etc/docker</span><br><span class=\"line\">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class=\"string\">'EOF'</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"registry-mirrors\"</span>: [<span class=\"string\">\"https://etsgrm2s.mirror.aliyuncs.com\"</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ubuntu-18-04-安装-mysql-5-7-root-密码\"><a href=\"#ubuntu-18-04-安装-mysql-5-7-root-密码\" class=\"headerlink\" title=\"ubuntu-18.04 安装 mysql-5.7 root 密码\"></a>ubuntu-18.04 安装 mysql-5.7 root 密码</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install mysql-server mysql-client</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询 默认 用户名 密码</span></span><br><span class=\"line\">sudo vi /etc/mysql/debian.cnf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 登录 mysql 修改 root 密码</span></span><br><span class=\"line\">update mysql.user <span class=\"built_in\">set</span> authentication_string=password(<span class=\"string\">'password'</span>) <span class=\"built_in\">where</span> user=<span class=\"string\">'root'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改远程连接</span></span><br><span class=\"line\">update user <span class=\"built_in\">set</span> host = <span class=\"string\">'%'</span> <span class=\"built_in\">where</span> user = <span class=\"string\">'root'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改验证方式</span></span><br><span class=\"line\">UPDATE user SET plugin=<span class=\"string\">'mysql_native_password'</span> WHERE User=<span class=\"string\">'root'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## option 2</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; CREATE USER <span class=\"string\">'YOUR_SYSTEM_USER'</span>@<span class=\"string\">'localhost'</span> IDENTIFIED BY <span class=\"string\">''</span>;</span><br><span class=\"line\">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO <span class=\"string\">'YOUR_SYSTEM_USER'</span>@<span class=\"string\">'localhost'</span>;</span><br><span class=\"line\">mysql&gt; UPDATE user SET plugin=<span class=\"string\">'auth_socket'</span> WHERE User=<span class=\"string\">'YOUR_SYSTEM_USER'</span>;</span><br><span class=\"line\">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"python-换源以及格式化pip输出\"><a href=\"#python-换源以及格式化pip输出\" class=\"headerlink\" title=\"python 换源以及格式化pip输出\"></a>python 换源以及格式化pip输出</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~ &amp; mkdir .pip</span><br><span class=\"line\">vi ~/.pip/pip.conf</span><br><span class=\"line\"></span><br><span class=\"line\">[global]</span><br><span class=\"line\">timeout = 60</span><br><span class=\"line\">index-url = http://pypi.douban.com/simple</span><br><span class=\"line\">trusted-host = pypi.douban.com</span><br><span class=\"line\">format=columns</span><br></pre></td></tr></table></figure>"},{"title":"Hexo 教程","date":"2018-04-28T03:18:40.000Z","_content":"## hexo 简介\n\nHexo是高效的静态站点生成框架，它基于Node.js。通过Hexo，你可以直接使用Markdown语法来撰写博客。\n\n## hexo 安装\n\n```bash\n# 全局安装\nnpm install hexo-cli -g\n\n# 初始化\nhexo init blog\n\n# 安装项目依赖\nnpm install\n\n# 插件安装\nnpm install --save hexo-renderer-sass\n\n# 启动本地化服务即可查看项目\nhexo server\n\n# 生成\nhexo g\n\n# 启动本地服务并监听,修改了配置文件还是需要从新生成一遍才可以看到效果\nhexo s --watch\n\n# 如果报一些奇怪的错误不知道怎么解决不妨清除一下重新生成发布\nhexo clean\n\n\n```\n\n## hexo 部署\n\n```bash\n# 部署依赖\nnpm install hexo-deployer-git --save\n\n# 部署文件冲突解决\nrm -rf .deploy_git\nhexo g\nhexo d\n```\n\n## ubuntu 安装\n\n### 环境介紹\n\n主机： ubuntu 18.04\n\n### 安裝依賴\n\n``` bash\nsudo apt-get install nodejs\nsudo apt install npm\nsudo apt install git\nnpm install -g hexo\n```\n\n### hexo 創建\n\n``` bash\nmkdir hexo_init\ncd hexo_init\nhexo init\nhexo g\nhexo s\n```\n\n登錄 http://localhost:4000  查看效果\n\n### 下載主題\n\n``` bash\ngit clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant\nnpm install hexo-renderer-pug --save\nnpm install hexo-renderer-sass --save\n```\n\n### 修改yml文件\n\n```yml\ntheme: maupassant\n\ndeploy:\n  type: git\n  repository: https://github.com/Leo-youngs/Leo-youngs.github.io\n  branch: master\n  message: update\n```\n\n### 生成静态文件\n\n```bash\nhexo generate\n```\n\n更多信息: [Generating](https://hexo.io/docs/generating.html)\n\n### 发布\n\n```bash\nhexo deploy\n```\n\n更多信息: [Deployment](https://hexo.io/docs/deployment.html)\n\n### 其他命令\n\n```bash\n# 生成新的文件夹 用于显示标签分类\nhexo new page categories\nhexo new page tags\n\n# 清理 生成 展示\nhexo clean && hexo g && hexo s\n\n```\n\n## 主题库\n\n[Themes](https://hexo.io/themes/index.html)","source":"_posts/20180428-hexo.md","raw":"---\ntitle: Hexo 教程\ndate: 2018-04-28 11:18:40\ntags: 博客搭建 教程\ncategories: hexo\n---\n## hexo 简介\n\nHexo是高效的静态站点生成框架，它基于Node.js。通过Hexo，你可以直接使用Markdown语法来撰写博客。\n\n## hexo 安装\n\n```bash\n# 全局安装\nnpm install hexo-cli -g\n\n# 初始化\nhexo init blog\n\n# 安装项目依赖\nnpm install\n\n# 插件安装\nnpm install --save hexo-renderer-sass\n\n# 启动本地化服务即可查看项目\nhexo server\n\n# 生成\nhexo g\n\n# 启动本地服务并监听,修改了配置文件还是需要从新生成一遍才可以看到效果\nhexo s --watch\n\n# 如果报一些奇怪的错误不知道怎么解决不妨清除一下重新生成发布\nhexo clean\n\n\n```\n\n## hexo 部署\n\n```bash\n# 部署依赖\nnpm install hexo-deployer-git --save\n\n# 部署文件冲突解决\nrm -rf .deploy_git\nhexo g\nhexo d\n```\n\n## ubuntu 安装\n\n### 环境介紹\n\n主机： ubuntu 18.04\n\n### 安裝依賴\n\n``` bash\nsudo apt-get install nodejs\nsudo apt install npm\nsudo apt install git\nnpm install -g hexo\n```\n\n### hexo 創建\n\n``` bash\nmkdir hexo_init\ncd hexo_init\nhexo init\nhexo g\nhexo s\n```\n\n登錄 http://localhost:4000  查看效果\n\n### 下載主題\n\n``` bash\ngit clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant\nnpm install hexo-renderer-pug --save\nnpm install hexo-renderer-sass --save\n```\n\n### 修改yml文件\n\n```yml\ntheme: maupassant\n\ndeploy:\n  type: git\n  repository: https://github.com/Leo-youngs/Leo-youngs.github.io\n  branch: master\n  message: update\n```\n\n### 生成静态文件\n\n```bash\nhexo generate\n```\n\n更多信息: [Generating](https://hexo.io/docs/generating.html)\n\n### 发布\n\n```bash\nhexo deploy\n```\n\n更多信息: [Deployment](https://hexo.io/docs/deployment.html)\n\n### 其他命令\n\n```bash\n# 生成新的文件夹 用于显示标签分类\nhexo new page categories\nhexo new page tags\n\n# 清理 生成 展示\nhexo clean && hexo g && hexo s\n\n```\n\n## 主题库\n\n[Themes](https://hexo.io/themes/index.html)","slug":"hexo","published":1,"updated":"2019-05-29T10:37:39.954Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwdpk7yd000262xsqrgq84ki","content":"<h2 id=\"hexo-简介\"><a href=\"#hexo-简介\" class=\"headerlink\" title=\"hexo 简介\"></a>hexo 简介</h2><p>Hexo是高效的静态站点生成框架，它基于Node.js。通过Hexo，你可以直接使用Markdown语法来撰写博客。</p>\n<h2 id=\"hexo-安装\"><a href=\"#hexo-安装\" class=\"headerlink\" title=\"hexo 安装\"></a>hexo 安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 全局安装</span></span><br><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化</span></span><br><span class=\"line\">hexo init blog</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装项目依赖</span></span><br><span class=\"line\">npm install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 插件安装</span></span><br><span class=\"line\">npm install --save hexo-renderer-sass</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动本地化服务即可查看项目</span></span><br><span class=\"line\">hexo server</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成</span></span><br><span class=\"line\">hexo g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动本地服务并监听,修改了配置文件还是需要从新生成一遍才可以看到效果</span></span><br><span class=\"line\">hexo s --watch</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果报一些奇怪的错误不知道怎么解决不妨清除一下重新生成发布</span></span><br><span class=\"line\">hexo clean</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"hexo-部署\"><a href=\"#hexo-部署\" class=\"headerlink\" title=\"hexo 部署\"></a>hexo 部署</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 部署依赖</span></span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 部署文件冲突解决</span></span><br><span class=\"line\">rm -rf .deploy_git</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ubuntu-安装\"><a href=\"#ubuntu-安装\" class=\"headerlink\" title=\"ubuntu 安装\"></a>ubuntu 安装</h2><h3 id=\"环境介紹\"><a href=\"#环境介紹\" class=\"headerlink\" title=\"环境介紹\"></a>环境介紹</h3><p>主机： ubuntu 18.04</p>\n<h3 id=\"安裝依賴\"><a href=\"#安裝依賴\" class=\"headerlink\" title=\"安裝依賴\"></a>安裝依賴</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install nodejs</span><br><span class=\"line\">sudo apt install npm</span><br><span class=\"line\">sudo apt install git</span><br><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"hexo-創建\"><a href=\"#hexo-創建\" class=\"headerlink\" title=\"hexo 創建\"></a>hexo 創建</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir hexo_init</span><br><span class=\"line\"><span class=\"built_in\">cd</span> hexo_init</span><br><span class=\"line\">hexo init</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p>登錄 <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"noopener\">http://localhost:4000</a>  查看效果</p>\n<h3 id=\"下載主題\"><a href=\"#下載主題\" class=\"headerlink\" title=\"下載主題\"></a>下載主題</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</span><br><span class=\"line\">npm install hexo-renderer-pug --save</span><br><span class=\"line\">npm install hexo-renderer-sass --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改yml文件\"><a href=\"#修改yml文件\" class=\"headerlink\" title=\"修改yml文件\"></a>修改yml文件</h3><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">maupassant</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repository:</span> <span class=\"attr\">https://github.com/Leo-youngs/Leo-youngs.github.io</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">master</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">update</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>更多信息: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>更多信息: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<h3 id=\"其他命令\"><a href=\"#其他命令\" class=\"headerlink\" title=\"其他命令\"></a>其他命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 生成新的文件夹 用于显示标签分类</span></span><br><span class=\"line\">hexo new page categories</span><br><span class=\"line\">hexo new page tags</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 清理 生成 展示</span></span><br><span class=\"line\">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"主题库\"><a href=\"#主题库\" class=\"headerlink\" title=\"主题库\"></a>主题库</h2><p><a href=\"https://hexo.io/themes/index.html\" target=\"_blank\" rel=\"noopener\">Themes</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"hexo-简介\"><a href=\"#hexo-简介\" class=\"headerlink\" title=\"hexo 简介\"></a>hexo 简介</h2><p>Hexo是高效的静态站点生成框架，它基于Node.js。通过Hexo，你可以直接使用Markdown语法来撰写博客。</p>\n<h2 id=\"hexo-安装\"><a href=\"#hexo-安装\" class=\"headerlink\" title=\"hexo 安装\"></a>hexo 安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 全局安装</span></span><br><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化</span></span><br><span class=\"line\">hexo init blog</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装项目依赖</span></span><br><span class=\"line\">npm install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 插件安装</span></span><br><span class=\"line\">npm install --save hexo-renderer-sass</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动本地化服务即可查看项目</span></span><br><span class=\"line\">hexo server</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成</span></span><br><span class=\"line\">hexo g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动本地服务并监听,修改了配置文件还是需要从新生成一遍才可以看到效果</span></span><br><span class=\"line\">hexo s --watch</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果报一些奇怪的错误不知道怎么解决不妨清除一下重新生成发布</span></span><br><span class=\"line\">hexo clean</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"hexo-部署\"><a href=\"#hexo-部署\" class=\"headerlink\" title=\"hexo 部署\"></a>hexo 部署</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 部署依赖</span></span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 部署文件冲突解决</span></span><br><span class=\"line\">rm -rf .deploy_git</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ubuntu-安装\"><a href=\"#ubuntu-安装\" class=\"headerlink\" title=\"ubuntu 安装\"></a>ubuntu 安装</h2><h3 id=\"环境介紹\"><a href=\"#环境介紹\" class=\"headerlink\" title=\"环境介紹\"></a>环境介紹</h3><p>主机： ubuntu 18.04</p>\n<h3 id=\"安裝依賴\"><a href=\"#安裝依賴\" class=\"headerlink\" title=\"安裝依賴\"></a>安裝依賴</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install nodejs</span><br><span class=\"line\">sudo apt install npm</span><br><span class=\"line\">sudo apt install git</span><br><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"hexo-創建\"><a href=\"#hexo-創建\" class=\"headerlink\" title=\"hexo 創建\"></a>hexo 創建</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir hexo_init</span><br><span class=\"line\"><span class=\"built_in\">cd</span> hexo_init</span><br><span class=\"line\">hexo init</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p>登錄 <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"noopener\">http://localhost:4000</a>  查看效果</p>\n<h3 id=\"下載主題\"><a href=\"#下載主題\" class=\"headerlink\" title=\"下載主題\"></a>下載主題</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</span><br><span class=\"line\">npm install hexo-renderer-pug --save</span><br><span class=\"line\">npm install hexo-renderer-sass --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改yml文件\"><a href=\"#修改yml文件\" class=\"headerlink\" title=\"修改yml文件\"></a>修改yml文件</h3><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">maupassant</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repository:</span> <span class=\"attr\">https://github.com/Leo-youngs/Leo-youngs.github.io</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">master</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">update</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>更多信息: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>更多信息: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<h3 id=\"其他命令\"><a href=\"#其他命令\" class=\"headerlink\" title=\"其他命令\"></a>其他命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 生成新的文件夹 用于显示标签分类</span></span><br><span class=\"line\">hexo new page categories</span><br><span class=\"line\">hexo new page tags</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 清理 生成 展示</span></span><br><span class=\"line\">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"主题库\"><a href=\"#主题库\" class=\"headerlink\" title=\"主题库\"></a>主题库</h2><p><a href=\"https://hexo.io/themes/index.html\" target=\"_blank\" rel=\"noopener\">Themes</a></p>\n"},{"title":"Greenplum","date":"2018-05-30T02:52:58.000Z","_content":"\n## 基本介绍\n\nGreenplum是一个MPP（海量并行处理）计算框架的分布式数据库，其数据库引擎层是基于著名的Postgresql数据库，企业级数据库产品，现已开源。Greenplum拥有丰富的特性，包括：\n\n1. 完全支持ANSI SQL 2008标准和SQL OLAP 2003 扩展，支持ODBC和JDBC\n2. 支持分布式事务，支持ACID\n3. 支持行存储、列存储，以及可通过外部表的方式访问其它关系型数据库或者Hadoop\n4. 拥有良好的线性扩展能力，支持上千个节点\n\n## 环境介绍\n\n|     主机    |  IP |  内存(G)   |  系统  |\n| :--------:  | :-----------:  |:--------:  | :----:  |\n| mdw         | 172.16.16.134  |  16   |   CentOS Linux release 7.4.1708   |\n| sdw1        | 172.16.16.135  | 16   |   CentOS Linux release 7.4.1708   |\n| sdw1        | 172.16.16.138  |  16   |  CentOS Linux release 7.4.1708    |\n\n## 系统参数调整\n\n1. 修改hosts文件(三台主机)\n\n    ``` bash\n    172.16.16.134 mdw\n    172.16.16.135 sdw1\n    172.16.16.138 sdw2\n    ```\n\n2. 修改或添加/etc/sysctl.conf(三台主机)\n\n    ```bash\n    xfs_mount_options = rw,noatime,inode64,allocsize=16m\n    kernel.shmmax = 500000000\n    kernel.shmmni = 4096\n    kernel.shmall = 4000000000\n    kernel.sem = 250 512000 100 2048\n    kernel.sysrq = 1\n    kernel.core_uses_pid = 1\n    kernel.msgmnb = 65536\n    kernel.msgmax = 65536\n    kernel.msgmni = 2048\n    net.ipv4.tcp_syncookies = 1\n    net.ipv4.ip_forward = 0\n    net.ipv4.conf.default.accept_source_route = 0\n    net.ipv4.tcp_tw_recycle = 1\n    net.ipv4.tcp_max_syn_backlog = 4096\n    net.ipv4.conf.all.arp_filter = 1\n    net.ipv4.ip_local_port_range = 1025 65535\n    net.core.netdev_max_backlog = 10000\n    vm.overcommit_memory = 2\n    ```\n\n3. 配置/etc/security/limits.conf文件，添加以下内容(三台主机)\n\n    ``` bash\n    * soft nofile 65536\n    * hard nofile 65536\n    * soft nproc 131072\n    * hard nproc 131072\n    ```\n\n4. 设置预读块的值为16384(三台主机 未设置)\n\n    ``` bash\n    # /sbin/blockdev --getra /dev/sda 查看预读块，默认大小为256\n    # /sbin/blockdev --setra 16384 /dev/sda  设置预读块\n    ```\n\n5. 设置磁盘访问I/O调度策略(三台主机 未设置)\n\n    ``` bash\n    #echo deadline > /sys/block/sda/queue/scheduler\n    ```\n\n6. 启动ssh\n\n    ```bash\n    ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key\n    ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key\n    ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key\n    /usr/sbin/sshd\n    ```\n\n7. 创建greenplum的用户和用户组\n\n    ``` bash\n    groupadd -g 530 gpadmin\n    useradd -g 530 -u 530 -m -d /home/gpadmin -s /bin/bash gpadmin\n    chown -R gpadmin:gpadmin /home/gpadmin\n    passwd gpadmin\n    ```\n\n8. 关闭 iptables，selinux\n\n    ```bash\n    service iptables stop\n    chkconfig iptables off\n\n    [root@mdw selinux]# cat /etc/selinux/config \n    # This file controls the state of SELinux on the system.\n    # SELINUX= can take one of these three values:\n    #     enforcing - SELinux security policy is enforced.\n    #     permissive - SELinux prints warnings instead of enforcing.\n    #     disabled - No SELinux policy is loaded.\n    SELINUX=disabled\n    # SELINUXTYPE= can take one of these two values:\n    #     targeted - Targeted processes are protected,\n    #     mls - Multi Level Security protection.\n    SELINUXTYPE=targeted \n\n    ```\n\n## 下载安装包并安装\n\n1. 官网下载 https://network.pivotal.io/products/pivotal-gpdb  (这里可能需要注册)\n\n    ``` bash\n    # greenplum 安装包\n    greenplum-db-5.8.0-rhel7-x86_64.zip\n\n    # greenplum web管理界面\n    greenplum-cc-web-4.1.1-LINUX-x86_64.zip\n\n    ```\n\n2. 上传服务器并安装\n\n    ```bash\n    unzip greenplum-db-4.2.2.4-build-1-CE-RHEL5-i386.zip\n\n    # 这里输入安装目录(我是安装在当前用户home)\n    /bin/bash greenplum-db-4.2.2.4-build-1-CE-RHEL5-i386.bin\n\n    source ～/greenplum-db/greenplum_path.sh\n    ```\n\n3. 创建 hostlist  &nbsp; seg_hosts &nbsp; gpinitsystem_config\n\n    ```bash\n    cat conf/hostlist\n    mdw\n    sdw1\n    sdw2\n\n    cat conf/seg_hosts\n    sdw1\n    sdw2\n\n    cat conf/gpinitsystem_config\n\n    # Segment 的名称前缀\n    SEG_PREFIX=gpseg\n    # Primary Segment 起始的端口号\n    PORT_BASE=33000\n    # 指定 Primary Segment 的数据目录\n    declare -a DATA_DIRECTORY=(/home/gpadmin/gpdata/gpdatap1  /home/gpadmin/gpdata/gpdatap2)\n    # Master 所在机器的 Hostname\n    MASTER_HOSTNAME=mdw\n    # 指定 Master 的数据目录\n    MASTER_DIRECTORY=/home/gpadmin/gpdata/gpmaster\n    # Master 的端口 \n    MASTER_PORT=2345\n    # 指定Bash的版本\n    TRUSTED_SHELL=/usr/bin/ssh\n    # Mirror Segment起始的端口号\n    MIRROR_PORT_BASE=43000\n    # Primary Segment 主备同步的起始端口号\n    REPLICATION_PORT_BASE=34000\n    # Mirror Segment 主备同步的起始端口号\n    MIRROR_REPLICATION_PORT_BASE=44000\n    # Mirror Segment 的数据目录\n    declare -a MIRROR_DATA_DIRECTORY=(/home/gpadmin/gpdata/gpdatam1 /home/gpadmin/gpdata/gpdatam2)\n\n    ```\n\n4. 设置环境变量，打通所有节点\n\n    ``` bash\n    # 这里需要输入 segment  gpadmin的密码 成功则 completed successfully\n\n\n    gpssh-exkeys -f /home/gpadmin/conf/hostlist \n\n    # 批量创建文件\n    gpssh -f /home/gpadmin/conf/hostlist\n\n    mkdir gpdata\n\n    cd gpdata\n\n    mkdir gpmaster gpdatap1 gpdatap2 gpdatam1 gpdatam2\n    ```\n\n5. 分发安装包\n\n    可以通过软连接的方式 更新greenplum文件位置\n\n    ```bash\n\n    # 打包master节点上的安装包\n    tar -cf gp.tar greenplum-db/\n    # 分发\n    gpscp -f /home/gpadmin/conf/hostlist gp.4.3.tar =:/home/gpadmin/\n\n    gpssh -f hostlist\n\n    tar -xf gp.tar\n\n    ```\n\n6. 在每个节点上配置.bash_profile环境变量\n\n    ```bash\n    [gpadmin@mdw ~]$ cat .bash_profile \n    # .bash_profile\n\n    # Get the aliases and functions\n    if [ -f ~/.bashrc ]; then\n        . ~/.bashrc\n    fi\n\n    # User specific environment and startup programs\n\n    PATH=$PATH:$HOME/bin\n\n    export PATH\n\n    source /home/gpadmin/greenplum-db/greenplum_path.sh\n    export MASTER_DATA_DIRECTORY=/home/gpadmin/gpdata/gpmaster/gpseg-1\n    export PGPORT=2345\n    export PGDATABASE=testDB\n\n    [gpadmin@mdw ~]$ source .bash_profile\n\n    ```\n\n7. 初始化数据库, 默认初始化完成就启动数据库了\n\n    ```bash\n    gpinitsystem -c /home/gpadmin/conf/gpinitsystem_config -a\n    ```\n\n## Greenplum-cc-web监控软件安装\n\n1. 运行gpperfmon_install命令\n\n    * 创建greenplum监控用数据库(gpperfmon)\n\n    * 创建greenplum监控用数据库角色(gpmon),后面登陆网页时使用\n\n    * 配置greenplum数据库文件(pg_hba.conf和.pgpass)\n\n    * 设置postgresql.conf文件，增加启用监控相关的参数。\n\n    ```bash\n    # postgresql.conf 添加\n    checkpoint_segments=8\n    gp_enable_gpperfmon=on\n    gpperfmon_port=8888\n    gp_external_enable_exec=on\n    gpperfmon_log_alert_level='warning'\n    gp_enable_query_metrics=on\n\n    # 安装 gpperfmon\n    gpperfmon_install  --enable  --password  gpmon  --port 2345\n\n    # 重启\n    gpstop -r\n\n    # 查看配置是否成功\n    ps -ef |grep gpmmon |grep -v grep\n    ```\n\n2. 安装 GreenplumCommand Center Console (默认所有节点都会安装)\n\n    ```bash\n    unzip greenplum-cc-web-4.1.1-LINUX-x86_64.zip\n\n    ./greenplum-cc-web-4.1.1-LINUX-x86_64.bin\n\n    source ~/greenplum-cc-web/gpcc_path.sh\n    ```\n\n3. 启动\n\n    ```bash\n    gpcc start\n    ```\n\n## 扩充节点\n\n1. 按照如上配置在主机环境\n\n2. 生成expand 配置文件\n\n    ```bash\n    cat expand\n\n    sdw2:sdw2:33002:/data/gpdata/gpdatap1:6:2:p:34002\n    sdw2:sdw2:33003:/data/gpdata/gpdatam1:7:2:m:34003\n\n    内容包括几个字段\n    hostname     主机名\n    address        类似主机名\n    port              segment监听端口\n    fselocation   segment data目录,注意是全路径\n    dbid              gp集群的唯一ID，可以到gp_segment_configuration中获得，必须顺序累加\n    content                 可以到gp_segment_configuration中获得，必须顺序累加\n    prefered_role        角色(p或m)(primary , mirror)\n    replication_port     如果没有mirror则不需要(用于replication的端口)。\n    ```\n\n    ```bash\n    # 查看现有节点情况\n    select * from gp_segment_configuration ;\n\n    # 查看节点数据目录\n    select * from pg_filespace_entry ;\n    ```\n\n    配置文件可以根据以上两个表进行修改， 也可以\n\n    ```bash\n    # cat host\n    sdw2\n\n    gpexpand -f ./host\n\n    ```\n\n3. 运行 `gpexpand -i expand`\n\n4. 数据重分布  `gpexpand  -d 6:00:00` (后面跟需要的时间)\n\n5. 看着日志，错了就回滚  \n\n参考连接 :\n\nhttps://yq.aliyun.com/articles/177\n\nhttps://discuss.pivotal.io/hc/en-us/articles/201202707-How-to-Use-gpexpand-Working-with-One-Host\n\n## BUG 记录\n\n1. Failed to complete obtain psql count Master gp_segment_configuration Script Exiti\n\n    * 问题： 在初始化过程中，如到以下问题：\n\n    ```bash\n    gpadmin-[FATAL]:-Failed to complete obtain psql count Master gp_segment_configuration  Script Exiting!\n    Script has left Greenplum Database in an incomplete state\n    ```\n\n    * 解决方法：\n\n    ```bash\n    echo \"RemoveIPC=no\" >> /etc/systemd/logind.conf\n    /bin/systemctl restart systemd-logind.service\n    ```\n\n2. gpstart error: Do not have enough valid segments to start the array\n\n    * 问题： gpinit 成功了在 gpstart的时候出错\n\n    * 解决： 彻底关闭防火墙并检查是否配置开机自启\n\n## 参考文档\n\n[官方文档](https://gpdb.docs.pivotal.io/580/main/index.html)\n\n[中文文档](https://gp-docs-cn.github.io/docs/common/gpdb-features.html)\n\n[cc-web 官方文档](http://gpcc.docs.pivotal.io/410/welcome.html)","source":"_posts/20180530-greenplum.md","raw":"---\ntitle: Greenplum\ndate: 2018-05-30 10:52:58\ntags: 数据仓库 教程\ncategories: data warehouse\n---\n\n## 基本介绍\n\nGreenplum是一个MPP（海量并行处理）计算框架的分布式数据库，其数据库引擎层是基于著名的Postgresql数据库，企业级数据库产品，现已开源。Greenplum拥有丰富的特性，包括：\n\n1. 完全支持ANSI SQL 2008标准和SQL OLAP 2003 扩展，支持ODBC和JDBC\n2. 支持分布式事务，支持ACID\n3. 支持行存储、列存储，以及可通过外部表的方式访问其它关系型数据库或者Hadoop\n4. 拥有良好的线性扩展能力，支持上千个节点\n\n## 环境介绍\n\n|     主机    |  IP |  内存(G)   |  系统  |\n| :--------:  | :-----------:  |:--------:  | :----:  |\n| mdw         | 172.16.16.134  |  16   |   CentOS Linux release 7.4.1708   |\n| sdw1        | 172.16.16.135  | 16   |   CentOS Linux release 7.4.1708   |\n| sdw1        | 172.16.16.138  |  16   |  CentOS Linux release 7.4.1708    |\n\n## 系统参数调整\n\n1. 修改hosts文件(三台主机)\n\n    ``` bash\n    172.16.16.134 mdw\n    172.16.16.135 sdw1\n    172.16.16.138 sdw2\n    ```\n\n2. 修改或添加/etc/sysctl.conf(三台主机)\n\n    ```bash\n    xfs_mount_options = rw,noatime,inode64,allocsize=16m\n    kernel.shmmax = 500000000\n    kernel.shmmni = 4096\n    kernel.shmall = 4000000000\n    kernel.sem = 250 512000 100 2048\n    kernel.sysrq = 1\n    kernel.core_uses_pid = 1\n    kernel.msgmnb = 65536\n    kernel.msgmax = 65536\n    kernel.msgmni = 2048\n    net.ipv4.tcp_syncookies = 1\n    net.ipv4.ip_forward = 0\n    net.ipv4.conf.default.accept_source_route = 0\n    net.ipv4.tcp_tw_recycle = 1\n    net.ipv4.tcp_max_syn_backlog = 4096\n    net.ipv4.conf.all.arp_filter = 1\n    net.ipv4.ip_local_port_range = 1025 65535\n    net.core.netdev_max_backlog = 10000\n    vm.overcommit_memory = 2\n    ```\n\n3. 配置/etc/security/limits.conf文件，添加以下内容(三台主机)\n\n    ``` bash\n    * soft nofile 65536\n    * hard nofile 65536\n    * soft nproc 131072\n    * hard nproc 131072\n    ```\n\n4. 设置预读块的值为16384(三台主机 未设置)\n\n    ``` bash\n    # /sbin/blockdev --getra /dev/sda 查看预读块，默认大小为256\n    # /sbin/blockdev --setra 16384 /dev/sda  设置预读块\n    ```\n\n5. 设置磁盘访问I/O调度策略(三台主机 未设置)\n\n    ``` bash\n    #echo deadline > /sys/block/sda/queue/scheduler\n    ```\n\n6. 启动ssh\n\n    ```bash\n    ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key\n    ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key\n    ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key\n    /usr/sbin/sshd\n    ```\n\n7. 创建greenplum的用户和用户组\n\n    ``` bash\n    groupadd -g 530 gpadmin\n    useradd -g 530 -u 530 -m -d /home/gpadmin -s /bin/bash gpadmin\n    chown -R gpadmin:gpadmin /home/gpadmin\n    passwd gpadmin\n    ```\n\n8. 关闭 iptables，selinux\n\n    ```bash\n    service iptables stop\n    chkconfig iptables off\n\n    [root@mdw selinux]# cat /etc/selinux/config \n    # This file controls the state of SELinux on the system.\n    # SELINUX= can take one of these three values:\n    #     enforcing - SELinux security policy is enforced.\n    #     permissive - SELinux prints warnings instead of enforcing.\n    #     disabled - No SELinux policy is loaded.\n    SELINUX=disabled\n    # SELINUXTYPE= can take one of these two values:\n    #     targeted - Targeted processes are protected,\n    #     mls - Multi Level Security protection.\n    SELINUXTYPE=targeted \n\n    ```\n\n## 下载安装包并安装\n\n1. 官网下载 https://network.pivotal.io/products/pivotal-gpdb  (这里可能需要注册)\n\n    ``` bash\n    # greenplum 安装包\n    greenplum-db-5.8.0-rhel7-x86_64.zip\n\n    # greenplum web管理界面\n    greenplum-cc-web-4.1.1-LINUX-x86_64.zip\n\n    ```\n\n2. 上传服务器并安装\n\n    ```bash\n    unzip greenplum-db-4.2.2.4-build-1-CE-RHEL5-i386.zip\n\n    # 这里输入安装目录(我是安装在当前用户home)\n    /bin/bash greenplum-db-4.2.2.4-build-1-CE-RHEL5-i386.bin\n\n    source ～/greenplum-db/greenplum_path.sh\n    ```\n\n3. 创建 hostlist  &nbsp; seg_hosts &nbsp; gpinitsystem_config\n\n    ```bash\n    cat conf/hostlist\n    mdw\n    sdw1\n    sdw2\n\n    cat conf/seg_hosts\n    sdw1\n    sdw2\n\n    cat conf/gpinitsystem_config\n\n    # Segment 的名称前缀\n    SEG_PREFIX=gpseg\n    # Primary Segment 起始的端口号\n    PORT_BASE=33000\n    # 指定 Primary Segment 的数据目录\n    declare -a DATA_DIRECTORY=(/home/gpadmin/gpdata/gpdatap1  /home/gpadmin/gpdata/gpdatap2)\n    # Master 所在机器的 Hostname\n    MASTER_HOSTNAME=mdw\n    # 指定 Master 的数据目录\n    MASTER_DIRECTORY=/home/gpadmin/gpdata/gpmaster\n    # Master 的端口 \n    MASTER_PORT=2345\n    # 指定Bash的版本\n    TRUSTED_SHELL=/usr/bin/ssh\n    # Mirror Segment起始的端口号\n    MIRROR_PORT_BASE=43000\n    # Primary Segment 主备同步的起始端口号\n    REPLICATION_PORT_BASE=34000\n    # Mirror Segment 主备同步的起始端口号\n    MIRROR_REPLICATION_PORT_BASE=44000\n    # Mirror Segment 的数据目录\n    declare -a MIRROR_DATA_DIRECTORY=(/home/gpadmin/gpdata/gpdatam1 /home/gpadmin/gpdata/gpdatam2)\n\n    ```\n\n4. 设置环境变量，打通所有节点\n\n    ``` bash\n    # 这里需要输入 segment  gpadmin的密码 成功则 completed successfully\n\n\n    gpssh-exkeys -f /home/gpadmin/conf/hostlist \n\n    # 批量创建文件\n    gpssh -f /home/gpadmin/conf/hostlist\n\n    mkdir gpdata\n\n    cd gpdata\n\n    mkdir gpmaster gpdatap1 gpdatap2 gpdatam1 gpdatam2\n    ```\n\n5. 分发安装包\n\n    可以通过软连接的方式 更新greenplum文件位置\n\n    ```bash\n\n    # 打包master节点上的安装包\n    tar -cf gp.tar greenplum-db/\n    # 分发\n    gpscp -f /home/gpadmin/conf/hostlist gp.4.3.tar =:/home/gpadmin/\n\n    gpssh -f hostlist\n\n    tar -xf gp.tar\n\n    ```\n\n6. 在每个节点上配置.bash_profile环境变量\n\n    ```bash\n    [gpadmin@mdw ~]$ cat .bash_profile \n    # .bash_profile\n\n    # Get the aliases and functions\n    if [ -f ~/.bashrc ]; then\n        . ~/.bashrc\n    fi\n\n    # User specific environment and startup programs\n\n    PATH=$PATH:$HOME/bin\n\n    export PATH\n\n    source /home/gpadmin/greenplum-db/greenplum_path.sh\n    export MASTER_DATA_DIRECTORY=/home/gpadmin/gpdata/gpmaster/gpseg-1\n    export PGPORT=2345\n    export PGDATABASE=testDB\n\n    [gpadmin@mdw ~]$ source .bash_profile\n\n    ```\n\n7. 初始化数据库, 默认初始化完成就启动数据库了\n\n    ```bash\n    gpinitsystem -c /home/gpadmin/conf/gpinitsystem_config -a\n    ```\n\n## Greenplum-cc-web监控软件安装\n\n1. 运行gpperfmon_install命令\n\n    * 创建greenplum监控用数据库(gpperfmon)\n\n    * 创建greenplum监控用数据库角色(gpmon),后面登陆网页时使用\n\n    * 配置greenplum数据库文件(pg_hba.conf和.pgpass)\n\n    * 设置postgresql.conf文件，增加启用监控相关的参数。\n\n    ```bash\n    # postgresql.conf 添加\n    checkpoint_segments=8\n    gp_enable_gpperfmon=on\n    gpperfmon_port=8888\n    gp_external_enable_exec=on\n    gpperfmon_log_alert_level='warning'\n    gp_enable_query_metrics=on\n\n    # 安装 gpperfmon\n    gpperfmon_install  --enable  --password  gpmon  --port 2345\n\n    # 重启\n    gpstop -r\n\n    # 查看配置是否成功\n    ps -ef |grep gpmmon |grep -v grep\n    ```\n\n2. 安装 GreenplumCommand Center Console (默认所有节点都会安装)\n\n    ```bash\n    unzip greenplum-cc-web-4.1.1-LINUX-x86_64.zip\n\n    ./greenplum-cc-web-4.1.1-LINUX-x86_64.bin\n\n    source ~/greenplum-cc-web/gpcc_path.sh\n    ```\n\n3. 启动\n\n    ```bash\n    gpcc start\n    ```\n\n## 扩充节点\n\n1. 按照如上配置在主机环境\n\n2. 生成expand 配置文件\n\n    ```bash\n    cat expand\n\n    sdw2:sdw2:33002:/data/gpdata/gpdatap1:6:2:p:34002\n    sdw2:sdw2:33003:/data/gpdata/gpdatam1:7:2:m:34003\n\n    内容包括几个字段\n    hostname     主机名\n    address        类似主机名\n    port              segment监听端口\n    fselocation   segment data目录,注意是全路径\n    dbid              gp集群的唯一ID，可以到gp_segment_configuration中获得，必须顺序累加\n    content                 可以到gp_segment_configuration中获得，必须顺序累加\n    prefered_role        角色(p或m)(primary , mirror)\n    replication_port     如果没有mirror则不需要(用于replication的端口)。\n    ```\n\n    ```bash\n    # 查看现有节点情况\n    select * from gp_segment_configuration ;\n\n    # 查看节点数据目录\n    select * from pg_filespace_entry ;\n    ```\n\n    配置文件可以根据以上两个表进行修改， 也可以\n\n    ```bash\n    # cat host\n    sdw2\n\n    gpexpand -f ./host\n\n    ```\n\n3. 运行 `gpexpand -i expand`\n\n4. 数据重分布  `gpexpand  -d 6:00:00` (后面跟需要的时间)\n\n5. 看着日志，错了就回滚  \n\n参考连接 :\n\nhttps://yq.aliyun.com/articles/177\n\nhttps://discuss.pivotal.io/hc/en-us/articles/201202707-How-to-Use-gpexpand-Working-with-One-Host\n\n## BUG 记录\n\n1. Failed to complete obtain psql count Master gp_segment_configuration Script Exiti\n\n    * 问题： 在初始化过程中，如到以下问题：\n\n    ```bash\n    gpadmin-[FATAL]:-Failed to complete obtain psql count Master gp_segment_configuration  Script Exiting!\n    Script has left Greenplum Database in an incomplete state\n    ```\n\n    * 解决方法：\n\n    ```bash\n    echo \"RemoveIPC=no\" >> /etc/systemd/logind.conf\n    /bin/systemctl restart systemd-logind.service\n    ```\n\n2. gpstart error: Do not have enough valid segments to start the array\n\n    * 问题： gpinit 成功了在 gpstart的时候出错\n\n    * 解决： 彻底关闭防火墙并检查是否配置开机自启\n\n## 参考文档\n\n[官方文档](https://gpdb.docs.pivotal.io/580/main/index.html)\n\n[中文文档](https://gp-docs-cn.github.io/docs/common/gpdb-features.html)\n\n[cc-web 官方文档](http://gpcc.docs.pivotal.io/410/welcome.html)","slug":"greenplum","published":1,"updated":"2019-05-29T10:29:17.465Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwdpk7yh000662xspxc8m86q","content":"<h2 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h2><p>Greenplum是一个MPP（海量并行处理）计算框架的分布式数据库，其数据库引擎层是基于著名的Postgresql数据库，企业级数据库产品，现已开源。Greenplum拥有丰富的特性，包括：</p>\n<ol>\n<li>完全支持ANSI SQL 2008标准和SQL OLAP 2003 扩展，支持ODBC和JDBC</li>\n<li>支持分布式事务，支持ACID</li>\n<li>支持行存储、列存储，以及可通过外部表的方式访问其它关系型数据库或者Hadoop</li>\n<li>拥有良好的线性扩展能力，支持上千个节点</li>\n</ol>\n<h2 id=\"环境介绍\"><a href=\"#环境介绍\" class=\"headerlink\" title=\"环境介绍\"></a>环境介绍</h2><table>\n<thead>\n<tr>\n<th align=\"center\">主机</th>\n<th align=\"center\">IP</th>\n<th align=\"center\">内存(G)</th>\n<th align=\"center\">系统</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">mdw</td>\n<td align=\"center\">172.16.16.134</td>\n<td align=\"center\">16</td>\n<td align=\"center\">CentOS Linux release 7.4.1708</td>\n</tr>\n<tr>\n<td align=\"center\">sdw1</td>\n<td align=\"center\">172.16.16.135</td>\n<td align=\"center\">16</td>\n<td align=\"center\">CentOS Linux release 7.4.1708</td>\n</tr>\n<tr>\n<td align=\"center\">sdw1</td>\n<td align=\"center\">172.16.16.138</td>\n<td align=\"center\">16</td>\n<td align=\"center\">CentOS Linux release 7.4.1708</td>\n</tr>\n</tbody></table>\n<h2 id=\"系统参数调整\"><a href=\"#系统参数调整\" class=\"headerlink\" title=\"系统参数调整\"></a>系统参数调整</h2><ol>\n<li><p>修改hosts文件(三台主机)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">172.16.16.134 mdw</span><br><span class=\"line\">172.16.16.135 sdw1</span><br><span class=\"line\">172.16.16.138 sdw2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改或添加/etc/sysctl.conf(三台主机)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xfs_mount_options = rw,noatime,inode64,allocsize=16m</span><br><span class=\"line\">kernel.shmmax = 500000000</span><br><span class=\"line\">kernel.shmmni = 4096</span><br><span class=\"line\">kernel.shmall = 4000000000</span><br><span class=\"line\">kernel.sem = 250 512000 100 2048</span><br><span class=\"line\">kernel.sysrq = 1</span><br><span class=\"line\">kernel.core_uses_pid = 1</span><br><span class=\"line\">kernel.msgmnb = 65536</span><br><span class=\"line\">kernel.msgmax = 65536</span><br><span class=\"line\">kernel.msgmni = 2048</span><br><span class=\"line\">net.ipv4.tcp_syncookies = 1</span><br><span class=\"line\">net.ipv4.ip_forward = 0</span><br><span class=\"line\">net.ipv4.conf.default.accept_source_route = 0</span><br><span class=\"line\">net.ipv4.tcp_tw_recycle = 1</span><br><span class=\"line\">net.ipv4.tcp_max_syn_backlog = 4096</span><br><span class=\"line\">net.ipv4.conf.all.arp_filter = 1</span><br><span class=\"line\">net.ipv4.ip_local_port_range = 1025 65535</span><br><span class=\"line\">net.core.netdev_max_backlog = 10000</span><br><span class=\"line\">vm.overcommit_memory = 2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置/etc/security/limits.conf文件，添加以下内容(三台主机)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* soft nofile 65536</span><br><span class=\"line\">* hard nofile 65536</span><br><span class=\"line\">* soft nproc 131072</span><br><span class=\"line\">* hard nproc 131072</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置预读块的值为16384(三台主机 未设置)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /sbin/blockdev --getra /dev/sda 查看预读块，默认大小为256</span></span><br><span class=\"line\"><span class=\"comment\"># /sbin/blockdev --setra 16384 /dev/sda  设置预读块</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置磁盘访问I/O调度策略(三台主机 未设置)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#echo deadline &gt; /sys/block/sda/queue/scheduler</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动ssh</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key</span><br><span class=\"line\">ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key</span><br><span class=\"line\">ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key</span><br><span class=\"line\">/usr/sbin/sshd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建greenplum的用户和用户组</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">groupadd -g 530 gpadmin</span><br><span class=\"line\">useradd -g 530 -u 530 -m -d /home/gpadmin -s /bin/bash gpadmin</span><br><span class=\"line\">chown -R gpadmin:gpadmin /home/gpadmin</span><br><span class=\"line\">passwd gpadmin</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>关闭 iptables，selinux</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service iptables stop</span><br><span class=\"line\">chkconfig iptables off</span><br><span class=\"line\"></span><br><span class=\"line\">[root@mdw selinux]<span class=\"comment\"># cat /etc/selinux/config </span></span><br><span class=\"line\"><span class=\"comment\"># This file controls the state of SELinux on the system.</span></span><br><span class=\"line\"><span class=\"comment\"># SELINUX= can take one of these three values:</span></span><br><span class=\"line\"><span class=\"comment\">#     enforcing - SELinux security policy is enforced.</span></span><br><span class=\"line\"><span class=\"comment\">#     permissive - SELinux prints warnings instead of enforcing.</span></span><br><span class=\"line\"><span class=\"comment\">#     disabled - No SELinux policy is loaded.</span></span><br><span class=\"line\">SELINUX=disabled</span><br><span class=\"line\"><span class=\"comment\"># SELINUXTYPE= can take one of these two values:</span></span><br><span class=\"line\"><span class=\"comment\">#     targeted - Targeted processes are protected,</span></span><br><span class=\"line\"><span class=\"comment\">#     mls - Multi Level Security protection.</span></span><br><span class=\"line\">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"下载安装包并安装\"><a href=\"#下载安装包并安装\" class=\"headerlink\" title=\"下载安装包并安装\"></a>下载安装包并安装</h2><ol>\n<li><p>官网下载 <a href=\"https://network.pivotal.io/products/pivotal-gpdb\" target=\"_blank\" rel=\"noopener\">https://network.pivotal.io/products/pivotal-gpdb</a>  (这里可能需要注册)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># greenplum 安装包</span></span><br><span class=\"line\">greenplum-db-5.8.0-rhel7-x86_64.zip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># greenplum web管理界面</span></span><br><span class=\"line\">greenplum-cc-web-4.1.1-LINUX-x86_64.zip</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>上传服务器并安装</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip greenplum-db-4.2.2.4-build-1-CE-RHEL5-i386.zip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这里输入安装目录(我是安装在当前用户home)</span></span><br><span class=\"line\">/bin/bash greenplum-db-4.2.2.4-build-1-CE-RHEL5-i386.bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ～/greenplum-db/greenplum_path.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建 hostlist  &nbsp; seg_hosts &nbsp; gpinitsystem_config</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat conf/hostlist</span><br><span class=\"line\">mdw</span><br><span class=\"line\">sdw1</span><br><span class=\"line\">sdw2</span><br><span class=\"line\"></span><br><span class=\"line\">cat conf/seg_hosts</span><br><span class=\"line\">sdw1</span><br><span class=\"line\">sdw2</span><br><span class=\"line\"></span><br><span class=\"line\">cat conf/gpinitsystem_config</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Segment 的名称前缀</span></span><br><span class=\"line\">SEG_PREFIX=gpseg</span><br><span class=\"line\"><span class=\"comment\"># Primary Segment 起始的端口号</span></span><br><span class=\"line\">PORT_BASE=33000</span><br><span class=\"line\"><span class=\"comment\"># 指定 Primary Segment 的数据目录</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -a DATA_DIRECTORY=(/home/gpadmin/gpdata/gpdatap1  /home/gpadmin/gpdata/gpdatap2)</span><br><span class=\"line\"><span class=\"comment\"># Master 所在机器的 Hostname</span></span><br><span class=\"line\">MASTER_HOSTNAME=mdw</span><br><span class=\"line\"><span class=\"comment\"># 指定 Master 的数据目录</span></span><br><span class=\"line\">MASTER_DIRECTORY=/home/gpadmin/gpdata/gpmaster</span><br><span class=\"line\"><span class=\"comment\"># Master 的端口 </span></span><br><span class=\"line\">MASTER_PORT=2345</span><br><span class=\"line\"><span class=\"comment\"># 指定Bash的版本</span></span><br><span class=\"line\">TRUSTED_SHELL=/usr/bin/ssh</span><br><span class=\"line\"><span class=\"comment\"># Mirror Segment起始的端口号</span></span><br><span class=\"line\">MIRROR_PORT_BASE=43000</span><br><span class=\"line\"><span class=\"comment\"># Primary Segment 主备同步的起始端口号</span></span><br><span class=\"line\">REPLICATION_PORT_BASE=34000</span><br><span class=\"line\"><span class=\"comment\"># Mirror Segment 主备同步的起始端口号</span></span><br><span class=\"line\">MIRROR_REPLICATION_PORT_BASE=44000</span><br><span class=\"line\"><span class=\"comment\"># Mirror Segment 的数据目录</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -a MIRROR_DATA_DIRECTORY=(/home/gpadmin/gpdata/gpdatam1 /home/gpadmin/gpdata/gpdatam2)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置环境变量，打通所有节点</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这里需要输入 segment  gpadmin的密码 成功则 completed successfully</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">gpssh-exkeys -f /home/gpadmin/conf/hostlist </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 批量创建文件</span></span><br><span class=\"line\">gpssh -f /home/gpadmin/conf/hostlist</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir gpdata</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> gpdata</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir gpmaster gpdatap1 gpdatap2 gpdatam1 gpdatam2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>分发安装包</p>\n<p> 可以通过软连接的方式 更新greenplum文件位置</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打包master节点上的安装包</span></span><br><span class=\"line\">tar -cf gp.tar greenplum-db/</span><br><span class=\"line\"><span class=\"comment\"># 分发</span></span><br><span class=\"line\">gpscp -f /home/gpadmin/conf/hostlist gp.4.3.tar =:/home/gpadmin/</span><br><span class=\"line\"></span><br><span class=\"line\">gpssh -f hostlist</span><br><span class=\"line\"></span><br><span class=\"line\">tar -xf gp.tar</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在每个节点上配置.bash_profile环境变量</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[gpadmin@mdw ~]$ cat .bash_profile </span><br><span class=\"line\"><span class=\"comment\"># .bash_profile</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Get the aliases and functions</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -f ~/.bashrc ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    . ~/.bashrc</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># User specific environment and startup programs</span></span><br><span class=\"line\"></span><br><span class=\"line\">PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$HOME</span>/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> /home/gpadmin/greenplum-db/greenplum_path.sh</span><br><span class=\"line\"><span class=\"built_in\">export</span> MASTER_DATA_DIRECTORY=/home/gpadmin/gpdata/gpmaster/gpseg-1</span><br><span class=\"line\"><span class=\"built_in\">export</span> PGPORT=2345</span><br><span class=\"line\"><span class=\"built_in\">export</span> PGDATABASE=testDB</span><br><span class=\"line\"></span><br><span class=\"line\">[gpadmin@mdw ~]$ <span class=\"built_in\">source</span> .bash_profile</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>初始化数据库, 默认初始化完成就启动数据库了</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpinitsystem -c /home/gpadmin/conf/gpinitsystem_config -a</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"Greenplum-cc-web监控软件安装\"><a href=\"#Greenplum-cc-web监控软件安装\" class=\"headerlink\" title=\"Greenplum-cc-web监控软件安装\"></a>Greenplum-cc-web监控软件安装</h2><ol>\n<li><p>运行gpperfmon_install命令</p>\n<ul>\n<li><p>创建greenplum监控用数据库(gpperfmon)</p>\n</li>\n<li><p>创建greenplum监控用数据库角色(gpmon),后面登陆网页时使用</p>\n</li>\n<li><p>配置greenplum数据库文件(pg_hba.conf和.pgpass)</p>\n</li>\n<li><p>设置postgresql.conf文件，增加启用监控相关的参数。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># postgresql.conf 添加</span></span><br><span class=\"line\">checkpoint_segments=8</span><br><span class=\"line\">gp_enable_gpperfmon=on</span><br><span class=\"line\">gpperfmon_port=8888</span><br><span class=\"line\">gp_external_enable_exec=on</span><br><span class=\"line\">gpperfmon_log_alert_level=<span class=\"string\">'warning'</span></span><br><span class=\"line\">gp_enable_query_metrics=on</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装 gpperfmon</span></span><br><span class=\"line\">gpperfmon_install  --<span class=\"built_in\">enable</span>  --password  gpmon  --port 2345</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启</span></span><br><span class=\"line\">gpstop -r</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看配置是否成功</span></span><br><span class=\"line\">ps -ef |grep gpmmon |grep -v grep</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>安装 GreenplumCommand Center Console (默认所有节点都会安装)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip greenplum-cc-web-4.1.1-LINUX-x86_64.zip</span><br><span class=\"line\"></span><br><span class=\"line\">./greenplum-cc-web-4.1.1-LINUX-x86_64.bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/greenplum-cc-web/gpcc_path.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpcc start</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"扩充节点\"><a href=\"#扩充节点\" class=\"headerlink\" title=\"扩充节点\"></a>扩充节点</h2><ol>\n<li><p>按照如上配置在主机环境</p>\n</li>\n<li><p>生成expand 配置文件</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat expand</span><br><span class=\"line\"></span><br><span class=\"line\">sdw2:sdw2:33002:/data/gpdata/gpdatap1:6:2:p:34002</span><br><span class=\"line\">sdw2:sdw2:33003:/data/gpdata/gpdatam1:7:2:m:34003</span><br><span class=\"line\"></span><br><span class=\"line\">内容包括几个字段</span><br><span class=\"line\">hostname     主机名</span><br><span class=\"line\">address        类似主机名</span><br><span class=\"line\">port              segment监听端口</span><br><span class=\"line\">fselocation   segment data目录,注意是全路径</span><br><span class=\"line\">dbid              gp集群的唯一ID，可以到gp_segment_configuration中获得，必须顺序累加</span><br><span class=\"line\">content                 可以到gp_segment_configuration中获得，必须顺序累加</span><br><span class=\"line\">prefered_role        角色(p或m)(primary , mirror)</span><br><span class=\"line\">replication_port     如果没有mirror则不需要(用于replication的端口)。</span><br></pre></td></tr></table></figure>\n\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看现有节点情况</span></span><br><span class=\"line\">select * from gp_segment_configuration ;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看节点数据目录</span></span><br><span class=\"line\">select * from pg_filespace_entry ;</span><br></pre></td></tr></table></figure>\n\n<p> 配置文件可以根据以上两个表进行修改， 也可以</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cat host</span></span><br><span class=\"line\">sdw2</span><br><span class=\"line\"></span><br><span class=\"line\">gpexpand -f ./host</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>运行 <code>gpexpand -i expand</code></p>\n</li>\n<li><p>数据重分布  <code>gpexpand  -d 6:00:00</code> (后面跟需要的时间)</p>\n</li>\n<li><p>看着日志，错了就回滚  </p>\n</li>\n</ol>\n<p>参考连接 :</p>\n<p><a href=\"https://yq.aliyun.com/articles/177\" target=\"_blank\" rel=\"noopener\">https://yq.aliyun.com/articles/177</a></p>\n<p><a href=\"https://discuss.pivotal.io/hc/en-us/articles/201202707-How-to-Use-gpexpand-Working-with-One-Host\" target=\"_blank\" rel=\"noopener\">https://discuss.pivotal.io/hc/en-us/articles/201202707-How-to-Use-gpexpand-Working-with-One-Host</a></p>\n<h2 id=\"BUG-记录\"><a href=\"#BUG-记录\" class=\"headerlink\" title=\"BUG 记录\"></a>BUG 记录</h2><ol>\n<li><p>Failed to complete obtain psql count Master gp_segment_configuration Script Exiti</p>\n<ul>\n<li><p>问题： 在初始化过程中，如到以下问题：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpadmin-[FATAL]:-Failed to complete obtain psql count Master gp_segment_configuration  Script Exiting!</span><br><span class=\"line\">Script has left Greenplum Database <span class=\"keyword\">in</span> an incomplete state</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解决方法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"RemoveIPC=no\"</span> &gt;&gt; /etc/systemd/logind.conf</span><br><span class=\"line\">/bin/systemctl restart systemd-logind.service</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>gpstart error: Do not have enough valid segments to start the array</p>\n<ul>\n<li><p>问题： gpinit 成功了在 gpstart的时候出错</p>\n</li>\n<li><p>解决： 彻底关闭防火墙并检查是否配置开机自启</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"https://gpdb.docs.pivotal.io/580/main/index.html\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p><a href=\"https://gp-docs-cn.github.io/docs/common/gpdb-features.html\" target=\"_blank\" rel=\"noopener\">中文文档</a></p>\n<p><a href=\"http://gpcc.docs.pivotal.io/410/welcome.html\" target=\"_blank\" rel=\"noopener\">cc-web 官方文档</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h2><p>Greenplum是一个MPP（海量并行处理）计算框架的分布式数据库，其数据库引擎层是基于著名的Postgresql数据库，企业级数据库产品，现已开源。Greenplum拥有丰富的特性，包括：</p>\n<ol>\n<li>完全支持ANSI SQL 2008标准和SQL OLAP 2003 扩展，支持ODBC和JDBC</li>\n<li>支持分布式事务，支持ACID</li>\n<li>支持行存储、列存储，以及可通过外部表的方式访问其它关系型数据库或者Hadoop</li>\n<li>拥有良好的线性扩展能力，支持上千个节点</li>\n</ol>\n<h2 id=\"环境介绍\"><a href=\"#环境介绍\" class=\"headerlink\" title=\"环境介绍\"></a>环境介绍</h2><table>\n<thead>\n<tr>\n<th align=\"center\">主机</th>\n<th align=\"center\">IP</th>\n<th align=\"center\">内存(G)</th>\n<th align=\"center\">系统</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">mdw</td>\n<td align=\"center\">172.16.16.134</td>\n<td align=\"center\">16</td>\n<td align=\"center\">CentOS Linux release 7.4.1708</td>\n</tr>\n<tr>\n<td align=\"center\">sdw1</td>\n<td align=\"center\">172.16.16.135</td>\n<td align=\"center\">16</td>\n<td align=\"center\">CentOS Linux release 7.4.1708</td>\n</tr>\n<tr>\n<td align=\"center\">sdw1</td>\n<td align=\"center\">172.16.16.138</td>\n<td align=\"center\">16</td>\n<td align=\"center\">CentOS Linux release 7.4.1708</td>\n</tr>\n</tbody></table>\n<h2 id=\"系统参数调整\"><a href=\"#系统参数调整\" class=\"headerlink\" title=\"系统参数调整\"></a>系统参数调整</h2><ol>\n<li><p>修改hosts文件(三台主机)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">172.16.16.134 mdw</span><br><span class=\"line\">172.16.16.135 sdw1</span><br><span class=\"line\">172.16.16.138 sdw2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改或添加/etc/sysctl.conf(三台主机)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xfs_mount_options = rw,noatime,inode64,allocsize=16m</span><br><span class=\"line\">kernel.shmmax = 500000000</span><br><span class=\"line\">kernel.shmmni = 4096</span><br><span class=\"line\">kernel.shmall = 4000000000</span><br><span class=\"line\">kernel.sem = 250 512000 100 2048</span><br><span class=\"line\">kernel.sysrq = 1</span><br><span class=\"line\">kernel.core_uses_pid = 1</span><br><span class=\"line\">kernel.msgmnb = 65536</span><br><span class=\"line\">kernel.msgmax = 65536</span><br><span class=\"line\">kernel.msgmni = 2048</span><br><span class=\"line\">net.ipv4.tcp_syncookies = 1</span><br><span class=\"line\">net.ipv4.ip_forward = 0</span><br><span class=\"line\">net.ipv4.conf.default.accept_source_route = 0</span><br><span class=\"line\">net.ipv4.tcp_tw_recycle = 1</span><br><span class=\"line\">net.ipv4.tcp_max_syn_backlog = 4096</span><br><span class=\"line\">net.ipv4.conf.all.arp_filter = 1</span><br><span class=\"line\">net.ipv4.ip_local_port_range = 1025 65535</span><br><span class=\"line\">net.core.netdev_max_backlog = 10000</span><br><span class=\"line\">vm.overcommit_memory = 2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置/etc/security/limits.conf文件，添加以下内容(三台主机)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* soft nofile 65536</span><br><span class=\"line\">* hard nofile 65536</span><br><span class=\"line\">* soft nproc 131072</span><br><span class=\"line\">* hard nproc 131072</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置预读块的值为16384(三台主机 未设置)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /sbin/blockdev --getra /dev/sda 查看预读块，默认大小为256</span></span><br><span class=\"line\"><span class=\"comment\"># /sbin/blockdev --setra 16384 /dev/sda  设置预读块</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置磁盘访问I/O调度策略(三台主机 未设置)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#echo deadline &gt; /sys/block/sda/queue/scheduler</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动ssh</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key</span><br><span class=\"line\">ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key</span><br><span class=\"line\">ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key</span><br><span class=\"line\">/usr/sbin/sshd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建greenplum的用户和用户组</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">groupadd -g 530 gpadmin</span><br><span class=\"line\">useradd -g 530 -u 530 -m -d /home/gpadmin -s /bin/bash gpadmin</span><br><span class=\"line\">chown -R gpadmin:gpadmin /home/gpadmin</span><br><span class=\"line\">passwd gpadmin</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>关闭 iptables，selinux</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service iptables stop</span><br><span class=\"line\">chkconfig iptables off</span><br><span class=\"line\"></span><br><span class=\"line\">[root@mdw selinux]<span class=\"comment\"># cat /etc/selinux/config </span></span><br><span class=\"line\"><span class=\"comment\"># This file controls the state of SELinux on the system.</span></span><br><span class=\"line\"><span class=\"comment\"># SELINUX= can take one of these three values:</span></span><br><span class=\"line\"><span class=\"comment\">#     enforcing - SELinux security policy is enforced.</span></span><br><span class=\"line\"><span class=\"comment\">#     permissive - SELinux prints warnings instead of enforcing.</span></span><br><span class=\"line\"><span class=\"comment\">#     disabled - No SELinux policy is loaded.</span></span><br><span class=\"line\">SELINUX=disabled</span><br><span class=\"line\"><span class=\"comment\"># SELINUXTYPE= can take one of these two values:</span></span><br><span class=\"line\"><span class=\"comment\">#     targeted - Targeted processes are protected,</span></span><br><span class=\"line\"><span class=\"comment\">#     mls - Multi Level Security protection.</span></span><br><span class=\"line\">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"下载安装包并安装\"><a href=\"#下载安装包并安装\" class=\"headerlink\" title=\"下载安装包并安装\"></a>下载安装包并安装</h2><ol>\n<li><p>官网下载 <a href=\"https://network.pivotal.io/products/pivotal-gpdb\" target=\"_blank\" rel=\"noopener\">https://network.pivotal.io/products/pivotal-gpdb</a>  (这里可能需要注册)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># greenplum 安装包</span></span><br><span class=\"line\">greenplum-db-5.8.0-rhel7-x86_64.zip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># greenplum web管理界面</span></span><br><span class=\"line\">greenplum-cc-web-4.1.1-LINUX-x86_64.zip</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>上传服务器并安装</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip greenplum-db-4.2.2.4-build-1-CE-RHEL5-i386.zip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这里输入安装目录(我是安装在当前用户home)</span></span><br><span class=\"line\">/bin/bash greenplum-db-4.2.2.4-build-1-CE-RHEL5-i386.bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ～/greenplum-db/greenplum_path.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建 hostlist  &nbsp; seg_hosts &nbsp; gpinitsystem_config</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat conf/hostlist</span><br><span class=\"line\">mdw</span><br><span class=\"line\">sdw1</span><br><span class=\"line\">sdw2</span><br><span class=\"line\"></span><br><span class=\"line\">cat conf/seg_hosts</span><br><span class=\"line\">sdw1</span><br><span class=\"line\">sdw2</span><br><span class=\"line\"></span><br><span class=\"line\">cat conf/gpinitsystem_config</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Segment 的名称前缀</span></span><br><span class=\"line\">SEG_PREFIX=gpseg</span><br><span class=\"line\"><span class=\"comment\"># Primary Segment 起始的端口号</span></span><br><span class=\"line\">PORT_BASE=33000</span><br><span class=\"line\"><span class=\"comment\"># 指定 Primary Segment 的数据目录</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -a DATA_DIRECTORY=(/home/gpadmin/gpdata/gpdatap1  /home/gpadmin/gpdata/gpdatap2)</span><br><span class=\"line\"><span class=\"comment\"># Master 所在机器的 Hostname</span></span><br><span class=\"line\">MASTER_HOSTNAME=mdw</span><br><span class=\"line\"><span class=\"comment\"># 指定 Master 的数据目录</span></span><br><span class=\"line\">MASTER_DIRECTORY=/home/gpadmin/gpdata/gpmaster</span><br><span class=\"line\"><span class=\"comment\"># Master 的端口 </span></span><br><span class=\"line\">MASTER_PORT=2345</span><br><span class=\"line\"><span class=\"comment\"># 指定Bash的版本</span></span><br><span class=\"line\">TRUSTED_SHELL=/usr/bin/ssh</span><br><span class=\"line\"><span class=\"comment\"># Mirror Segment起始的端口号</span></span><br><span class=\"line\">MIRROR_PORT_BASE=43000</span><br><span class=\"line\"><span class=\"comment\"># Primary Segment 主备同步的起始端口号</span></span><br><span class=\"line\">REPLICATION_PORT_BASE=34000</span><br><span class=\"line\"><span class=\"comment\"># Mirror Segment 主备同步的起始端口号</span></span><br><span class=\"line\">MIRROR_REPLICATION_PORT_BASE=44000</span><br><span class=\"line\"><span class=\"comment\"># Mirror Segment 的数据目录</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -a MIRROR_DATA_DIRECTORY=(/home/gpadmin/gpdata/gpdatam1 /home/gpadmin/gpdata/gpdatam2)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置环境变量，打通所有节点</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这里需要输入 segment  gpadmin的密码 成功则 completed successfully</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">gpssh-exkeys -f /home/gpadmin/conf/hostlist </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 批量创建文件</span></span><br><span class=\"line\">gpssh -f /home/gpadmin/conf/hostlist</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir gpdata</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> gpdata</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir gpmaster gpdatap1 gpdatap2 gpdatam1 gpdatam2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>分发安装包</p>\n<p> 可以通过软连接的方式 更新greenplum文件位置</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打包master节点上的安装包</span></span><br><span class=\"line\">tar -cf gp.tar greenplum-db/</span><br><span class=\"line\"><span class=\"comment\"># 分发</span></span><br><span class=\"line\">gpscp -f /home/gpadmin/conf/hostlist gp.4.3.tar =:/home/gpadmin/</span><br><span class=\"line\"></span><br><span class=\"line\">gpssh -f hostlist</span><br><span class=\"line\"></span><br><span class=\"line\">tar -xf gp.tar</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在每个节点上配置.bash_profile环境变量</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[gpadmin@mdw ~]$ cat .bash_profile </span><br><span class=\"line\"><span class=\"comment\"># .bash_profile</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Get the aliases and functions</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -f ~/.bashrc ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    . ~/.bashrc</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># User specific environment and startup programs</span></span><br><span class=\"line\"></span><br><span class=\"line\">PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$HOME</span>/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> /home/gpadmin/greenplum-db/greenplum_path.sh</span><br><span class=\"line\"><span class=\"built_in\">export</span> MASTER_DATA_DIRECTORY=/home/gpadmin/gpdata/gpmaster/gpseg-1</span><br><span class=\"line\"><span class=\"built_in\">export</span> PGPORT=2345</span><br><span class=\"line\"><span class=\"built_in\">export</span> PGDATABASE=testDB</span><br><span class=\"line\"></span><br><span class=\"line\">[gpadmin@mdw ~]$ <span class=\"built_in\">source</span> .bash_profile</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>初始化数据库, 默认初始化完成就启动数据库了</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpinitsystem -c /home/gpadmin/conf/gpinitsystem_config -a</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"Greenplum-cc-web监控软件安装\"><a href=\"#Greenplum-cc-web监控软件安装\" class=\"headerlink\" title=\"Greenplum-cc-web监控软件安装\"></a>Greenplum-cc-web监控软件安装</h2><ol>\n<li><p>运行gpperfmon_install命令</p>\n<ul>\n<li><p>创建greenplum监控用数据库(gpperfmon)</p>\n</li>\n<li><p>创建greenplum监控用数据库角色(gpmon),后面登陆网页时使用</p>\n</li>\n<li><p>配置greenplum数据库文件(pg_hba.conf和.pgpass)</p>\n</li>\n<li><p>设置postgresql.conf文件，增加启用监控相关的参数。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># postgresql.conf 添加</span></span><br><span class=\"line\">checkpoint_segments=8</span><br><span class=\"line\">gp_enable_gpperfmon=on</span><br><span class=\"line\">gpperfmon_port=8888</span><br><span class=\"line\">gp_external_enable_exec=on</span><br><span class=\"line\">gpperfmon_log_alert_level=<span class=\"string\">'warning'</span></span><br><span class=\"line\">gp_enable_query_metrics=on</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装 gpperfmon</span></span><br><span class=\"line\">gpperfmon_install  --<span class=\"built_in\">enable</span>  --password  gpmon  --port 2345</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启</span></span><br><span class=\"line\">gpstop -r</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看配置是否成功</span></span><br><span class=\"line\">ps -ef |grep gpmmon |grep -v grep</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>安装 GreenplumCommand Center Console (默认所有节点都会安装)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip greenplum-cc-web-4.1.1-LINUX-x86_64.zip</span><br><span class=\"line\"></span><br><span class=\"line\">./greenplum-cc-web-4.1.1-LINUX-x86_64.bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/greenplum-cc-web/gpcc_path.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpcc start</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"扩充节点\"><a href=\"#扩充节点\" class=\"headerlink\" title=\"扩充节点\"></a>扩充节点</h2><ol>\n<li><p>按照如上配置在主机环境</p>\n</li>\n<li><p>生成expand 配置文件</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat expand</span><br><span class=\"line\"></span><br><span class=\"line\">sdw2:sdw2:33002:/data/gpdata/gpdatap1:6:2:p:34002</span><br><span class=\"line\">sdw2:sdw2:33003:/data/gpdata/gpdatam1:7:2:m:34003</span><br><span class=\"line\"></span><br><span class=\"line\">内容包括几个字段</span><br><span class=\"line\">hostname     主机名</span><br><span class=\"line\">address        类似主机名</span><br><span class=\"line\">port              segment监听端口</span><br><span class=\"line\">fselocation   segment data目录,注意是全路径</span><br><span class=\"line\">dbid              gp集群的唯一ID，可以到gp_segment_configuration中获得，必须顺序累加</span><br><span class=\"line\">content                 可以到gp_segment_configuration中获得，必须顺序累加</span><br><span class=\"line\">prefered_role        角色(p或m)(primary , mirror)</span><br><span class=\"line\">replication_port     如果没有mirror则不需要(用于replication的端口)。</span><br></pre></td></tr></table></figure>\n\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看现有节点情况</span></span><br><span class=\"line\">select * from gp_segment_configuration ;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看节点数据目录</span></span><br><span class=\"line\">select * from pg_filespace_entry ;</span><br></pre></td></tr></table></figure>\n\n<p> 配置文件可以根据以上两个表进行修改， 也可以</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cat host</span></span><br><span class=\"line\">sdw2</span><br><span class=\"line\"></span><br><span class=\"line\">gpexpand -f ./host</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>运行 <code>gpexpand -i expand</code></p>\n</li>\n<li><p>数据重分布  <code>gpexpand  -d 6:00:00</code> (后面跟需要的时间)</p>\n</li>\n<li><p>看着日志，错了就回滚  </p>\n</li>\n</ol>\n<p>参考连接 :</p>\n<p><a href=\"https://yq.aliyun.com/articles/177\" target=\"_blank\" rel=\"noopener\">https://yq.aliyun.com/articles/177</a></p>\n<p><a href=\"https://discuss.pivotal.io/hc/en-us/articles/201202707-How-to-Use-gpexpand-Working-with-One-Host\" target=\"_blank\" rel=\"noopener\">https://discuss.pivotal.io/hc/en-us/articles/201202707-How-to-Use-gpexpand-Working-with-One-Host</a></p>\n<h2 id=\"BUG-记录\"><a href=\"#BUG-记录\" class=\"headerlink\" title=\"BUG 记录\"></a>BUG 记录</h2><ol>\n<li><p>Failed to complete obtain psql count Master gp_segment_configuration Script Exiti</p>\n<ul>\n<li><p>问题： 在初始化过程中，如到以下问题：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpadmin-[FATAL]:-Failed to complete obtain psql count Master gp_segment_configuration  Script Exiting!</span><br><span class=\"line\">Script has left Greenplum Database <span class=\"keyword\">in</span> an incomplete state</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解决方法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"RemoveIPC=no\"</span> &gt;&gt; /etc/systemd/logind.conf</span><br><span class=\"line\">/bin/systemctl restart systemd-logind.service</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>gpstart error: Do not have enough valid segments to start the array</p>\n<ul>\n<li><p>问题： gpinit 成功了在 gpstart的时候出错</p>\n</li>\n<li><p>解决： 彻底关闭防火墙并检查是否配置开机自启</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"https://gpdb.docs.pivotal.io/580/main/index.html\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p><a href=\"https://gp-docs-cn.github.io/docs/common/gpdb-features.html\" target=\"_blank\" rel=\"noopener\">中文文档</a></p>\n<p><a href=\"http://gpcc.docs.pivotal.io/410/welcome.html\" target=\"_blank\" rel=\"noopener\">cc-web 官方文档</a></p>\n"},{"title":"mxnet_gpu 安装","date":"2019-05-28T11:18:59.000Z","_content":"\n## 简介\n\nCUDA 是并行计算的平台和类C编程模型，我们能很容易的实现并行算法，就像写C代码一样。只要配备的NVIDIA GPU，就可以在许多设备上运行你的并行程序，无论是台式机、笔记本抑或平板电脑。熟悉C语言可以帮助你尽快掌握CUDA。\n\ncuDNN 是NVIDIA打造的针对深度神经网络的加速库，是一个用于深层神经网络的GPU加速库。如果你要用GPU训练模型，cuDNN不是必须的，但是一般会采用这个加速库。\n\nMXNet 是灵活且高效的深度学习库，其有点灵活，轻量，国人参与开发，文档齐全。\n\n## 环境介绍\n\n1. 系统环境\n\n    ```bash\n    gt@yixue-pc:~$ cat /etc/lsb-release\n    DISTRIB_ID=Ubuntu\n    DISTRIB_RELEASE=18.04\n    DISTRIB_CODENAME=bionic\n    DISTRIB_DESCRIPTION=\"Ubuntu 18.04 LTS\"\n\n    gt@yixue-pc:~$ uname -m\n    x86_64\n\n    ```\n\n2. 显卡 [显卡驱动版本查看](https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html)\n    **这一步很重要，根据版本下载对应的安装文件**\n\n    ```bash\n    gt@yixue-pc:~$ cat /proc/driver/nvidia/version\n    NVRM version: NVIDIA UNIX x86_64 Kernel Module  390.116  Sun Jan 27 07:21:36 PST 2019\n    GCC version:  gcc version 7.4.0 (Ubuntu 7.4.0-1ubuntu1~18.04)\n\n    gt@yixue-pc:~$ nvidia-smi\n    Wed May 29 15:27:36 2019\n    +-----------------------------------------------------------------------------+\n    | NVIDIA-SMI 390.116                Driver Version: 390.116                   |\n    |-------------------------------+----------------------+----------------------+\n    | GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n    | Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n    |===============================+======================+======================|\n    |   0  GeForce GTX 108...  Off  | 00000000:01:00.0 Off |                  N/A |\n    |  0%   30C    P5    34W / 250W |      0MiB / 11175MiB |      3%      Default |\n    +-------------------------------+----------------------+----------------------+\n\n    +-----------------------------------------------------------------------------+\n    | Processes:                                                       GPU Memory |\n    |  GPU       PID   Type   Process name                             Usage      |\n    |=============================================================================|\n    |  No running processes found                                                 |\n    +-----------------------------------------------------------------------------+\n\n    gt@yixue-pc:~$ lspci | grep -i nvidia\n    01:00.0 VGA compatible controller: NVIDIA Corporation GP102 [GeForce GTX 1080 Ti] (rev a1)\n    01:00.1 Audio device: NVIDIA Corporation GP102 HDMI Audio Controller (rev a1)\n    gt@yixue-pc:~$ lsmod | grep -i nvidia\n    nvidia_uvm            757760  0\n    nvidia_drm             40960  0\n    nvidia_modeset       1048576  1 nvidia_drm\n    nvidia              14376960  2 nvidia_uvm,nvidia_modeset\n    drm_kms_helper        167936  1 nvidia_drm\n    drm                   401408  3 drm_kms_helper,nvidia_drm\n    ipmi_msghandler        53248  2 ipmi_devintf,nvidia\n    ```\n\n## ubuntu18.04 安装 cuda\n\n1. 环境准备\n\n    * ubuntu 下载环境依赖\n\n    ```bash\n    # 一些依赖\n    sudo apt-get install freeglut3-dev build-essential libx11-dev libxmu-dev libxi-dev libgl1-mesa-glx libglu1-mesa libglu1-mesa-dev\n\n    # 查看对应的驱动是否安装\n    ubuntu-drivers devices\n\n    # 自动安装推荐的驱动\n    sudo ubuntu-drivers autoinstall\n    ```\n\n    * 下载cuda、cudann (根据环境下载对应的版本)\n    [cuda 下载](https://developer.nvidia.com/cuda-90-download-archive?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1604&target_type=runfilelocal)\n    [cudnn 下载](https://developer.nvidia.com/rdp/cudnn-download)\n2. 安装\n\n    * sh  安装 cuda\n\n    ```bash\n    # gcc (ubuntu18.04 默认 gcc 7.4) 需要 4.8\n    sudo apt-get install gcc-4.8\n    sudo apt-get install g++-4.8\n\n    cd /usr/bin\n\n    sudo mv gcc gcc.bak #备份\n    sudo ln -s gcc-4.8 gcc #重新链接\n\n    sudo mv g++ g++.bak\n    sudo ln -s g++-4.8 g++\n\n    # 查看版本\n    gcc -v\n    g++ -v\n\n    # 执行脚本\n    sh cuda_9.0.176_384.81_linux.run\n    sh cuda_9.0.176.1_linux.run\n    sh cuda_9.0.176.2_linux.run\n    sh cuda_9.0.176.3_linux.run\n    sh cuda_9.0.176.4_linux.run\n    # 根据提示选择安装 注意不要安装驱动\n\n    # 验证版本\n    gt@yixue-pc:~$ nvcc --version\n    nvcc: NVIDIA (R) Cuda compiler driver\n    Copyright (c) 2005-2017 NVIDIA Corporation\n    Built on Fri_Sep__1_21:08:03_CDT_2017\n    Cuda compilation tools, release 9.0, V9.0.176\n\n    # vim /etc/profile\n    export PATH=$PATH:/usr/local/cuda-9.0/bin\n    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-9.0/lib64\n    export LIBRARY_PATH=$LIBRARY_PATH:/usr/local/cuda-9.0/lib64\n\n    source /etc/profile\n    ```\n\n    * 安装 cudann\n\n    ```bash\n    # 解压\n    tar xvzf cudnn-9.0-linux-x64-v7.6.0.64.tgz\n\n    sudo cp cuda/include/cudnn.h    /usr/local/cuda/include      注意，解压后的文件夹名称为cuda ,将对应文件复制到 /usr/local中的cuda内\n    sudo cp cuda/lib64/libcudnn*    /usr/local/cuda/lib64\n    sudo chmod a+r /usr/local/cuda/include/cudnn.h   /usr/local/cuda/lib64/libcudnn*\n    ```\n\n## ubuntu 安装mxnet\n\n[官方文档](https://mxnet.incubator.apache.org/versions/master/install/index.html?platform=Linux&language=Python&processor=GPU)\n\n\n```bash\npip3 install mxnet-cu90\n```\n\n## 卸载cuda\n\n[官方文档](https://docs.nvidia.com/cuda/cuda-installation-guide-mac-os-x/index.html#uninstall)\n\n```bash\nroot@yixue-pc:/usr/local/cuda/bin# ./cuda-uninstaller\n```\n\n## 参考资料\n\n[安装mxnet+显卡驱动+cuda9.1+cudnn7.1](https://blog.csdn.net/qq_38298902/article/details/79980749)\n","source":"_posts/20190528-mxnet-gpu.md","raw":"---\ntitle: mxnet_gpu 安装\ndate: 2019-05-28 19:18:59\ntags: mxnet cuda\ncategories: deep learning\n---\n\n## 简介\n\nCUDA 是并行计算的平台和类C编程模型，我们能很容易的实现并行算法，就像写C代码一样。只要配备的NVIDIA GPU，就可以在许多设备上运行你的并行程序，无论是台式机、笔记本抑或平板电脑。熟悉C语言可以帮助你尽快掌握CUDA。\n\ncuDNN 是NVIDIA打造的针对深度神经网络的加速库，是一个用于深层神经网络的GPU加速库。如果你要用GPU训练模型，cuDNN不是必须的，但是一般会采用这个加速库。\n\nMXNet 是灵活且高效的深度学习库，其有点灵活，轻量，国人参与开发，文档齐全。\n\n## 环境介绍\n\n1. 系统环境\n\n    ```bash\n    gt@yixue-pc:~$ cat /etc/lsb-release\n    DISTRIB_ID=Ubuntu\n    DISTRIB_RELEASE=18.04\n    DISTRIB_CODENAME=bionic\n    DISTRIB_DESCRIPTION=\"Ubuntu 18.04 LTS\"\n\n    gt@yixue-pc:~$ uname -m\n    x86_64\n\n    ```\n\n2. 显卡 [显卡驱动版本查看](https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html)\n    **这一步很重要，根据版本下载对应的安装文件**\n\n    ```bash\n    gt@yixue-pc:~$ cat /proc/driver/nvidia/version\n    NVRM version: NVIDIA UNIX x86_64 Kernel Module  390.116  Sun Jan 27 07:21:36 PST 2019\n    GCC version:  gcc version 7.4.0 (Ubuntu 7.4.0-1ubuntu1~18.04)\n\n    gt@yixue-pc:~$ nvidia-smi\n    Wed May 29 15:27:36 2019\n    +-----------------------------------------------------------------------------+\n    | NVIDIA-SMI 390.116                Driver Version: 390.116                   |\n    |-------------------------------+----------------------+----------------------+\n    | GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n    | Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n    |===============================+======================+======================|\n    |   0  GeForce GTX 108...  Off  | 00000000:01:00.0 Off |                  N/A |\n    |  0%   30C    P5    34W / 250W |      0MiB / 11175MiB |      3%      Default |\n    +-------------------------------+----------------------+----------------------+\n\n    +-----------------------------------------------------------------------------+\n    | Processes:                                                       GPU Memory |\n    |  GPU       PID   Type   Process name                             Usage      |\n    |=============================================================================|\n    |  No running processes found                                                 |\n    +-----------------------------------------------------------------------------+\n\n    gt@yixue-pc:~$ lspci | grep -i nvidia\n    01:00.0 VGA compatible controller: NVIDIA Corporation GP102 [GeForce GTX 1080 Ti] (rev a1)\n    01:00.1 Audio device: NVIDIA Corporation GP102 HDMI Audio Controller (rev a1)\n    gt@yixue-pc:~$ lsmod | grep -i nvidia\n    nvidia_uvm            757760  0\n    nvidia_drm             40960  0\n    nvidia_modeset       1048576  1 nvidia_drm\n    nvidia              14376960  2 nvidia_uvm,nvidia_modeset\n    drm_kms_helper        167936  1 nvidia_drm\n    drm                   401408  3 drm_kms_helper,nvidia_drm\n    ipmi_msghandler        53248  2 ipmi_devintf,nvidia\n    ```\n\n## ubuntu18.04 安装 cuda\n\n1. 环境准备\n\n    * ubuntu 下载环境依赖\n\n    ```bash\n    # 一些依赖\n    sudo apt-get install freeglut3-dev build-essential libx11-dev libxmu-dev libxi-dev libgl1-mesa-glx libglu1-mesa libglu1-mesa-dev\n\n    # 查看对应的驱动是否安装\n    ubuntu-drivers devices\n\n    # 自动安装推荐的驱动\n    sudo ubuntu-drivers autoinstall\n    ```\n\n    * 下载cuda、cudann (根据环境下载对应的版本)\n    [cuda 下载](https://developer.nvidia.com/cuda-90-download-archive?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1604&target_type=runfilelocal)\n    [cudnn 下载](https://developer.nvidia.com/rdp/cudnn-download)\n2. 安装\n\n    * sh  安装 cuda\n\n    ```bash\n    # gcc (ubuntu18.04 默认 gcc 7.4) 需要 4.8\n    sudo apt-get install gcc-4.8\n    sudo apt-get install g++-4.8\n\n    cd /usr/bin\n\n    sudo mv gcc gcc.bak #备份\n    sudo ln -s gcc-4.8 gcc #重新链接\n\n    sudo mv g++ g++.bak\n    sudo ln -s g++-4.8 g++\n\n    # 查看版本\n    gcc -v\n    g++ -v\n\n    # 执行脚本\n    sh cuda_9.0.176_384.81_linux.run\n    sh cuda_9.0.176.1_linux.run\n    sh cuda_9.0.176.2_linux.run\n    sh cuda_9.0.176.3_linux.run\n    sh cuda_9.0.176.4_linux.run\n    # 根据提示选择安装 注意不要安装驱动\n\n    # 验证版本\n    gt@yixue-pc:~$ nvcc --version\n    nvcc: NVIDIA (R) Cuda compiler driver\n    Copyright (c) 2005-2017 NVIDIA Corporation\n    Built on Fri_Sep__1_21:08:03_CDT_2017\n    Cuda compilation tools, release 9.0, V9.0.176\n\n    # vim /etc/profile\n    export PATH=$PATH:/usr/local/cuda-9.0/bin\n    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-9.0/lib64\n    export LIBRARY_PATH=$LIBRARY_PATH:/usr/local/cuda-9.0/lib64\n\n    source /etc/profile\n    ```\n\n    * 安装 cudann\n\n    ```bash\n    # 解压\n    tar xvzf cudnn-9.0-linux-x64-v7.6.0.64.tgz\n\n    sudo cp cuda/include/cudnn.h    /usr/local/cuda/include      注意，解压后的文件夹名称为cuda ,将对应文件复制到 /usr/local中的cuda内\n    sudo cp cuda/lib64/libcudnn*    /usr/local/cuda/lib64\n    sudo chmod a+r /usr/local/cuda/include/cudnn.h   /usr/local/cuda/lib64/libcudnn*\n    ```\n\n## ubuntu 安装mxnet\n\n[官方文档](https://mxnet.incubator.apache.org/versions/master/install/index.html?platform=Linux&language=Python&processor=GPU)\n\n\n```bash\npip3 install mxnet-cu90\n```\n\n## 卸载cuda\n\n[官方文档](https://docs.nvidia.com/cuda/cuda-installation-guide-mac-os-x/index.html#uninstall)\n\n```bash\nroot@yixue-pc:/usr/local/cuda/bin# ./cuda-uninstaller\n```\n\n## 参考资料\n\n[安装mxnet+显卡驱动+cuda9.1+cudnn7.1](https://blog.csdn.net/qq_38298902/article/details/79980749)\n","slug":"mxnet-gpu","published":1,"updated":"2019-05-29T10:29:54.400Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwdpk7yj000862xs7ysedd6s","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>CUDA 是并行计算的平台和类C编程模型，我们能很容易的实现并行算法，就像写C代码一样。只要配备的NVIDIA GPU，就可以在许多设备上运行你的并行程序，无论是台式机、笔记本抑或平板电脑。熟悉C语言可以帮助你尽快掌握CUDA。</p>\n<p>cuDNN 是NVIDIA打造的针对深度神经网络的加速库，是一个用于深层神经网络的GPU加速库。如果你要用GPU训练模型，cuDNN不是必须的，但是一般会采用这个加速库。</p>\n<p>MXNet 是灵活且高效的深度学习库，其有点灵活，轻量，国人参与开发，文档齐全。</p>\n<h2 id=\"环境介绍\"><a href=\"#环境介绍\" class=\"headerlink\" title=\"环境介绍\"></a>环境介绍</h2><ol>\n<li><p>系统环境</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gt@yixue-pc:~$ cat /etc/lsb-release</span><br><span class=\"line\">DISTRIB_ID=Ubuntu</span><br><span class=\"line\">DISTRIB_RELEASE=18.04</span><br><span class=\"line\">DISTRIB_CODENAME=bionic</span><br><span class=\"line\">DISTRIB_DESCRIPTION=<span class=\"string\">\"Ubuntu 18.04 LTS\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">gt@yixue-pc:~$ uname -m</span><br><span class=\"line\">x86_64</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>显卡 <a href=\"https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html\" target=\"_blank\" rel=\"noopener\">显卡驱动版本查看</a><br> <strong>这一步很重要，根据版本下载对应的安装文件</strong></p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gt@yixue-pc:~$ cat /proc/driver/nvidia/version</span><br><span class=\"line\">NVRM version: NVIDIA UNIX x86_64 Kernel Module  390.116  Sun Jan 27 07:21:36 PST 2019</span><br><span class=\"line\">GCC version:  gcc version 7.4.0 (Ubuntu 7.4.0-1ubuntu1~18.04)</span><br><span class=\"line\"></span><br><span class=\"line\">gt@yixue-pc:~$ nvidia-smi</span><br><span class=\"line\">Wed May 29 15:27:36 2019</span><br><span class=\"line\">+-----------------------------------------------------------------------------+</span><br><span class=\"line\">| NVIDIA-SMI 390.116                Driver Version: 390.116                   |</span><br><span class=\"line\">|-------------------------------+----------------------+----------------------+</span><br><span class=\"line\">| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class=\"line\">| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |</span><br><span class=\"line\">|===============================+======================+======================|</span><br><span class=\"line\">|   0  GeForce GTX 108...  Off  | 00000000:01:00.0 Off |                  N/A |</span><br><span class=\"line\">|  0%   30C    P5    34W / 250W |      0MiB / 11175MiB |      3%      Default |</span><br><span class=\"line\">+-------------------------------+----------------------+----------------------+</span><br><span class=\"line\"></span><br><span class=\"line\">+-----------------------------------------------------------------------------+</span><br><span class=\"line\">| Processes:                                                       GPU Memory |</span><br><span class=\"line\">|  GPU       PID   Type   Process name                             Usage      |</span><br><span class=\"line\">|=============================================================================|</span><br><span class=\"line\">|  No running processes found                                                 |</span><br><span class=\"line\">+-----------------------------------------------------------------------------+</span><br><span class=\"line\"></span><br><span class=\"line\">gt@yixue-pc:~$ lspci | grep -i nvidia</span><br><span class=\"line\">01:00.0 VGA compatible controller: NVIDIA Corporation GP102 [GeForce GTX 1080 Ti] (rev a1)</span><br><span class=\"line\">01:00.1 Audio device: NVIDIA Corporation GP102 HDMI Audio Controller (rev a1)</span><br><span class=\"line\">gt@yixue-pc:~$ lsmod | grep -i nvidia</span><br><span class=\"line\">nvidia_uvm            757760  0</span><br><span class=\"line\">nvidia_drm             40960  0</span><br><span class=\"line\">nvidia_modeset       1048576  1 nvidia_drm</span><br><span class=\"line\">nvidia              14376960  2 nvidia_uvm,nvidia_modeset</span><br><span class=\"line\">drm_kms_helper        167936  1 nvidia_drm</span><br><span class=\"line\">drm                   401408  3 drm_kms_helper,nvidia_drm</span><br><span class=\"line\">ipmi_msghandler        53248  2 ipmi_devintf,nvidia</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"ubuntu18-04-安装-cuda\"><a href=\"#ubuntu18-04-安装-cuda\" class=\"headerlink\" title=\"ubuntu18.04 安装 cuda\"></a>ubuntu18.04 安装 cuda</h2><ol>\n<li><p>环境准备</p>\n<ul>\n<li><p>ubuntu 下载环境依赖</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 一些依赖</span></span><br><span class=\"line\">sudo apt-get install freeglut3-dev build-essential libx11-dev libxmu-dev libxi-dev libgl1-mesa-glx libglu1-mesa libglu1-mesa-dev</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看对应的驱动是否安装</span></span><br><span class=\"line\">ubuntu-drivers devices</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 自动安装推荐的驱动</span></span><br><span class=\"line\">sudo ubuntu-drivers autoinstall</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下载cuda、cudann (根据环境下载对应的版本)<br><a href=\"https://developer.nvidia.com/cuda-90-download-archive?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1604&target_type=runfilelocal\" target=\"_blank\" rel=\"noopener\">cuda 下载</a><br><a href=\"https://developer.nvidia.com/rdp/cudnn-download\" target=\"_blank\" rel=\"noopener\">cudnn 下载</a></p>\n</li>\n</ul>\n</li>\n<li><p>安装</p>\n<ul>\n<li><p>sh  安装 cuda</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># gcc (ubuntu18.04 默认 gcc 7.4) 需要 4.8</span></span><br><span class=\"line\">sudo apt-get install gcc-4.8</span><br><span class=\"line\">sudo apt-get install g++-4.8</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/bin</span><br><span class=\"line\"></span><br><span class=\"line\">sudo mv gcc gcc.bak <span class=\"comment\">#备份</span></span><br><span class=\"line\">sudo ln -s gcc-4.8 gcc <span class=\"comment\">#重新链接</span></span><br><span class=\"line\"></span><br><span class=\"line\">sudo mv g++ g++.bak</span><br><span class=\"line\">sudo ln -s g++-4.8 g++</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看版本</span></span><br><span class=\"line\">gcc -v</span><br><span class=\"line\">g++ -v</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 执行脚本</span></span><br><span class=\"line\">sh cuda_9.0.176_384.81_linux.run</span><br><span class=\"line\">sh cuda_9.0.176.1_linux.run</span><br><span class=\"line\">sh cuda_9.0.176.2_linux.run</span><br><span class=\"line\">sh cuda_9.0.176.3_linux.run</span><br><span class=\"line\">sh cuda_9.0.176.4_linux.run</span><br><span class=\"line\"><span class=\"comment\"># 根据提示选择安装 注意不要安装驱动</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 验证版本</span></span><br><span class=\"line\">gt@yixue-pc:~$ nvcc --version</span><br><span class=\"line\">nvcc: NVIDIA (R) Cuda compiler driver</span><br><span class=\"line\">Copyright (c) 2005-2017 NVIDIA Corporation</span><br><span class=\"line\">Built on Fri_Sep__1_21:08:03_CDT_2017</span><br><span class=\"line\">Cuda compilation tools, release 9.0, V9.0.176</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># vim /etc/profile</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/usr/<span class=\"built_in\">local</span>/cuda-9.0/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> LD_LIBRARY_PATH=<span class=\"variable\">$LD_LIBRARY_PATH</span>:/usr/<span class=\"built_in\">local</span>/cuda-9.0/lib64</span><br><span class=\"line\"><span class=\"built_in\">export</span> LIBRARY_PATH=<span class=\"variable\">$LIBRARY_PATH</span>:/usr/<span class=\"built_in\">local</span>/cuda-9.0/lib64</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装 cudann</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 解压</span></span><br><span class=\"line\">tar xvzf cudnn-9.0-linux-x64-v7.6.0.64.tgz</span><br><span class=\"line\"></span><br><span class=\"line\">sudo cp cuda/include/cudnn.h    /usr/<span class=\"built_in\">local</span>/cuda/include      注意，解压后的文件夹名称为cuda ,将对应文件复制到 /usr/<span class=\"built_in\">local</span>中的cuda内</span><br><span class=\"line\">sudo cp cuda/lib64/libcudnn*    /usr/<span class=\"built_in\">local</span>/cuda/lib64</span><br><span class=\"line\">sudo chmod a+r /usr/<span class=\"built_in\">local</span>/cuda/include/cudnn.h   /usr/<span class=\"built_in\">local</span>/cuda/lib64/libcudnn*</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"ubuntu-安装mxnet\"><a href=\"#ubuntu-安装mxnet\" class=\"headerlink\" title=\"ubuntu 安装mxnet\"></a>ubuntu 安装mxnet</h2><p><a href=\"https://mxnet.incubator.apache.org/versions/master/install/index.html?platform=Linux&language=Python&processor=GPU\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install mxnet-cu90</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"卸载cuda\"><a href=\"#卸载cuda\" class=\"headerlink\" title=\"卸载cuda\"></a>卸载cuda</h2><p><a href=\"https://docs.nvidia.com/cuda/cuda-installation-guide-mac-os-x/index.html#uninstall\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@yixue-pc:/usr/<span class=\"built_in\">local</span>/cuda/bin<span class=\"comment\"># ./cuda-uninstaller</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p><a href=\"https://blog.csdn.net/qq_38298902/article/details/79980749\" target=\"_blank\" rel=\"noopener\">安装mxnet+显卡驱动+cuda9.1+cudnn7.1</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>CUDA 是并行计算的平台和类C编程模型，我们能很容易的实现并行算法，就像写C代码一样。只要配备的NVIDIA GPU，就可以在许多设备上运行你的并行程序，无论是台式机、笔记本抑或平板电脑。熟悉C语言可以帮助你尽快掌握CUDA。</p>\n<p>cuDNN 是NVIDIA打造的针对深度神经网络的加速库，是一个用于深层神经网络的GPU加速库。如果你要用GPU训练模型，cuDNN不是必须的，但是一般会采用这个加速库。</p>\n<p>MXNet 是灵活且高效的深度学习库，其有点灵活，轻量，国人参与开发，文档齐全。</p>\n<h2 id=\"环境介绍\"><a href=\"#环境介绍\" class=\"headerlink\" title=\"环境介绍\"></a>环境介绍</h2><ol>\n<li><p>系统环境</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gt@yixue-pc:~$ cat /etc/lsb-release</span><br><span class=\"line\">DISTRIB_ID=Ubuntu</span><br><span class=\"line\">DISTRIB_RELEASE=18.04</span><br><span class=\"line\">DISTRIB_CODENAME=bionic</span><br><span class=\"line\">DISTRIB_DESCRIPTION=<span class=\"string\">\"Ubuntu 18.04 LTS\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">gt@yixue-pc:~$ uname -m</span><br><span class=\"line\">x86_64</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>显卡 <a href=\"https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html\" target=\"_blank\" rel=\"noopener\">显卡驱动版本查看</a><br> <strong>这一步很重要，根据版本下载对应的安装文件</strong></p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gt@yixue-pc:~$ cat /proc/driver/nvidia/version</span><br><span class=\"line\">NVRM version: NVIDIA UNIX x86_64 Kernel Module  390.116  Sun Jan 27 07:21:36 PST 2019</span><br><span class=\"line\">GCC version:  gcc version 7.4.0 (Ubuntu 7.4.0-1ubuntu1~18.04)</span><br><span class=\"line\"></span><br><span class=\"line\">gt@yixue-pc:~$ nvidia-smi</span><br><span class=\"line\">Wed May 29 15:27:36 2019</span><br><span class=\"line\">+-----------------------------------------------------------------------------+</span><br><span class=\"line\">| NVIDIA-SMI 390.116                Driver Version: 390.116                   |</span><br><span class=\"line\">|-------------------------------+----------------------+----------------------+</span><br><span class=\"line\">| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class=\"line\">| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |</span><br><span class=\"line\">|===============================+======================+======================|</span><br><span class=\"line\">|   0  GeForce GTX 108...  Off  | 00000000:01:00.0 Off |                  N/A |</span><br><span class=\"line\">|  0%   30C    P5    34W / 250W |      0MiB / 11175MiB |      3%      Default |</span><br><span class=\"line\">+-------------------------------+----------------------+----------------------+</span><br><span class=\"line\"></span><br><span class=\"line\">+-----------------------------------------------------------------------------+</span><br><span class=\"line\">| Processes:                                                       GPU Memory |</span><br><span class=\"line\">|  GPU       PID   Type   Process name                             Usage      |</span><br><span class=\"line\">|=============================================================================|</span><br><span class=\"line\">|  No running processes found                                                 |</span><br><span class=\"line\">+-----------------------------------------------------------------------------+</span><br><span class=\"line\"></span><br><span class=\"line\">gt@yixue-pc:~$ lspci | grep -i nvidia</span><br><span class=\"line\">01:00.0 VGA compatible controller: NVIDIA Corporation GP102 [GeForce GTX 1080 Ti] (rev a1)</span><br><span class=\"line\">01:00.1 Audio device: NVIDIA Corporation GP102 HDMI Audio Controller (rev a1)</span><br><span class=\"line\">gt@yixue-pc:~$ lsmod | grep -i nvidia</span><br><span class=\"line\">nvidia_uvm            757760  0</span><br><span class=\"line\">nvidia_drm             40960  0</span><br><span class=\"line\">nvidia_modeset       1048576  1 nvidia_drm</span><br><span class=\"line\">nvidia              14376960  2 nvidia_uvm,nvidia_modeset</span><br><span class=\"line\">drm_kms_helper        167936  1 nvidia_drm</span><br><span class=\"line\">drm                   401408  3 drm_kms_helper,nvidia_drm</span><br><span class=\"line\">ipmi_msghandler        53248  2 ipmi_devintf,nvidia</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"ubuntu18-04-安装-cuda\"><a href=\"#ubuntu18-04-安装-cuda\" class=\"headerlink\" title=\"ubuntu18.04 安装 cuda\"></a>ubuntu18.04 安装 cuda</h2><ol>\n<li><p>环境准备</p>\n<ul>\n<li><p>ubuntu 下载环境依赖</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 一些依赖</span></span><br><span class=\"line\">sudo apt-get install freeglut3-dev build-essential libx11-dev libxmu-dev libxi-dev libgl1-mesa-glx libglu1-mesa libglu1-mesa-dev</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看对应的驱动是否安装</span></span><br><span class=\"line\">ubuntu-drivers devices</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 自动安装推荐的驱动</span></span><br><span class=\"line\">sudo ubuntu-drivers autoinstall</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下载cuda、cudann (根据环境下载对应的版本)<br><a href=\"https://developer.nvidia.com/cuda-90-download-archive?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1604&target_type=runfilelocal\" target=\"_blank\" rel=\"noopener\">cuda 下载</a><br><a href=\"https://developer.nvidia.com/rdp/cudnn-download\" target=\"_blank\" rel=\"noopener\">cudnn 下载</a></p>\n</li>\n</ul>\n</li>\n<li><p>安装</p>\n<ul>\n<li><p>sh  安装 cuda</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># gcc (ubuntu18.04 默认 gcc 7.4) 需要 4.8</span></span><br><span class=\"line\">sudo apt-get install gcc-4.8</span><br><span class=\"line\">sudo apt-get install g++-4.8</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/bin</span><br><span class=\"line\"></span><br><span class=\"line\">sudo mv gcc gcc.bak <span class=\"comment\">#备份</span></span><br><span class=\"line\">sudo ln -s gcc-4.8 gcc <span class=\"comment\">#重新链接</span></span><br><span class=\"line\"></span><br><span class=\"line\">sudo mv g++ g++.bak</span><br><span class=\"line\">sudo ln -s g++-4.8 g++</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看版本</span></span><br><span class=\"line\">gcc -v</span><br><span class=\"line\">g++ -v</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 执行脚本</span></span><br><span class=\"line\">sh cuda_9.0.176_384.81_linux.run</span><br><span class=\"line\">sh cuda_9.0.176.1_linux.run</span><br><span class=\"line\">sh cuda_9.0.176.2_linux.run</span><br><span class=\"line\">sh cuda_9.0.176.3_linux.run</span><br><span class=\"line\">sh cuda_9.0.176.4_linux.run</span><br><span class=\"line\"><span class=\"comment\"># 根据提示选择安装 注意不要安装驱动</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 验证版本</span></span><br><span class=\"line\">gt@yixue-pc:~$ nvcc --version</span><br><span class=\"line\">nvcc: NVIDIA (R) Cuda compiler driver</span><br><span class=\"line\">Copyright (c) 2005-2017 NVIDIA Corporation</span><br><span class=\"line\">Built on Fri_Sep__1_21:08:03_CDT_2017</span><br><span class=\"line\">Cuda compilation tools, release 9.0, V9.0.176</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># vim /etc/profile</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/usr/<span class=\"built_in\">local</span>/cuda-9.0/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> LD_LIBRARY_PATH=<span class=\"variable\">$LD_LIBRARY_PATH</span>:/usr/<span class=\"built_in\">local</span>/cuda-9.0/lib64</span><br><span class=\"line\"><span class=\"built_in\">export</span> LIBRARY_PATH=<span class=\"variable\">$LIBRARY_PATH</span>:/usr/<span class=\"built_in\">local</span>/cuda-9.0/lib64</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装 cudann</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 解压</span></span><br><span class=\"line\">tar xvzf cudnn-9.0-linux-x64-v7.6.0.64.tgz</span><br><span class=\"line\"></span><br><span class=\"line\">sudo cp cuda/include/cudnn.h    /usr/<span class=\"built_in\">local</span>/cuda/include      注意，解压后的文件夹名称为cuda ,将对应文件复制到 /usr/<span class=\"built_in\">local</span>中的cuda内</span><br><span class=\"line\">sudo cp cuda/lib64/libcudnn*    /usr/<span class=\"built_in\">local</span>/cuda/lib64</span><br><span class=\"line\">sudo chmod a+r /usr/<span class=\"built_in\">local</span>/cuda/include/cudnn.h   /usr/<span class=\"built_in\">local</span>/cuda/lib64/libcudnn*</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"ubuntu-安装mxnet\"><a href=\"#ubuntu-安装mxnet\" class=\"headerlink\" title=\"ubuntu 安装mxnet\"></a>ubuntu 安装mxnet</h2><p><a href=\"https://mxnet.incubator.apache.org/versions/master/install/index.html?platform=Linux&language=Python&processor=GPU\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install mxnet-cu90</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"卸载cuda\"><a href=\"#卸载cuda\" class=\"headerlink\" title=\"卸载cuda\"></a>卸载cuda</h2><p><a href=\"https://docs.nvidia.com/cuda/cuda-installation-guide-mac-os-x/index.html#uninstall\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@yixue-pc:/usr/<span class=\"built_in\">local</span>/cuda/bin<span class=\"comment\"># ./cuda-uninstaller</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p><a href=\"https://blog.csdn.net/qq_38298902/article/details/79980749\" target=\"_blank\" rel=\"noopener\">安装mxnet+显卡驱动+cuda9.1+cudnn7.1</a></p>\n"},{"title":"Kafka 安装及配置","date":"2018-05-30T02:52:58.000Z","_content":"\n## 基本介绍\n\nkafka是一个分布式消息队列。具有高性能、持久化、多副本备份、横向扩展能力。生产者往队列里写消息，\n消费者从队列里取消息进行业务逻辑。一般在架构设计中起到解耦、削峰、异步处理的作用。\n\n## 环境介绍\n\n* 系统： Ubuntu 18.04\n\n## 安装配置 ZooKeeper\n\n1. 下载 配置\n\n    ```bash\n    # 打开 zoo.cfg 可以配置端口，目录等\n    wget http://mirrors.cnnic.cn/apache/zookeeper/zookeeper-3.4.6/zookeeper-3.4.6.tar.gz\n    tar zxvf zookeeper-3.4.6.tar.gz\n    cd zookeeper-3.4.6\n    cp -rf conf/zoo_sample.cfg conf/zoo.cfg\n    vim conf/zoo.cfg\n\n    # 启动\n    bin/zkServer.start\n    ```\n\n## 安装配置 Kafka\n\n1. 下载 配置 (需要修改 `server.properties zookeeper.connect=localhost:2181`)\n\n    ``` bash\n    # 打开 zoo.cfg 可以配置端口，目录等\n    wget http://apache.fayea.com/kafka/0.8.2.1/kafka_2.10-0.8.2.1.tgz\n    tar -zxf kafka_2.10-0.8.2.1.tgz\n    cd kafka_2.10-0.8.2.1\n    vi config/server.properties\n    ```\n\n2. 启动\n\n    ``` bash\n    bin/kafka-server-start.config/server.properties\n    ```\n\n3. 命令简介\n\n    ```bash\n    # 创建Topic\n    bin/kafka-topics --create --topic kafkatopic --replication-factor 1 --partitions 1 --zookeeper localhost:2181\n\n    # 查看Topic\n    bin/kafka-topics --list --zookeeper localhost:2181\n\n    # 启动Producer 生产消息\n    bin/kafka-console-producer --broker-list localhost:9092 --topic kafkatopic\n\n    # 启动Consumer 消费消息\n    bin/kafka-console-consumer --zookeeper localhost:2181 --topic kafkatopic --from-beginning\n\n    # 删除Topic\n    bin/kafka-run-class kafka.admin.TopicCommand --delete --topic kafkatopic --zookeeper localhost:2181\n\n    # 查看Topic 的offset \n    bin/kafka-consumer-offset-checker    --zookeeper localhost:2181 --topic kafkatopic --group consumer\n\n    ```\n\n## Kadka 监控配置\n\n### KafkaOffsetMonitor 安装配置\n\n1. 下载     https://github.com/quantifind/KafkaOffsetMonitor/releases/tag/v0.2.0\n\n2. 启动\n\n    ```bash\n    java -cp KafkaOffsetMonitor-assembly-0.2.0.jar \\\n            com.quantifind.kafka.offsetapp.OffsetGetterWeb \\\n            --zk loaclhost:2181 \\\n            --port 8089 \\\n            --refre10.seconds \\\n            --retain 2.days\n\n    # 可以用 nohup & 启动\n    ```\n\n### Kafka-manager\n\n1. 下载     https://github.com/yahoo/kafka-manager\n\n2. 安装配置\n\n    ```bash\n\n    # 默认配置java 环境\n\n    git clone https://github.com/yahoo/kafka-manager/releases\n\n    cd kafka-manager\n\n    ./sbt clean dist\n\n    # 命令执行完成后，在 target/universal 目录中会生产一个zip压缩包kafka-manager-1.3.3.7.zip\n\n    cd target/universal \n\n    unzip kafka-manager-1.3.3.7.zip\n\n\n    # 配置 kafka-manager.zkhosts=\"localhost:2181\"\n    vi conf/application.conf\n    ```\n\n3. 这里如果想看见更多信息需要额外配置\n\n    ```bash\n\n    # 修改 KAFKA_JMX_OPTS\n    vi kafka-run-class.sh\n\n        KAFKA_JMX_OPTS=\"-Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false    -Dcom.sun.management.jmxremote.ssl=false\"\n        JMX_PORT=9999\n\n    # 添加 JMX_PORT\n    vi kafka-server-start.sh\n\n    export JMX_PORT=${JMX_PORT:-9999\n\n    ```\n\n4. 启动\n\n    ```bash\n    bin/kafka-manager\n    # 可以用 nohup & 启动\n    ```\n","source":"_posts/20180530-kafka.md","raw":"---\ntitle: Kafka 安装及配置\ndate: 2018-05-30 10:52:58\ntags: 消息队列 \ncategories: 教程\n\n---\n\n## 基本介绍\n\nkafka是一个分布式消息队列。具有高性能、持久化、多副本备份、横向扩展能力。生产者往队列里写消息，\n消费者从队列里取消息进行业务逻辑。一般在架构设计中起到解耦、削峰、异步处理的作用。\n\n## 环境介绍\n\n* 系统： Ubuntu 18.04\n\n## 安装配置 ZooKeeper\n\n1. 下载 配置\n\n    ```bash\n    # 打开 zoo.cfg 可以配置端口，目录等\n    wget http://mirrors.cnnic.cn/apache/zookeeper/zookeeper-3.4.6/zookeeper-3.4.6.tar.gz\n    tar zxvf zookeeper-3.4.6.tar.gz\n    cd zookeeper-3.4.6\n    cp -rf conf/zoo_sample.cfg conf/zoo.cfg\n    vim conf/zoo.cfg\n\n    # 启动\n    bin/zkServer.start\n    ```\n\n## 安装配置 Kafka\n\n1. 下载 配置 (需要修改 `server.properties zookeeper.connect=localhost:2181`)\n\n    ``` bash\n    # 打开 zoo.cfg 可以配置端口，目录等\n    wget http://apache.fayea.com/kafka/0.8.2.1/kafka_2.10-0.8.2.1.tgz\n    tar -zxf kafka_2.10-0.8.2.1.tgz\n    cd kafka_2.10-0.8.2.1\n    vi config/server.properties\n    ```\n\n2. 启动\n\n    ``` bash\n    bin/kafka-server-start.config/server.properties\n    ```\n\n3. 命令简介\n\n    ```bash\n    # 创建Topic\n    bin/kafka-topics --create --topic kafkatopic --replication-factor 1 --partitions 1 --zookeeper localhost:2181\n\n    # 查看Topic\n    bin/kafka-topics --list --zookeeper localhost:2181\n\n    # 启动Producer 生产消息\n    bin/kafka-console-producer --broker-list localhost:9092 --topic kafkatopic\n\n    # 启动Consumer 消费消息\n    bin/kafka-console-consumer --zookeeper localhost:2181 --topic kafkatopic --from-beginning\n\n    # 删除Topic\n    bin/kafka-run-class kafka.admin.TopicCommand --delete --topic kafkatopic --zookeeper localhost:2181\n\n    # 查看Topic 的offset \n    bin/kafka-consumer-offset-checker    --zookeeper localhost:2181 --topic kafkatopic --group consumer\n\n    ```\n\n## Kadka 监控配置\n\n### KafkaOffsetMonitor 安装配置\n\n1. 下载     https://github.com/quantifind/KafkaOffsetMonitor/releases/tag/v0.2.0\n\n2. 启动\n\n    ```bash\n    java -cp KafkaOffsetMonitor-assembly-0.2.0.jar \\\n            com.quantifind.kafka.offsetapp.OffsetGetterWeb \\\n            --zk loaclhost:2181 \\\n            --port 8089 \\\n            --refre10.seconds \\\n            --retain 2.days\n\n    # 可以用 nohup & 启动\n    ```\n\n### Kafka-manager\n\n1. 下载     https://github.com/yahoo/kafka-manager\n\n2. 安装配置\n\n    ```bash\n\n    # 默认配置java 环境\n\n    git clone https://github.com/yahoo/kafka-manager/releases\n\n    cd kafka-manager\n\n    ./sbt clean dist\n\n    # 命令执行完成后，在 target/universal 目录中会生产一个zip压缩包kafka-manager-1.3.3.7.zip\n\n    cd target/universal \n\n    unzip kafka-manager-1.3.3.7.zip\n\n\n    # 配置 kafka-manager.zkhosts=\"localhost:2181\"\n    vi conf/application.conf\n    ```\n\n3. 这里如果想看见更多信息需要额外配置\n\n    ```bash\n\n    # 修改 KAFKA_JMX_OPTS\n    vi kafka-run-class.sh\n\n        KAFKA_JMX_OPTS=\"-Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false    -Dcom.sun.management.jmxremote.ssl=false\"\n        JMX_PORT=9999\n\n    # 添加 JMX_PORT\n    vi kafka-server-start.sh\n\n    export JMX_PORT=${JMX_PORT:-9999\n\n    ```\n\n4. 启动\n\n    ```bash\n    bin/kafka-manager\n    # 可以用 nohup & 启动\n    ```\n","slug":"kafka","published":1,"updated":"2019-05-30T02:45:29.571Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwdpk7yk000962xsbgjw05ga","content":"<h2 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h2><p>kafka是一个分布式消息队列。具有高性能、持久化、多副本备份、横向扩展能力。生产者往队列里写消息，<br>消费者从队列里取消息进行业务逻辑。一般在架构设计中起到解耦、削峰、异步处理的作用。</p>\n<h2 id=\"环境介绍\"><a href=\"#环境介绍\" class=\"headerlink\" title=\"环境介绍\"></a>环境介绍</h2><ul>\n<li>系统： Ubuntu 18.04</li>\n</ul>\n<h2 id=\"安装配置-ZooKeeper\"><a href=\"#安装配置-ZooKeeper\" class=\"headerlink\" title=\"安装配置 ZooKeeper\"></a>安装配置 ZooKeeper</h2><ol>\n<li><p>下载 配置</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 打开 zoo.cfg 可以配置端口，目录等</span></span><br><span class=\"line\">wget http://mirrors.cnnic.cn/apache/zookeeper/zookeeper-3.4.6/zookeeper-3.4.6.tar.gz</span><br><span class=\"line\">tar zxvf zookeeper-3.4.6.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> zookeeper-3.4.6</span><br><span class=\"line\">cp -rf conf/zoo_sample.cfg conf/zoo.cfg</span><br><span class=\"line\">vim conf/zoo.cfg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">bin/zkServer.start</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"安装配置-Kafka\"><a href=\"#安装配置-Kafka\" class=\"headerlink\" title=\"安装配置 Kafka\"></a>安装配置 Kafka</h2><ol>\n<li><p>下载 配置 (需要修改 <code>server.properties zookeeper.connect=localhost:2181</code>)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 打开 zoo.cfg 可以配置端口，目录等</span></span><br><span class=\"line\">wget http://apache.fayea.com/kafka/0.8.2.1/kafka_2.10-0.8.2.1.tgz</span><br><span class=\"line\">tar -zxf kafka_2.10-0.8.2.1.tgz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> kafka_2.10-0.8.2.1</span><br><span class=\"line\">vi config/server.properties</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin/kafka-server-start.config/server.properties</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>命令简介</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建Topic</span></span><br><span class=\"line\">bin/kafka-topics --create --topic kafkatopic --replication-factor 1 --partitions 1 --zookeeper localhost:2181</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看Topic</span></span><br><span class=\"line\">bin/kafka-topics --list --zookeeper localhost:2181</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动Producer 生产消息</span></span><br><span class=\"line\">bin/kafka-console-producer --broker-list localhost:9092 --topic kafkatopic</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动Consumer 消费消息</span></span><br><span class=\"line\">bin/kafka-console-consumer --zookeeper localhost:2181 --topic kafkatopic --from-beginning</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除Topic</span></span><br><span class=\"line\">bin/kafka-run-class kafka.admin.TopicCommand --delete --topic kafkatopic --zookeeper localhost:2181</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看Topic 的offset </span></span><br><span class=\"line\">bin/kafka-consumer-offset-checker    --zookeeper localhost:2181 --topic kafkatopic --group consumer</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"Kadka-监控配置\"><a href=\"#Kadka-监控配置\" class=\"headerlink\" title=\"Kadka 监控配置\"></a>Kadka 监控配置</h2><h3 id=\"KafkaOffsetMonitor-安装配置\"><a href=\"#KafkaOffsetMonitor-安装配置\" class=\"headerlink\" title=\"KafkaOffsetMonitor 安装配置\"></a>KafkaOffsetMonitor 安装配置</h3><ol>\n<li><p>下载     <a href=\"https://github.com/quantifind/KafkaOffsetMonitor/releases/tag/v0.2.0\" target=\"_blank\" rel=\"noopener\">https://github.com/quantifind/KafkaOffsetMonitor/releases/tag/v0.2.0</a></p>\n</li>\n<li><p>启动</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -cp KafkaOffsetMonitor-assembly-0.2.0.jar \\</span><br><span class=\"line\">        com.quantifind.kafka.offsetapp.OffsetGetterWeb \\</span><br><span class=\"line\">        --zk loaclhost:2181 \\</span><br><span class=\"line\">        --port 8089 \\</span><br><span class=\"line\">        --refre10.seconds \\</span><br><span class=\"line\">        --retain 2.days</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可以用 nohup &amp; 启动</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h3 id=\"Kafka-manager\"><a href=\"#Kafka-manager\" class=\"headerlink\" title=\"Kafka-manager\"></a>Kafka-manager</h3><ol>\n<li><p>下载     <a href=\"https://github.com/yahoo/kafka-manager\" target=\"_blank\" rel=\"noopener\">https://github.com/yahoo/kafka-manager</a></p>\n</li>\n<li><p>安装配置</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 默认配置java 环境</span></span><br><span class=\"line\"></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/yahoo/kafka-manager/releases</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> kafka-manager</span><br><span class=\"line\"></span><br><span class=\"line\">./sbt clean dist</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 命令执行完成后，在 target/universal 目录中会生产一个zip压缩包kafka-manager-1.3.3.7.zip</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> target/universal </span><br><span class=\"line\"></span><br><span class=\"line\">unzip kafka-manager-1.3.3.7.zip</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置 kafka-manager.zkhosts=\"localhost:2181\"</span></span><br><span class=\"line\">vi conf/application.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>这里如果想看见更多信息需要额外配置</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改 KAFKA_JMX_OPTS</span></span><br><span class=\"line\">vi kafka-run-class.sh</span><br><span class=\"line\"></span><br><span class=\"line\">    KAFKA_JMX_OPTS=<span class=\"string\">\"-Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false    -Dcom.sun.management.jmxremote.ssl=false\"</span></span><br><span class=\"line\">    JMX_PORT=9999</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加 JMX_PORT</span></span><br><span class=\"line\">vi kafka-server-start.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> JMX_PORT=$&#123;JMX_PORT:-9999</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin/kafka-manager</span><br><span class=\"line\"><span class=\"comment\"># 可以用 nohup &amp; 启动</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h2><p>kafka是一个分布式消息队列。具有高性能、持久化、多副本备份、横向扩展能力。生产者往队列里写消息，<br>消费者从队列里取消息进行业务逻辑。一般在架构设计中起到解耦、削峰、异步处理的作用。</p>\n<h2 id=\"环境介绍\"><a href=\"#环境介绍\" class=\"headerlink\" title=\"环境介绍\"></a>环境介绍</h2><ul>\n<li>系统： Ubuntu 18.04</li>\n</ul>\n<h2 id=\"安装配置-ZooKeeper\"><a href=\"#安装配置-ZooKeeper\" class=\"headerlink\" title=\"安装配置 ZooKeeper\"></a>安装配置 ZooKeeper</h2><ol>\n<li><p>下载 配置</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 打开 zoo.cfg 可以配置端口，目录等</span></span><br><span class=\"line\">wget http://mirrors.cnnic.cn/apache/zookeeper/zookeeper-3.4.6/zookeeper-3.4.6.tar.gz</span><br><span class=\"line\">tar zxvf zookeeper-3.4.6.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> zookeeper-3.4.6</span><br><span class=\"line\">cp -rf conf/zoo_sample.cfg conf/zoo.cfg</span><br><span class=\"line\">vim conf/zoo.cfg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">bin/zkServer.start</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"安装配置-Kafka\"><a href=\"#安装配置-Kafka\" class=\"headerlink\" title=\"安装配置 Kafka\"></a>安装配置 Kafka</h2><ol>\n<li><p>下载 配置 (需要修改 <code>server.properties zookeeper.connect=localhost:2181</code>)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 打开 zoo.cfg 可以配置端口，目录等</span></span><br><span class=\"line\">wget http://apache.fayea.com/kafka/0.8.2.1/kafka_2.10-0.8.2.1.tgz</span><br><span class=\"line\">tar -zxf kafka_2.10-0.8.2.1.tgz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> kafka_2.10-0.8.2.1</span><br><span class=\"line\">vi config/server.properties</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin/kafka-server-start.config/server.properties</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>命令简介</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建Topic</span></span><br><span class=\"line\">bin/kafka-topics --create --topic kafkatopic --replication-factor 1 --partitions 1 --zookeeper localhost:2181</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看Topic</span></span><br><span class=\"line\">bin/kafka-topics --list --zookeeper localhost:2181</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动Producer 生产消息</span></span><br><span class=\"line\">bin/kafka-console-producer --broker-list localhost:9092 --topic kafkatopic</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动Consumer 消费消息</span></span><br><span class=\"line\">bin/kafka-console-consumer --zookeeper localhost:2181 --topic kafkatopic --from-beginning</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除Topic</span></span><br><span class=\"line\">bin/kafka-run-class kafka.admin.TopicCommand --delete --topic kafkatopic --zookeeper localhost:2181</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看Topic 的offset </span></span><br><span class=\"line\">bin/kafka-consumer-offset-checker    --zookeeper localhost:2181 --topic kafkatopic --group consumer</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"Kadka-监控配置\"><a href=\"#Kadka-监控配置\" class=\"headerlink\" title=\"Kadka 监控配置\"></a>Kadka 监控配置</h2><h3 id=\"KafkaOffsetMonitor-安装配置\"><a href=\"#KafkaOffsetMonitor-安装配置\" class=\"headerlink\" title=\"KafkaOffsetMonitor 安装配置\"></a>KafkaOffsetMonitor 安装配置</h3><ol>\n<li><p>下载     <a href=\"https://github.com/quantifind/KafkaOffsetMonitor/releases/tag/v0.2.0\" target=\"_blank\" rel=\"noopener\">https://github.com/quantifind/KafkaOffsetMonitor/releases/tag/v0.2.0</a></p>\n</li>\n<li><p>启动</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -cp KafkaOffsetMonitor-assembly-0.2.0.jar \\</span><br><span class=\"line\">        com.quantifind.kafka.offsetapp.OffsetGetterWeb \\</span><br><span class=\"line\">        --zk loaclhost:2181 \\</span><br><span class=\"line\">        --port 8089 \\</span><br><span class=\"line\">        --refre10.seconds \\</span><br><span class=\"line\">        --retain 2.days</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可以用 nohup &amp; 启动</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h3 id=\"Kafka-manager\"><a href=\"#Kafka-manager\" class=\"headerlink\" title=\"Kafka-manager\"></a>Kafka-manager</h3><ol>\n<li><p>下载     <a href=\"https://github.com/yahoo/kafka-manager\" target=\"_blank\" rel=\"noopener\">https://github.com/yahoo/kafka-manager</a></p>\n</li>\n<li><p>安装配置</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 默认配置java 环境</span></span><br><span class=\"line\"></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/yahoo/kafka-manager/releases</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> kafka-manager</span><br><span class=\"line\"></span><br><span class=\"line\">./sbt clean dist</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 命令执行完成后，在 target/universal 目录中会生产一个zip压缩包kafka-manager-1.3.3.7.zip</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> target/universal </span><br><span class=\"line\"></span><br><span class=\"line\">unzip kafka-manager-1.3.3.7.zip</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置 kafka-manager.zkhosts=\"localhost:2181\"</span></span><br><span class=\"line\">vi conf/application.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>这里如果想看见更多信息需要额外配置</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改 KAFKA_JMX_OPTS</span></span><br><span class=\"line\">vi kafka-run-class.sh</span><br><span class=\"line\"></span><br><span class=\"line\">    KAFKA_JMX_OPTS=<span class=\"string\">\"-Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false    -Dcom.sun.management.jmxremote.ssl=false\"</span></span><br><span class=\"line\">    JMX_PORT=9999</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加 JMX_PORT</span></span><br><span class=\"line\">vi kafka-server-start.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> JMX_PORT=$&#123;JMX_PORT:-9999</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin/kafka-manager</span><br><span class=\"line\"><span class=\"comment\"># 可以用 nohup &amp; 启动</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n"},{"title":"jupyter 安装部署","date":"2019-05-30T02:44:24.000Z","_content":"\n## 简介\n\nJupyter Notebook 的本质是一个 Web 应用程序，便于创建和共享文学化程序文档，支持实时代码，数学方程，可视化和 markdown。\n用途包括：数据清理和转换，数值模拟，统计建模，机器学习等等\n\n## 下载安装 jupyter\n\n1. 下载\n\n    ```bash\n    pip3 install jupyter\n    pip3 install jupyterlab\n\n    ```\n\n2. 配置\n\n    ```bash\n    # ipython 生成密码\n    In [1]: from notebook.auth import passwd\n\n    In [2]: passwd()\n    Enter password:\n    Verify password:\n    Out[2]: 'sha1:85b25f0bd15b:63e646d4f4f9be9f05e4eb97fd0df00b1e86db8e'\n\n    # 生成默认的配置文件\n    jupyter lab --generate-config\n\n    # 配置启动参数（其他参数可以根据自己喜好设置）\n    vi /home/gt/.jupyter/jupyter_notebook_config.py\n    c.NotebookApp.password = 'sha1:6d74e2768be3:d4fd1139cb0d3cb01cbc03d69031a93851c83497'\n    c.NotebookApp.port = 11235\n    c.NotebookApp.ip = '*'\n    c.NotebookApp.allow_remote_access = True\n    c.NotebookApp.notebook_dir = '/home/gt/.workspace'\n\n    ```\n\n## supervisor部署\n\n```bash\n# 安装supervisor （这里是ubuntu, 也可以支持pip）\nsudo apt install supervisor\n\n# 配置启动参数\nvi /etc/supervisor/conf.d/jupyter.conf\n\n[program:jupyter]\nuser=gt\ndirectory=/home/gt/.local\ncommand=/home/gt/.local/bin/jupyter lab\nautostart=true\nautorestart=false\nstderr_logfile=/tmp/jupyter_stderr.log\nstdout_logfile=/tmp/jupyter_stdout.log\n\n# 启动配置的服务\n```\n\n## 其他参考资料\n\n[详细的插件介绍](https://towardsdatascience.com/jupyter-lab-evolution-of-the-jupyter-notebook-5297cacde6b)\n","source":"_posts/20190530-jupyter.md","raw":"---\ntitle: jupyter 安装部署\ndate: 2019-05-30 10:44:24\ntags: jupyter\ncategories: 教程\n---\n\n## 简介\n\nJupyter Notebook 的本质是一个 Web 应用程序，便于创建和共享文学化程序文档，支持实时代码，数学方程，可视化和 markdown。\n用途包括：数据清理和转换，数值模拟，统计建模，机器学习等等\n\n## 下载安装 jupyter\n\n1. 下载\n\n    ```bash\n    pip3 install jupyter\n    pip3 install jupyterlab\n\n    ```\n\n2. 配置\n\n    ```bash\n    # ipython 生成密码\n    In [1]: from notebook.auth import passwd\n\n    In [2]: passwd()\n    Enter password:\n    Verify password:\n    Out[2]: 'sha1:85b25f0bd15b:63e646d4f4f9be9f05e4eb97fd0df00b1e86db8e'\n\n    # 生成默认的配置文件\n    jupyter lab --generate-config\n\n    # 配置启动参数（其他参数可以根据自己喜好设置）\n    vi /home/gt/.jupyter/jupyter_notebook_config.py\n    c.NotebookApp.password = 'sha1:6d74e2768be3:d4fd1139cb0d3cb01cbc03d69031a93851c83497'\n    c.NotebookApp.port = 11235\n    c.NotebookApp.ip = '*'\n    c.NotebookApp.allow_remote_access = True\n    c.NotebookApp.notebook_dir = '/home/gt/.workspace'\n\n    ```\n\n## supervisor部署\n\n```bash\n# 安装supervisor （这里是ubuntu, 也可以支持pip）\nsudo apt install supervisor\n\n# 配置启动参数\nvi /etc/supervisor/conf.d/jupyter.conf\n\n[program:jupyter]\nuser=gt\ndirectory=/home/gt/.local\ncommand=/home/gt/.local/bin/jupyter lab\nautostart=true\nautorestart=false\nstderr_logfile=/tmp/jupyter_stderr.log\nstdout_logfile=/tmp/jupyter_stdout.log\n\n# 启动配置的服务\n```\n\n## 其他参考资料\n\n[详细的插件介绍](https://towardsdatascience.com/jupyter-lab-evolution-of-the-jupyter-notebook-5297cacde6b)\n","slug":"jupyter","published":1,"updated":"2019-06-01T15:58:47.833Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwdpk7ym000d62xsx28yd9m6","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Jupyter Notebook 的本质是一个 Web 应用程序，便于创建和共享文学化程序文档，支持实时代码，数学方程，可视化和 markdown。<br>用途包括：数据清理和转换，数值模拟，统计建模，机器学习等等</p>\n<h2 id=\"下载安装-jupyter\"><a href=\"#下载安装-jupyter\" class=\"headerlink\" title=\"下载安装 jupyter\"></a>下载安装 jupyter</h2><ol>\n<li><p>下载</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install jupyter</span><br><span class=\"line\">pip3 install jupyterlab</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ipython 生成密码</span></span><br><span class=\"line\">In [1]: from notebook.auth import passwd</span><br><span class=\"line\"></span><br><span class=\"line\">In [2]: passwd()</span><br><span class=\"line\">Enter password:</span><br><span class=\"line\">Verify password:</span><br><span class=\"line\">Out[2]: <span class=\"string\">'sha1:85b25f0bd15b:63e646d4f4f9be9f05e4eb97fd0df00b1e86db8e'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成默认的配置文件</span></span><br><span class=\"line\">jupyter lab --generate-config</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置启动参数（其他参数可以根据自己喜好设置）</span></span><br><span class=\"line\">vi /home/gt/.jupyter/jupyter_notebook_config.py</span><br><span class=\"line\">c.NotebookApp.password = <span class=\"string\">'sha1:6d74e2768be3:d4fd1139cb0d3cb01cbc03d69031a93851c83497'</span></span><br><span class=\"line\">c.NotebookApp.port = 11235</span><br><span class=\"line\">c.NotebookApp.ip = <span class=\"string\">'*'</span></span><br><span class=\"line\">c.NotebookApp.allow_remote_access = True</span><br><span class=\"line\">c.NotebookApp.notebook_dir = <span class=\"string\">'/home/gt/.workspace'</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"supervisor部署\"><a href=\"#supervisor部署\" class=\"headerlink\" title=\"supervisor部署\"></a>supervisor部署</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装supervisor （这里是ubuntu, 也可以支持pip）</span></span><br><span class=\"line\">sudo apt install supervisor</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置启动参数</span></span><br><span class=\"line\">vi /etc/supervisor/conf.d/jupyter.conf</span><br><span class=\"line\"></span><br><span class=\"line\">[program:jupyter]</span><br><span class=\"line\">user=gt</span><br><span class=\"line\">directory=/home/gt/.<span class=\"built_in\">local</span></span><br><span class=\"line\"><span class=\"built_in\">command</span>=/home/gt/.<span class=\"built_in\">local</span>/bin/jupyter lab</span><br><span class=\"line\">autostart=<span class=\"literal\">true</span></span><br><span class=\"line\">autorestart=<span class=\"literal\">false</span></span><br><span class=\"line\">stderr_logfile=/tmp/jupyter_stderr.log</span><br><span class=\"line\">stdout_logfile=/tmp/jupyter_stdout.log</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动配置的服务</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"其他参考资料\"><a href=\"#其他参考资料\" class=\"headerlink\" title=\"其他参考资料\"></a>其他参考资料</h2><p><a href=\"https://towardsdatascience.com/jupyter-lab-evolution-of-the-jupyter-notebook-5297cacde6b\" target=\"_blank\" rel=\"noopener\">详细的插件介绍</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Jupyter Notebook 的本质是一个 Web 应用程序，便于创建和共享文学化程序文档，支持实时代码，数学方程，可视化和 markdown。<br>用途包括：数据清理和转换，数值模拟，统计建模，机器学习等等</p>\n<h2 id=\"下载安装-jupyter\"><a href=\"#下载安装-jupyter\" class=\"headerlink\" title=\"下载安装 jupyter\"></a>下载安装 jupyter</h2><ol>\n<li><p>下载</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install jupyter</span><br><span class=\"line\">pip3 install jupyterlab</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ipython 生成密码</span></span><br><span class=\"line\">In [1]: from notebook.auth import passwd</span><br><span class=\"line\"></span><br><span class=\"line\">In [2]: passwd()</span><br><span class=\"line\">Enter password:</span><br><span class=\"line\">Verify password:</span><br><span class=\"line\">Out[2]: <span class=\"string\">'sha1:85b25f0bd15b:63e646d4f4f9be9f05e4eb97fd0df00b1e86db8e'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成默认的配置文件</span></span><br><span class=\"line\">jupyter lab --generate-config</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置启动参数（其他参数可以根据自己喜好设置）</span></span><br><span class=\"line\">vi /home/gt/.jupyter/jupyter_notebook_config.py</span><br><span class=\"line\">c.NotebookApp.password = <span class=\"string\">'sha1:6d74e2768be3:d4fd1139cb0d3cb01cbc03d69031a93851c83497'</span></span><br><span class=\"line\">c.NotebookApp.port = 11235</span><br><span class=\"line\">c.NotebookApp.ip = <span class=\"string\">'*'</span></span><br><span class=\"line\">c.NotebookApp.allow_remote_access = True</span><br><span class=\"line\">c.NotebookApp.notebook_dir = <span class=\"string\">'/home/gt/.workspace'</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"supervisor部署\"><a href=\"#supervisor部署\" class=\"headerlink\" title=\"supervisor部署\"></a>supervisor部署</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装supervisor （这里是ubuntu, 也可以支持pip）</span></span><br><span class=\"line\">sudo apt install supervisor</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置启动参数</span></span><br><span class=\"line\">vi /etc/supervisor/conf.d/jupyter.conf</span><br><span class=\"line\"></span><br><span class=\"line\">[program:jupyter]</span><br><span class=\"line\">user=gt</span><br><span class=\"line\">directory=/home/gt/.<span class=\"built_in\">local</span></span><br><span class=\"line\"><span class=\"built_in\">command</span>=/home/gt/.<span class=\"built_in\">local</span>/bin/jupyter lab</span><br><span class=\"line\">autostart=<span class=\"literal\">true</span></span><br><span class=\"line\">autorestart=<span class=\"literal\">false</span></span><br><span class=\"line\">stderr_logfile=/tmp/jupyter_stderr.log</span><br><span class=\"line\">stdout_logfile=/tmp/jupyter_stdout.log</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动配置的服务</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"其他参考资料\"><a href=\"#其他参考资料\" class=\"headerlink\" title=\"其他参考资料\"></a>其他参考资料</h2><p><a href=\"https://towardsdatascience.com/jupyter-lab-evolution-of-the-jupyter-notebook-5297cacde6b\" target=\"_blank\" rel=\"noopener\">详细的插件介绍</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjwdpk7y9000062xsit93kk32","category_id":"cjwdpk7yg000462xsvyav3pw1","_id":"cjwdpk7yn000e62xsd079qbl1"},{"post_id":"cjwdpk7yd000262xsqrgq84ki","category_id":"cjwdpk7yl000a62xsirkufgmc","_id":"cjwdpk7yo000i62xs2fctbh0d"},{"post_id":"cjwdpk7yh000662xspxc8m86q","category_id":"cjwdpk7yn000f62xsesg0n0qx","_id":"cjwdpk7yp000m62xs13pm6vab"},{"post_id":"cjwdpk7yj000862xs7ysedd6s","category_id":"cjwdpk7yo000j62xs9depunk1","_id":"cjwdpk7yp000q62xsvljfxfot"},{"post_id":"cjwdpk7yk000962xsbgjw05ga","category_id":"cjwdpk7yp000n62xs4bnsfugx","_id":"cjwdpk7ys000u62xsokiqss1b"},{"post_id":"cjwdpk7ym000d62xsx28yd9m6","category_id":"cjwdpk7yp000n62xs4bnsfugx","_id":"cjwdpk7ys000w62xsb9yv9wb3"}],"PostTag":[{"post_id":"cjwdpk7y9000062xsit93kk32","tag_id":"cjwdpk7yh000562xs20vw2jwk","_id":"cjwdpk7ym000c62xsl64st1uq"},{"post_id":"cjwdpk7yd000262xsqrgq84ki","tag_id":"cjwdpk7yl000b62xslvhn5g3f","_id":"cjwdpk7yo000h62xsvcz8kx2w"},{"post_id":"cjwdpk7yh000662xspxc8m86q","tag_id":"cjwdpk7yo000g62xsvdugtfiw","_id":"cjwdpk7yo000l62xsda53s20k"},{"post_id":"cjwdpk7yj000862xs7ysedd6s","tag_id":"cjwdpk7yo000k62xsr1umpdyf","_id":"cjwdpk7yp000p62xsnwbte61r"},{"post_id":"cjwdpk7yk000962xsbgjw05ga","tag_id":"cjwdpk7yp000o62xss2qkudnd","_id":"cjwdpk7ys000t62xsswjilq1c"},{"post_id":"cjwdpk7ym000d62xsx28yd9m6","tag_id":"cjwdpk7yq000s62xshdbhs6yi","_id":"cjwdpk7ys000v62xs9phi68s2"}],"Tag":[{"name":"linux python docker","_id":"cjwdpk7yh000562xs20vw2jwk"},{"name":"博客搭建 教程","_id":"cjwdpk7yl000b62xslvhn5g3f"},{"name":"数据仓库 教程","_id":"cjwdpk7yo000g62xsvdugtfiw"},{"name":"mxnet cuda","_id":"cjwdpk7yo000k62xsr1umpdyf"},{"name":"消息队列","_id":"cjwdpk7yp000o62xss2qkudnd"},{"name":"jupyter","_id":"cjwdpk7yq000s62xshdbhs6yi"}]}}
{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/maupassant/source/css/donate.css","path":"css/donate.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/default.css","path":"css/default.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/donate/index.html","path":"donate/index.html","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/AliPayQR.png","path":"img/AliPayQR.png","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/BTCQR.png","path":"img/BTCQR.png","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/WeChatQR.png","path":"img/WeChatQR.png","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/alipay.svg","path":"img/alipay.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/bitcoin.svg","path":"img/bitcoin.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/github.svg","path":"img/github.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/like.svg","path":"img/like.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/paypal.svg","path":"img/paypal.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/wechat.svg","path":"img/wechat.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/donate.js","path":"js/donate.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/gitment.browser.js","path":"js/gitment.browser.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/maupassant/.gitignore","hash":"16945417d10c15c950306794dbb0d970b5a199fe","modified":1558683122641},{"_id":"themes/maupassant/.travis.yml","hash":"0339959f29deddc365e8fe8bd85da524410b9a23","modified":1558683122642},{"_id":"themes/maupassant/LICENSE","hash":"f0ac2f92770650c9835183f79010c0d307b34acd","modified":1558683122642},{"_id":"themes/maupassant/README.md","hash":"90032cb3a46f741a3d6198de9f83ce384505519e","modified":1558683122642},{"_id":"themes/maupassant/_config.yml","hash":"d67293dac1559afd76219b5a9c7e5a006e1f9346","modified":1558683122642},{"_id":"themes/maupassant/package.json","hash":"f092433469eb87362e831326425a6a5c3c9fea0d","modified":1558683122647},{"_id":"source/_posts/greenplum.md","hash":"fda5f479a514d89c9bd118e943b62d96a89f9c02","modified":1558686879401},{"_id":"source/_posts/kafka.md","hash":"0028e401bd99718264b74a8faf014c17da66e3df","modified":1558686229143},{"_id":"source/_posts/linux-record.md","hash":"d585a1457dfc0666087a89b4e8bc63f68c6855bd","modified":1558688796055},{"_id":"themes/maupassant/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1558683122635},{"_id":"themes/maupassant/.git/config","hash":"037345b11c41abb3dbbbd6e0242ced24979a7097","modified":1558683122637},{"_id":"source/_posts/hexo.md","hash":"54312bb06b1c25fee4915bfcf8affeb0a79918bb","modified":1558688309741},{"_id":"themes/maupassant/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1558683118429},{"_id":"source/about/index.md","hash":"7e22a5a781d1d6844f4efa0037ea6e5b973dcfbc","modified":1558680638828},{"_id":"themes/maupassant/.git/index","hash":"b28a813c2084c74a69d34ff1075f90f9a95e07a9","modified":1558688991366},{"_id":"themes/maupassant/.git/packed-refs","hash":"6aa82cbab8eae86de4682fb0c8931456c470dca5","modified":1558683122633},{"_id":"themes/maupassant/layout/archive.pug","hash":"2fe2cff144c9b7b509b7b6cb1b3acba27aa1d132","modified":1558683122646},{"_id":"themes/maupassant/layout/base-without-sidebar.pug","hash":"16c4d1079450f801b5ac079d3cc101856d8f387c","modified":1558683122646},{"_id":"themes/maupassant/layout/base.pug","hash":"a4e32bcb580b76af9ad0582d9d3f0107e34509ed","modified":1558683122646},{"_id":"themes/maupassant/layout/index.pug","hash":"0435a4e5f5c6976e05b3079d335453c246f5ba6e","modified":1558683122646},{"_id":"themes/maupassant/layout/page.pug","hash":"8cfd307b13cad8be34a1e75c4566f96c1722e08e","modified":1558683122646},{"_id":"themes/maupassant/layout/post.pug","hash":"f4d17b1b2a590cc076e80d912591648f9e99aeaf","modified":1558683122646},{"_id":"themes/maupassant/layout/single-column.pug","hash":"0593f261dc208bb0b5c4232eb41eff597a291bd9","modified":1558683122646},{"_id":"themes/maupassant/layout/timeline.pug","hash":"84fbfc92ccdf291b491140d89557553141a5d3f9","modified":1558683122647},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"5d3556a885e355a8c2da65ef3e7b3ee36a628bfa","modified":1558683122642},{"_id":"themes/maupassant/languages/en.yml","hash":"c3fb5c155560a00889a75882c680afe1197ebf1a","modified":1558683122643},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"58e1d04bcd1834fa9d2960e18e027abbbccbedc9","modified":1558683122643},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"b47906ec0abf867fb3e3360bc046b7afb68aee25","modified":1558683122643},{"_id":"themes/maupassant/languages/ko.yml","hash":"909a33e0befa6978e8e72157c6b415b48551ee31","modified":1558683122643},{"_id":"themes/maupassant/languages/ru.yml","hash":"2476a631f4d3c668de04af85a6c2c97ba2a57e96","modified":1558683122643},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"710b204e637c18b86ac7c681f7d1cf8dfeddf4bb","modified":1558683122643},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"bf3ab970f2ab3f29ddeb9f59bf98163be635e284","modified":1558683122643},{"_id":"themes/maupassant/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1558683118430},{"_id":"themes/maupassant/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1558683118432},{"_id":"themes/maupassant/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1558683118432},{"_id":"themes/maupassant/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1558683118433},{"_id":"themes/maupassant/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1558683118434},{"_id":"themes/maupassant/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1558683118434},{"_id":"themes/maupassant/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1558683118431},{"_id":"themes/maupassant/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1558683118431},{"_id":"themes/maupassant/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1558683118428},{"_id":"themes/maupassant/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1558683118432},{"_id":"themes/maupassant/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1558683118433},{"_id":"themes/maupassant/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1558683118434},{"_id":"themes/maupassant/.git/logs/HEAD","hash":"3cffc0733c16ea9c0d5699759800211b2de7dfdc","modified":1558683122636},{"_id":"themes/maupassant/layout/_partial/after_footer.pug","hash":"31bf35a57634ff8a796c71dd5246eba3a3db10ee","modified":1558683122643},{"_id":"themes/maupassant/layout/_partial/comments.pug","hash":"ff14baa25f6db34dedfb5e029c25687a335ad430","modified":1558683122644},{"_id":"themes/maupassant/layout/_partial/footer.pug","hash":"650781b5bc8c632658ad6880ba663b1e3bfb5798","modified":1558683122644},{"_id":"themes/maupassant/layout/_partial/head.pug","hash":"8af6e452ea2a56b110b5079f79bf743b643f7d6c","modified":1558683122644},{"_id":"themes/maupassant/layout/_partial/helpers.pug","hash":"acdf9e2d52ee86c831fa15ce1570930c5779bc78","modified":1558683122644},{"_id":"themes/maupassant/layout/_partial/mathjax.pug","hash":"b54b56faff9e47ab3ca3cdd55056c73e60776f3c","modified":1558683122644},{"_id":"themes/maupassant/layout/_partial/mathjax2.pug","hash":"d6ac5dc4e9c7a1b866f1f92d88988cfb35aded4c","modified":1558683122644},{"_id":"themes/maupassant/layout/_partial/paginator.pug","hash":"53f9cb77448e84a98da5eb688e2e12b173c555bb","modified":1558683122644},{"_id":"themes/maupassant/layout/_partial/post_nav.pug","hash":"a2d698c84bb6da08195fe870dbd7215f65388d3f","modified":1558683122644},{"_id":"themes/maupassant/layout/_partial/tag.pug","hash":"0f0e6770e9d5dd8040e330d71bbbfadd2df36a28","modified":1558683122644},{"_id":"themes/maupassant/layout/_partial/totop.pug","hash":"8225bbc3cdb9648bc2e6872e5c616a9a1e4def4f","modified":1558683122645},{"_id":"themes/maupassant/layout/_partial/wordcount.pug","hash":"004c8a3edc19d428179b83a0f97eae3c1a6d3cfa","modified":1558683122645},{"_id":"themes/maupassant/layout/_widget/category.pug","hash":"7c6aed762934ca51aa2669b886254da24b77bc14","modified":1558683122645},{"_id":"themes/maupassant/layout/_widget/links.pug","hash":"c45aa7ec00158579e58f1f8dfd890447bb5e5e54","modified":1558683122645},{"_id":"themes/maupassant/layout/_widget/recent_comments.pug","hash":"4102d446f13b02ff617f055c2a8f726bca12744a","modified":1558683122645},{"_id":"themes/maupassant/layout/_widget/recent_posts.pug","hash":"19431336d724d2118e46da43683bce9063176541","modified":1558683122645},{"_id":"themes/maupassant/layout/_widget/search.pug","hash":"6e8e4123cca38840c4607c1a056205972b82bb7b","modified":1558683122645},{"_id":"themes/maupassant/layout/_widget/tag.pug","hash":"132f049ce677d0e38f50073174c4ee4b825d4a06","modified":1558683122645},{"_id":"themes/maupassant/source/css/donate.css","hash":"f019876946aeb80e567ece250d54c1327c794583","modified":1558683122647},{"_id":"themes/maupassant/source/css/default.css","hash":"7fbb18b73b44ed11193739c55fce53a6f173cf68","modified":1558683122647},{"_id":"themes/maupassant/source/donate/index.html","hash":"c42428765d48c8674ce28100ad95fdf4c7806a85","modified":1558683122649},{"_id":"themes/maupassant/source/css/style.scss","hash":"fa5dfd0867f95fe1708e6fda90e41db6364c01d9","modified":1558683122648},{"_id":"themes/maupassant/source/img/AliPayQR.png","hash":"7787b5d91cbf0e19a1260df24f7d949771c7d45b","modified":1558683122649},{"_id":"themes/maupassant/source/img/BTCQR.png","hash":"7d1c80f953bfb6f0a37d432b04c936ea165bfd97","modified":1558683122650},{"_id":"themes/maupassant/source/img/WeChatQR.png","hash":"8c41aca7883e5ff714c56556f5fff8e7e7c38093","modified":1558683122651},{"_id":"themes/maupassant/source/img/alipay.svg","hash":"46cc0552a9f6d700d618db3fcad25e1b8e697e36","modified":1558683122651},{"_id":"themes/maupassant/source/img/bitcoin.svg","hash":"635f7cca5e675d192be2717788175c7a2146013a","modified":1558683122652},{"_id":"themes/maupassant/source/img/github.svg","hash":"90ba9a3b0dc19e70e742a39b014194f801e00f97","modified":1558683122652},{"_id":"themes/maupassant/source/img/like.svg","hash":"22a2754dc454d7b0321b70914fb2936b8d2ea8ab","modified":1558683122653},{"_id":"themes/maupassant/source/img/paypal.svg","hash":"92f3bc495f20a0190d3041be03345c46d6238c25","modified":1558683122653},{"_id":"themes/maupassant/source/img/wechat.svg","hash":"330496ad42446a29f37a2b97fc388ebd77a8cb9f","modified":1558683122653},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1558683122654},{"_id":"themes/maupassant/source/js/donate.js","hash":"780beaaf44b1e6c057752bdbc085b1048937e5e7","modified":1558683122654},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1558683122654},{"_id":"themes/maupassant/source/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1558683122656},{"_id":"themes/maupassant/source/js/share.js","hash":"a2f9de374523dc7f2ddb90ed5f24b668c20d9272","modified":1558683122656},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1558683122656},{"_id":"themes/maupassant/source/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1558683122656},{"_id":"themes/maupassant/.git/refs/heads/master","hash":"166458305b16424499927a509c874860afee76b4","modified":1558683122635},{"_id":"themes/maupassant/.git/objects/pack/pack-f799ed1b2f961451d291bec64cd0d8578ab30651.idx","hash":"074f00dbf5ba9e371cd13794f80e6067247054a2","modified":1558683122623},{"_id":"themes/maupassant/source/js/gitment.browser.js","hash":"376446d9c5930576016f97dd63e5e6616c94d8d4","modified":1558683122655},{"_id":"themes/maupassant/.git/logs/refs/heads/master","hash":"3cffc0733c16ea9c0d5699759800211b2de7dfdc","modified":1558683122636},{"_id":"themes/maupassant/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1558683122634},{"_id":"themes/maupassant/.git/logs/refs/remotes/origin/HEAD","hash":"3cffc0733c16ea9c0d5699759800211b2de7dfdc","modified":1558683122634},{"_id":"themes/maupassant/.git/objects/pack/pack-f799ed1b2f961451d291bec64cd0d8578ab30651.pack","hash":"d2768c214009eade300ea6d49142905f3f7f87d1","modified":1558683122621}],"Category":[],"Data":[],"Page":[{"_content":"#### 一个来自魔都的小小码农 主要从事python 后端 ，目前的方向是python 数据处理，数据分析（哈哈 有点吹牛，就是小小码农）\n* **联系我**   \n    > 邮箱：youngs@yeah.net\n\n* 爱好\n    > 徒步 游戏 （吃鸡 LOL 欢迎）\n    \n    > python 相关问题欢迎探讨","source":"about/index.md","raw":"#### 一个来自魔都的小小码农 主要从事python 后端 ，目前的方向是python 数据处理，数据分析（哈哈 有点吹牛，就是小小码农）\n* **联系我**   \n    > 邮箱：youngs@yeah.net\n\n* 爱好\n    > 徒步 游戏 （吃鸡 LOL 欢迎）\n    \n    > python 相关问题欢迎探讨","date":"2019-05-24T06:50:38.828Z","updated":"2019-05-24T06:50:38.828Z","path":"about/index.html","title":"","comments":1,"layout":"page","_id":"cjw1v7ua1000115xs2me91mbb","content":"<h4 id=\"一个来自魔都的小小码农-主要从事python-后端-，目前的方向是python-数据处理，数据分析（哈哈-有点吹牛，就是小小码农）\"><a href=\"#一个来自魔都的小小码农-主要从事python-后端-，目前的方向是python-数据处理，数据分析（哈哈-有点吹牛，就是小小码农）\" class=\"headerlink\" title=\"一个来自魔都的小小码农 主要从事python 后端 ，目前的方向是python 数据处理，数据分析（哈哈 有点吹牛，就是小小码农）\"></a>一个来自魔都的小小码农 主要从事python 后端 ，目前的方向是python 数据处理，数据分析（哈哈 有点吹牛，就是小小码农）</h4><ul>\n<li><p><strong>联系我</strong>   </p>\n<blockquote>\n<p>邮箱：<a href=\"mailto:youngs@yeah.net\" target=\"_blank\" rel=\"noopener\">youngs@yeah.net</a></p>\n</blockquote>\n</li>\n<li><p>爱好</p>\n<blockquote>\n<p>徒步 游戏 （吃鸡 LOL 欢迎）</p>\n</blockquote>\n<blockquote>\n<p>python 相关问题欢迎探讨</p>\n</blockquote>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"一个来自魔都的小小码农-主要从事python-后端-，目前的方向是python-数据处理，数据分析（哈哈-有点吹牛，就是小小码农）\"><a href=\"#一个来自魔都的小小码农-主要从事python-后端-，目前的方向是python-数据处理，数据分析（哈哈-有点吹牛，就是小小码农）\" class=\"headerlink\" title=\"一个来自魔都的小小码农 主要从事python 后端 ，目前的方向是python 数据处理，数据分析（哈哈 有点吹牛，就是小小码农）\"></a>一个来自魔都的小小码农 主要从事python 后端 ，目前的方向是python 数据处理，数据分析（哈哈 有点吹牛，就是小小码农）</h4><ul>\n<li><p><strong>联系我</strong>   </p>\n<blockquote>\n<p>邮箱：<a href=\"mailto:youngs@yeah.net\" target=\"_blank\" rel=\"noopener\">youngs@yeah.net</a></p>\n</blockquote>\n</li>\n<li><p>爱好</p>\n<blockquote>\n<p>徒步 游戏 （吃鸡 LOL 欢迎）</p>\n</blockquote>\n<blockquote>\n<p>python 相关问题欢迎探讨</p>\n</blockquote>\n</li>\n</ul>\n"}],"Post":[{"title":"kafka 安装及配置","date":"2018-05-30T02:52:58.000Z","_content":"\n## 基本介绍\n\nkafka是一个分布式消息队列。具有高性能、持久化、多副本备份、横向扩展能力。生产者往队列里写消息，\n消费者从队列里取消息进行业务逻辑。一般在架构设计中起到解耦、削峰、异步处理的作用。\n\n## 环境介绍\n\n* 系统： Ubuntu 18.04\n\n## 安装配置 ZooKeeper\n\n1. 下载 配置\n\n    ```bash\n    # 打开 zoo.cfg 可以配置端口，目录等\n    wget http://mirrors.cnnic.cn/apache/zookeeper/zookeeper-3.4.6/zookeeper-3.4.6.tar.gz\n    tar zxvf zookeeper-3.4.6.tar.gz\n    cd zookeeper-3.4.6\n    cp -rf conf/zoo_sample.cfg conf/zoo.cfg\n    vim conf/zoo.cfg\n\n    # 启动\n    bin/zkServer.start\n    ```\n\n## 安装配置 Kafka\n\n1. 下载 配置 (需要修改 `server.properties zookeeper.connect=localhost:2181`)\n\n    ``` bash\n    # 打开 zoo.cfg 可以配置端口，目录等\n    wget http://apache.fayea.com/kafka/0.8.2.1/kafka_2.10-0.8.2.1.tgz\n    tar -zxf kafka_2.10-0.8.2.1.tgz\n    cd kafka_2.10-0.8.2.1\n    vi config/server.properties\n    ```\n\n2. 启动\n\n    ``` bash\n    bin/kafka-server-start.config/server.properties\n    ```\n\n3. 命令简介\n\n    ```bash\n    # 创建Topic\n    bin/kafka-topics --create --topic kafkatopic --replication-factor 1 --partitions 1 --zookeeper localhost:2181\n\n    # 查看Topic\n    bin/kafka-topics --list --zookeeper localhost:2181\n\n    # 启动Producer 生产消息\n    bin/kafka-console-producer --broker-list localhost:9092 --topic kafkatopic\n\n    # 启动Consumer 消费消息\n    bin/kafka-console-consumer --zookeeper localhost:2181 --topic kafkatopic --from-beginning\n\n    # 删除Topic\n    bin/kafka-run-class kafka.admin.TopicCommand --delete --topic kafkatopic --zookeeper localhost:2181\n\n    # 查看Topic 的offset \n    bin/kafka-consumer-offset-checker    --zookeeper localhost:2181 --topic kafkatopic --group consumer\n\n    ```\n\n## Kadka 监控配置\n\n### KafkaOffsetMonitor 安装配置\n\n1. 下载     https://github.com/quantifind/KafkaOffsetMonitor/releases/tag/v0.2.0\n\n2. 启动\n\n    ```bash\n    java -cp KafkaOffsetMonitor-assembly-0.2.0.jar \\\n            com.quantifind.kafka.offsetapp.OffsetGetterWeb \\\n            --zk loaclhost:2181 \\\n            --port 8089 \\\n            --refre10.seconds \\\n            --retain 2.days\n\n    # 可以用 nohup & 启动\n    ```\n\n### Kafka-manager\n\n1. 下载     https://github.com/yahoo/kafka-manager\n\n2. 安装配置\n\n    ```bash\n\n    # 默认配置java 环境\n\n    git clone https://github.com/yahoo/kafka-manager/releases\n\n    cd kafka-manager\n\n    ./sbt clean dist\n\n    # 命令执行完成后，在 target/universal 目录中会生产一个zip压缩包kafka-manager-1.3.3.7.zip\n\n    cd target/universal \n\n    unzip kafka-manager-1.3.3.7.zip\n\n\n    # 配置 kafka-manager.zkhosts=\"localhost:2181\"\n    vi conf/application.conf\n    ```\n\n3. 这里如果想看见更多信息需要额外配置\n\n    ```bash\n\n    # 修改 KAFKA_JMX_OPTS\n    vi kafka-run-class.sh\n\n        KAFKA_JMX_OPTS=\"-Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false    -Dcom.sun.management.jmxremote.ssl=false\"\n        JMX_PORT=9999\n\n    # 添加 JMX_PORT\n    vi kafka-server-start.sh\n\n    export JMX_PORT=${JMX_PORT:-9999\n\n    ```\n\n4. 启动\n\n    ```bash\n    bin/kafka-manager\n    # 可以用 nohup & 启动\n    ```\n","source":"_posts/kafka.md","raw":"---\ntitle: kafka 安装及配置\ndate: 2018-05-30 10:52:58\ntags: 消息队列 greenplum \n---\n\n## 基本介绍\n\nkafka是一个分布式消息队列。具有高性能、持久化、多副本备份、横向扩展能力。生产者往队列里写消息，\n消费者从队列里取消息进行业务逻辑。一般在架构设计中起到解耦、削峰、异步处理的作用。\n\n## 环境介绍\n\n* 系统： Ubuntu 18.04\n\n## 安装配置 ZooKeeper\n\n1. 下载 配置\n\n    ```bash\n    # 打开 zoo.cfg 可以配置端口，目录等\n    wget http://mirrors.cnnic.cn/apache/zookeeper/zookeeper-3.4.6/zookeeper-3.4.6.tar.gz\n    tar zxvf zookeeper-3.4.6.tar.gz\n    cd zookeeper-3.4.6\n    cp -rf conf/zoo_sample.cfg conf/zoo.cfg\n    vim conf/zoo.cfg\n\n    # 启动\n    bin/zkServer.start\n    ```\n\n## 安装配置 Kafka\n\n1. 下载 配置 (需要修改 `server.properties zookeeper.connect=localhost:2181`)\n\n    ``` bash\n    # 打开 zoo.cfg 可以配置端口，目录等\n    wget http://apache.fayea.com/kafka/0.8.2.1/kafka_2.10-0.8.2.1.tgz\n    tar -zxf kafka_2.10-0.8.2.1.tgz\n    cd kafka_2.10-0.8.2.1\n    vi config/server.properties\n    ```\n\n2. 启动\n\n    ``` bash\n    bin/kafka-server-start.config/server.properties\n    ```\n\n3. 命令简介\n\n    ```bash\n    # 创建Topic\n    bin/kafka-topics --create --topic kafkatopic --replication-factor 1 --partitions 1 --zookeeper localhost:2181\n\n    # 查看Topic\n    bin/kafka-topics --list --zookeeper localhost:2181\n\n    # 启动Producer 生产消息\n    bin/kafka-console-producer --broker-list localhost:9092 --topic kafkatopic\n\n    # 启动Consumer 消费消息\n    bin/kafka-console-consumer --zookeeper localhost:2181 --topic kafkatopic --from-beginning\n\n    # 删除Topic\n    bin/kafka-run-class kafka.admin.TopicCommand --delete --topic kafkatopic --zookeeper localhost:2181\n\n    # 查看Topic 的offset \n    bin/kafka-consumer-offset-checker    --zookeeper localhost:2181 --topic kafkatopic --group consumer\n\n    ```\n\n## Kadka 监控配置\n\n### KafkaOffsetMonitor 安装配置\n\n1. 下载     https://github.com/quantifind/KafkaOffsetMonitor/releases/tag/v0.2.0\n\n2. 启动\n\n    ```bash\n    java -cp KafkaOffsetMonitor-assembly-0.2.0.jar \\\n            com.quantifind.kafka.offsetapp.OffsetGetterWeb \\\n            --zk loaclhost:2181 \\\n            --port 8089 \\\n            --refre10.seconds \\\n            --retain 2.days\n\n    # 可以用 nohup & 启动\n    ```\n\n### Kafka-manager\n\n1. 下载     https://github.com/yahoo/kafka-manager\n\n2. 安装配置\n\n    ```bash\n\n    # 默认配置java 环境\n\n    git clone https://github.com/yahoo/kafka-manager/releases\n\n    cd kafka-manager\n\n    ./sbt clean dist\n\n    # 命令执行完成后，在 target/universal 目录中会生产一个zip压缩包kafka-manager-1.3.3.7.zip\n\n    cd target/universal \n\n    unzip kafka-manager-1.3.3.7.zip\n\n\n    # 配置 kafka-manager.zkhosts=\"localhost:2181\"\n    vi conf/application.conf\n    ```\n\n3. 这里如果想看见更多信息需要额外配置\n\n    ```bash\n\n    # 修改 KAFKA_JMX_OPTS\n    vi kafka-run-class.sh\n\n        KAFKA_JMX_OPTS=\"-Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false    -Dcom.sun.management.jmxremote.ssl=false\"\n        JMX_PORT=9999\n\n    # 添加 JMX_PORT\n    vi kafka-server-start.sh\n\n    export JMX_PORT=${JMX_PORT:-9999\n\n    ```\n\n4. 启动\n\n    ```bash\n    bin/kafka-manager\n    # 可以用 nohup & 启动\n    ```\n","slug":"kafka","published":1,"updated":"2019-05-24T08:23:49.143Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjw1v7u9x000015xsu4wo2g5h","content":"<h2 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h2><p>kafka是一个分布式消息队列。具有高性能、持久化、多副本备份、横向扩展能力。生产者往队列里写消息，<br>消费者从队列里取消息进行业务逻辑。一般在架构设计中起到解耦、削峰、异步处理的作用。</p>\n<h2 id=\"环境介绍\"><a href=\"#环境介绍\" class=\"headerlink\" title=\"环境介绍\"></a>环境介绍</h2><ul>\n<li>系统： Ubuntu 18.04</li>\n</ul>\n<h2 id=\"安装配置-ZooKeeper\"><a href=\"#安装配置-ZooKeeper\" class=\"headerlink\" title=\"安装配置 ZooKeeper\"></a>安装配置 ZooKeeper</h2><ol>\n<li><p>下载 配置</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 打开 zoo.cfg 可以配置端口，目录等</span></span><br><span class=\"line\">wget http://mirrors.cnnic.cn/apache/zookeeper/zookeeper-3.4.6/zookeeper-3.4.6.tar.gz</span><br><span class=\"line\">tar zxvf zookeeper-3.4.6.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> zookeeper-3.4.6</span><br><span class=\"line\">cp -rf conf/zoo_sample.cfg conf/zoo.cfg</span><br><span class=\"line\">vim conf/zoo.cfg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">bin/zkServer.start</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"安装配置-Kafka\"><a href=\"#安装配置-Kafka\" class=\"headerlink\" title=\"安装配置 Kafka\"></a>安装配置 Kafka</h2><ol>\n<li><p>下载 配置 (需要修改 <code>server.properties zookeeper.connect=localhost:2181</code>)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 打开 zoo.cfg 可以配置端口，目录等</span></span><br><span class=\"line\">wget http://apache.fayea.com/kafka/0.8.2.1/kafka_2.10-0.8.2.1.tgz</span><br><span class=\"line\">tar -zxf kafka_2.10-0.8.2.1.tgz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> kafka_2.10-0.8.2.1</span><br><span class=\"line\">vi config/server.properties</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin/kafka-server-start.config/server.properties</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>命令简介</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建Topic</span></span><br><span class=\"line\">bin/kafka-topics --create --topic kafkatopic --replication-factor 1 --partitions 1 --zookeeper localhost:2181</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看Topic</span></span><br><span class=\"line\">bin/kafka-topics --list --zookeeper localhost:2181</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动Producer 生产消息</span></span><br><span class=\"line\">bin/kafka-console-producer --broker-list localhost:9092 --topic kafkatopic</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动Consumer 消费消息</span></span><br><span class=\"line\">bin/kafka-console-consumer --zookeeper localhost:2181 --topic kafkatopic --from-beginning</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除Topic</span></span><br><span class=\"line\">bin/kafka-run-class kafka.admin.TopicCommand --delete --topic kafkatopic --zookeeper localhost:2181</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看Topic 的offset </span></span><br><span class=\"line\">bin/kafka-consumer-offset-checker    --zookeeper localhost:2181 --topic kafkatopic --group consumer</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"Kadka-监控配置\"><a href=\"#Kadka-监控配置\" class=\"headerlink\" title=\"Kadka 监控配置\"></a>Kadka 监控配置</h2><h3 id=\"KafkaOffsetMonitor-安装配置\"><a href=\"#KafkaOffsetMonitor-安装配置\" class=\"headerlink\" title=\"KafkaOffsetMonitor 安装配置\"></a>KafkaOffsetMonitor 安装配置</h3><ol>\n<li><p>下载     <a href=\"https://github.com/quantifind/KafkaOffsetMonitor/releases/tag/v0.2.0\" target=\"_blank\" rel=\"noopener\">https://github.com/quantifind/KafkaOffsetMonitor/releases/tag/v0.2.0</a></p>\n</li>\n<li><p>启动</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -cp KafkaOffsetMonitor-assembly-0.2.0.jar \\</span><br><span class=\"line\">        com.quantifind.kafka.offsetapp.OffsetGetterWeb \\</span><br><span class=\"line\">        --zk loaclhost:2181 \\</span><br><span class=\"line\">        --port 8089 \\</span><br><span class=\"line\">        --refre10.seconds \\</span><br><span class=\"line\">        --retain 2.days</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可以用 nohup &amp; 启动</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h3 id=\"Kafka-manager\"><a href=\"#Kafka-manager\" class=\"headerlink\" title=\"Kafka-manager\"></a>Kafka-manager</h3><ol>\n<li><p>下载     <a href=\"https://github.com/yahoo/kafka-manager\" target=\"_blank\" rel=\"noopener\">https://github.com/yahoo/kafka-manager</a></p>\n</li>\n<li><p>安装配置</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 默认配置java 环境</span></span><br><span class=\"line\"></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/yahoo/kafka-manager/releases</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> kafka-manager</span><br><span class=\"line\"></span><br><span class=\"line\">./sbt clean dist</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 命令执行完成后，在 target/universal 目录中会生产一个zip压缩包kafka-manager-1.3.3.7.zip</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> target/universal </span><br><span class=\"line\"></span><br><span class=\"line\">unzip kafka-manager-1.3.3.7.zip</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置 kafka-manager.zkhosts=\"localhost:2181\"</span></span><br><span class=\"line\">vi conf/application.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>这里如果想看见更多信息需要额外配置</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改 KAFKA_JMX_OPTS</span></span><br><span class=\"line\">vi kafka-run-class.sh</span><br><span class=\"line\"></span><br><span class=\"line\">    KAFKA_JMX_OPTS=<span class=\"string\">\"-Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false    -Dcom.sun.management.jmxremote.ssl=false\"</span></span><br><span class=\"line\">    JMX_PORT=9999</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加 JMX_PORT</span></span><br><span class=\"line\">vi kafka-server-start.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> JMX_PORT=$&#123;JMX_PORT:-9999</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin/kafka-manager</span><br><span class=\"line\"><span class=\"comment\"># 可以用 nohup &amp; 启动</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h2><p>kafka是一个分布式消息队列。具有高性能、持久化、多副本备份、横向扩展能力。生产者往队列里写消息，<br>消费者从队列里取消息进行业务逻辑。一般在架构设计中起到解耦、削峰、异步处理的作用。</p>\n<h2 id=\"环境介绍\"><a href=\"#环境介绍\" class=\"headerlink\" title=\"环境介绍\"></a>环境介绍</h2><ul>\n<li>系统： Ubuntu 18.04</li>\n</ul>\n<h2 id=\"安装配置-ZooKeeper\"><a href=\"#安装配置-ZooKeeper\" class=\"headerlink\" title=\"安装配置 ZooKeeper\"></a>安装配置 ZooKeeper</h2><ol>\n<li><p>下载 配置</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 打开 zoo.cfg 可以配置端口，目录等</span></span><br><span class=\"line\">wget http://mirrors.cnnic.cn/apache/zookeeper/zookeeper-3.4.6/zookeeper-3.4.6.tar.gz</span><br><span class=\"line\">tar zxvf zookeeper-3.4.6.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> zookeeper-3.4.6</span><br><span class=\"line\">cp -rf conf/zoo_sample.cfg conf/zoo.cfg</span><br><span class=\"line\">vim conf/zoo.cfg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">bin/zkServer.start</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"安装配置-Kafka\"><a href=\"#安装配置-Kafka\" class=\"headerlink\" title=\"安装配置 Kafka\"></a>安装配置 Kafka</h2><ol>\n<li><p>下载 配置 (需要修改 <code>server.properties zookeeper.connect=localhost:2181</code>)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 打开 zoo.cfg 可以配置端口，目录等</span></span><br><span class=\"line\">wget http://apache.fayea.com/kafka/0.8.2.1/kafka_2.10-0.8.2.1.tgz</span><br><span class=\"line\">tar -zxf kafka_2.10-0.8.2.1.tgz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> kafka_2.10-0.8.2.1</span><br><span class=\"line\">vi config/server.properties</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin/kafka-server-start.config/server.properties</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>命令简介</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建Topic</span></span><br><span class=\"line\">bin/kafka-topics --create --topic kafkatopic --replication-factor 1 --partitions 1 --zookeeper localhost:2181</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看Topic</span></span><br><span class=\"line\">bin/kafka-topics --list --zookeeper localhost:2181</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动Producer 生产消息</span></span><br><span class=\"line\">bin/kafka-console-producer --broker-list localhost:9092 --topic kafkatopic</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动Consumer 消费消息</span></span><br><span class=\"line\">bin/kafka-console-consumer --zookeeper localhost:2181 --topic kafkatopic --from-beginning</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除Topic</span></span><br><span class=\"line\">bin/kafka-run-class kafka.admin.TopicCommand --delete --topic kafkatopic --zookeeper localhost:2181</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看Topic 的offset </span></span><br><span class=\"line\">bin/kafka-consumer-offset-checker    --zookeeper localhost:2181 --topic kafkatopic --group consumer</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"Kadka-监控配置\"><a href=\"#Kadka-监控配置\" class=\"headerlink\" title=\"Kadka 监控配置\"></a>Kadka 监控配置</h2><h3 id=\"KafkaOffsetMonitor-安装配置\"><a href=\"#KafkaOffsetMonitor-安装配置\" class=\"headerlink\" title=\"KafkaOffsetMonitor 安装配置\"></a>KafkaOffsetMonitor 安装配置</h3><ol>\n<li><p>下载     <a href=\"https://github.com/quantifind/KafkaOffsetMonitor/releases/tag/v0.2.0\" target=\"_blank\" rel=\"noopener\">https://github.com/quantifind/KafkaOffsetMonitor/releases/tag/v0.2.0</a></p>\n</li>\n<li><p>启动</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -cp KafkaOffsetMonitor-assembly-0.2.0.jar \\</span><br><span class=\"line\">        com.quantifind.kafka.offsetapp.OffsetGetterWeb \\</span><br><span class=\"line\">        --zk loaclhost:2181 \\</span><br><span class=\"line\">        --port 8089 \\</span><br><span class=\"line\">        --refre10.seconds \\</span><br><span class=\"line\">        --retain 2.days</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可以用 nohup &amp; 启动</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h3 id=\"Kafka-manager\"><a href=\"#Kafka-manager\" class=\"headerlink\" title=\"Kafka-manager\"></a>Kafka-manager</h3><ol>\n<li><p>下载     <a href=\"https://github.com/yahoo/kafka-manager\" target=\"_blank\" rel=\"noopener\">https://github.com/yahoo/kafka-manager</a></p>\n</li>\n<li><p>安装配置</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 默认配置java 环境</span></span><br><span class=\"line\"></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/yahoo/kafka-manager/releases</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> kafka-manager</span><br><span class=\"line\"></span><br><span class=\"line\">./sbt clean dist</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 命令执行完成后，在 target/universal 目录中会生产一个zip压缩包kafka-manager-1.3.3.7.zip</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> target/universal </span><br><span class=\"line\"></span><br><span class=\"line\">unzip kafka-manager-1.3.3.7.zip</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置 kafka-manager.zkhosts=\"localhost:2181\"</span></span><br><span class=\"line\">vi conf/application.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>这里如果想看见更多信息需要额外配置</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改 KAFKA_JMX_OPTS</span></span><br><span class=\"line\">vi kafka-run-class.sh</span><br><span class=\"line\"></span><br><span class=\"line\">    KAFKA_JMX_OPTS=<span class=\"string\">\"-Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false    -Dcom.sun.management.jmxremote.ssl=false\"</span></span><br><span class=\"line\">    JMX_PORT=9999</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加 JMX_PORT</span></span><br><span class=\"line\">vi kafka-server-start.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> JMX_PORT=$&#123;JMX_PORT:-9999</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin/kafka-manager</span><br><span class=\"line\"><span class=\"comment\"># 可以用 nohup &amp; 启动</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n"},{"title":"Linux 使用记录","date":"2018-05-08T02:07:55.000Z","_content":"\n## 日常问题、小技巧收集\n\n主要记录日常遇到的问题及解决方法\n包括但不限于 python/linux/docker/database\n\n## linux命令终端显示-bash-4.2#解决方法\n\n* 近期在折腾docker centos 使用别人的镜像 发现终端显示 `bash-4.2#` 很是忧伤（之前遇到，好记性不如烂笔头）\n\n    ``` bash\n    # 这里的root 可以替换成你的用户\n    cp /etc/skel/.bashrc /root/  \n    cp /etc/skel/.bash_profile  /root/  \n\n    ```\n\n* 然后 exit 重新登录就好了\n\n## linux 文件编辑\n\n* 在线上操作文件 一般都是 vi 但是 vi 适用于各种花式操作 这里介绍实用的简单的操作\n\n    ```bash\n\n    # echo > file 覆盖文件\n    echo \"\" > file  # 这个操作可以快速清空某一文件\n    echo \"Hello World\" > file\n    # echo >> file 追加文件\n    echo \"Hello World\" >> file\n\n\n    # cat 配合 EOF > 覆盖  >> 追加\n    cat << EOF > file\n    > Hello\n    > Hello world\n    ```\n\n    EOF是END Of File的缩写,表示自定义终止符.既然自定义,那么EOF就不是固定的,可以随意设置别名,在linux按ctrl-d就代表EOF, \n    **EOF一般会配合cat能够多行文本输出.**\n\n## pyhon matplotlib 安装\n\n* 问题： 安装matplotlib python-tk 网上解决方法需要重新编译 python matplotlib error python Tkinter module not found on Ubuntu\n* 解决方案\n\n``` bash\nsudo apt-get install python3.6-tk\n```\n\n> [stackoverflow  链接](https://stackoverflow.com/questions/6084416/tkinter-module-not-found-on-ubuntu)\n\n## docker 镜像加速\n\n``` bash\nsudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json <<-'EOF'\n{\n  \"registry-mirrors\": [\"https://etsgrm2s.mirror.aliyuncs.com\"]\n}\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n```\n\n## ubuntu-18.04 安装 mysql-5.7 root 密码\n\n``` bash\nsudo apt install mysql-server mysql-client\n\n# 查询 默认 用户名 密码\nsudo vi /etc/mysql/debian.cnf\n\n# 登录 mysql 修改 root 密码\nupdate mysql.user set authentication_string=password('password') where user='root';\n\n# 修改远程连接\nupdate user set host = '%' where user = 'root';\n\n# 修改验证方式\nUPDATE user SET plugin='mysql_native_password' WHERE User='root';\n\n\n## option 2\n\nmysql> CREATE USER 'YOUR_SYSTEM_USER'@'localhost' IDENTIFIED BY '';\nmysql> GRANT ALL PRIVILEGES ON *.* TO 'YOUR_SYSTEM_USER'@'localhost';\nmysql> UPDATE user SET plugin='auth_socket' WHERE User='YOUR_SYSTEM_USER';\nmysql> FLUSH PRIVILEGES;\n```","source":"_posts/linux-record.md","raw":"---\ntitle: Linux 使用记录\ndate: 2018-05-08 10:07:55\ntags: echo EOF\n---\n\n## 日常问题、小技巧收集\n\n主要记录日常遇到的问题及解决方法\n包括但不限于 python/linux/docker/database\n\n## linux命令终端显示-bash-4.2#解决方法\n\n* 近期在折腾docker centos 使用别人的镜像 发现终端显示 `bash-4.2#` 很是忧伤（之前遇到，好记性不如烂笔头）\n\n    ``` bash\n    # 这里的root 可以替换成你的用户\n    cp /etc/skel/.bashrc /root/  \n    cp /etc/skel/.bash_profile  /root/  \n\n    ```\n\n* 然后 exit 重新登录就好了\n\n## linux 文件编辑\n\n* 在线上操作文件 一般都是 vi 但是 vi 适用于各种花式操作 这里介绍实用的简单的操作\n\n    ```bash\n\n    # echo > file 覆盖文件\n    echo \"\" > file  # 这个操作可以快速清空某一文件\n    echo \"Hello World\" > file\n    # echo >> file 追加文件\n    echo \"Hello World\" >> file\n\n\n    # cat 配合 EOF > 覆盖  >> 追加\n    cat << EOF > file\n    > Hello\n    > Hello world\n    ```\n\n    EOF是END Of File的缩写,表示自定义终止符.既然自定义,那么EOF就不是固定的,可以随意设置别名,在linux按ctrl-d就代表EOF, \n    **EOF一般会配合cat能够多行文本输出.**\n\n## pyhon matplotlib 安装\n\n* 问题： 安装matplotlib python-tk 网上解决方法需要重新编译 python matplotlib error python Tkinter module not found on Ubuntu\n* 解决方案\n\n``` bash\nsudo apt-get install python3.6-tk\n```\n\n> [stackoverflow  链接](https://stackoverflow.com/questions/6084416/tkinter-module-not-found-on-ubuntu)\n\n## docker 镜像加速\n\n``` bash\nsudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json <<-'EOF'\n{\n  \"registry-mirrors\": [\"https://etsgrm2s.mirror.aliyuncs.com\"]\n}\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n```\n\n## ubuntu-18.04 安装 mysql-5.7 root 密码\n\n``` bash\nsudo apt install mysql-server mysql-client\n\n# 查询 默认 用户名 密码\nsudo vi /etc/mysql/debian.cnf\n\n# 登录 mysql 修改 root 密码\nupdate mysql.user set authentication_string=password('password') where user='root';\n\n# 修改远程连接\nupdate user set host = '%' where user = 'root';\n\n# 修改验证方式\nUPDATE user SET plugin='mysql_native_password' WHERE User='root';\n\n\n## option 2\n\nmysql> CREATE USER 'YOUR_SYSTEM_USER'@'localhost' IDENTIFIED BY '';\nmysql> GRANT ALL PRIVILEGES ON *.* TO 'YOUR_SYSTEM_USER'@'localhost';\nmysql> UPDATE user SET plugin='auth_socket' WHERE User='YOUR_SYSTEM_USER';\nmysql> FLUSH PRIVILEGES;\n```","slug":"linux-record","published":1,"updated":"2019-05-24T09:06:36.055Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjw1v7ua2000215xs4h4bzq8l","content":"<h2 id=\"日常问题、小技巧收集\"><a href=\"#日常问题、小技巧收集\" class=\"headerlink\" title=\"日常问题、小技巧收集\"></a>日常问题、小技巧收集</h2><p>主要记录日常遇到的问题及解决方法<br>包括但不限于 python/linux/docker/database</p>\n<h2 id=\"linux命令终端显示-bash-4-2-解决方法\"><a href=\"#linux命令终端显示-bash-4-2-解决方法\" class=\"headerlink\" title=\"linux命令终端显示-bash-4.2#解决方法\"></a>linux命令终端显示-bash-4.2#解决方法</h2><ul>\n<li><p>近期在折腾docker centos 使用别人的镜像 发现终端显示 <code>bash-4.2#</code> 很是忧伤（之前遇到，好记性不如烂笔头）</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这里的root 可以替换成你的用户</span></span><br><span class=\"line\">cp /etc/skel/.bashrc /root/  </span><br><span class=\"line\">cp /etc/skel/.bash_profile  /root/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>然后 exit 重新登录就好了</p>\n</li>\n</ul>\n<h2 id=\"linux-文件编辑\"><a href=\"#linux-文件编辑\" class=\"headerlink\" title=\"linux 文件编辑\"></a>linux 文件编辑</h2><ul>\n<li><p>在线上操作文件 一般都是 vi 但是 vi 适用于各种花式操作 这里介绍实用的简单的操作</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># echo &gt; file 覆盖文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"\"</span> &gt; file  <span class=\"comment\"># 这个操作可以快速清空某一文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Hello World\"</span> &gt; file</span><br><span class=\"line\"><span class=\"comment\"># echo &gt;&gt; file 追加文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Hello World\"</span> &gt;&gt; file</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># cat 配合 EOF &gt; 覆盖  &gt;&gt; 追加</span></span><br><span class=\"line\">cat &lt;&lt; EOF &gt; file</span><br><span class=\"line\">&gt; Hello</span><br><span class=\"line\">&gt; Hello world</span><br></pre></td></tr></table></figure>\n\n<p>  EOF是END Of File的缩写,表示自定义终止符.既然自定义,那么EOF就不是固定的,可以随意设置别名,在linux按ctrl-d就代表EOF,<br>  <strong>EOF一般会配合cat能够多行文本输出.</strong></p>\n</li>\n</ul>\n<h2 id=\"pyhon-matplotlib-安装\"><a href=\"#pyhon-matplotlib-安装\" class=\"headerlink\" title=\"pyhon matplotlib 安装\"></a>pyhon matplotlib 安装</h2><ul>\n<li>问题： 安装matplotlib python-tk 网上解决方法需要重新编译 python matplotlib error python Tkinter module not found on Ubuntu</li>\n<li>解决方案</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python3.6-tk</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><a href=\"https://stackoverflow.com/questions/6084416/tkinter-module-not-found-on-ubuntu\" target=\"_blank\" rel=\"noopener\">stackoverflow  链接</a></p>\n</blockquote>\n<h2 id=\"docker-镜像加速\"><a href=\"#docker-镜像加速\" class=\"headerlink\" title=\"docker 镜像加速\"></a>docker 镜像加速</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /etc/docker</span><br><span class=\"line\">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class=\"string\">'EOF'</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"registry-mirrors\"</span>: [<span class=\"string\">\"https://etsgrm2s.mirror.aliyuncs.com\"</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ubuntu-18-04-安装-mysql-5-7-root-密码\"><a href=\"#ubuntu-18-04-安装-mysql-5-7-root-密码\" class=\"headerlink\" title=\"ubuntu-18.04 安装 mysql-5.7 root 密码\"></a>ubuntu-18.04 安装 mysql-5.7 root 密码</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install mysql-server mysql-client</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询 默认 用户名 密码</span></span><br><span class=\"line\">sudo vi /etc/mysql/debian.cnf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 登录 mysql 修改 root 密码</span></span><br><span class=\"line\">update mysql.user <span class=\"built_in\">set</span> authentication_string=password(<span class=\"string\">'password'</span>) <span class=\"built_in\">where</span> user=<span class=\"string\">'root'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改远程连接</span></span><br><span class=\"line\">update user <span class=\"built_in\">set</span> host = <span class=\"string\">'%'</span> <span class=\"built_in\">where</span> user = <span class=\"string\">'root'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改验证方式</span></span><br><span class=\"line\">UPDATE user SET plugin=<span class=\"string\">'mysql_native_password'</span> WHERE User=<span class=\"string\">'root'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## option 2</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; CREATE USER <span class=\"string\">'YOUR_SYSTEM_USER'</span>@<span class=\"string\">'localhost'</span> IDENTIFIED BY <span class=\"string\">''</span>;</span><br><span class=\"line\">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO <span class=\"string\">'YOUR_SYSTEM_USER'</span>@<span class=\"string\">'localhost'</span>;</span><br><span class=\"line\">mysql&gt; UPDATE user SET plugin=<span class=\"string\">'auth_socket'</span> WHERE User=<span class=\"string\">'YOUR_SYSTEM_USER'</span>;</span><br><span class=\"line\">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"日常问题、小技巧收集\"><a href=\"#日常问题、小技巧收集\" class=\"headerlink\" title=\"日常问题、小技巧收集\"></a>日常问题、小技巧收集</h2><p>主要记录日常遇到的问题及解决方法<br>包括但不限于 python/linux/docker/database</p>\n<h2 id=\"linux命令终端显示-bash-4-2-解决方法\"><a href=\"#linux命令终端显示-bash-4-2-解决方法\" class=\"headerlink\" title=\"linux命令终端显示-bash-4.2#解决方法\"></a>linux命令终端显示-bash-4.2#解决方法</h2><ul>\n<li><p>近期在折腾docker centos 使用别人的镜像 发现终端显示 <code>bash-4.2#</code> 很是忧伤（之前遇到，好记性不如烂笔头）</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这里的root 可以替换成你的用户</span></span><br><span class=\"line\">cp /etc/skel/.bashrc /root/  </span><br><span class=\"line\">cp /etc/skel/.bash_profile  /root/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>然后 exit 重新登录就好了</p>\n</li>\n</ul>\n<h2 id=\"linux-文件编辑\"><a href=\"#linux-文件编辑\" class=\"headerlink\" title=\"linux 文件编辑\"></a>linux 文件编辑</h2><ul>\n<li><p>在线上操作文件 一般都是 vi 但是 vi 适用于各种花式操作 这里介绍实用的简单的操作</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># echo &gt; file 覆盖文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"\"</span> &gt; file  <span class=\"comment\"># 这个操作可以快速清空某一文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Hello World\"</span> &gt; file</span><br><span class=\"line\"><span class=\"comment\"># echo &gt;&gt; file 追加文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Hello World\"</span> &gt;&gt; file</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># cat 配合 EOF &gt; 覆盖  &gt;&gt; 追加</span></span><br><span class=\"line\">cat &lt;&lt; EOF &gt; file</span><br><span class=\"line\">&gt; Hello</span><br><span class=\"line\">&gt; Hello world</span><br></pre></td></tr></table></figure>\n\n<p>  EOF是END Of File的缩写,表示自定义终止符.既然自定义,那么EOF就不是固定的,可以随意设置别名,在linux按ctrl-d就代表EOF,<br>  <strong>EOF一般会配合cat能够多行文本输出.</strong></p>\n</li>\n</ul>\n<h2 id=\"pyhon-matplotlib-安装\"><a href=\"#pyhon-matplotlib-安装\" class=\"headerlink\" title=\"pyhon matplotlib 安装\"></a>pyhon matplotlib 安装</h2><ul>\n<li>问题： 安装matplotlib python-tk 网上解决方法需要重新编译 python matplotlib error python Tkinter module not found on Ubuntu</li>\n<li>解决方案</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python3.6-tk</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><a href=\"https://stackoverflow.com/questions/6084416/tkinter-module-not-found-on-ubuntu\" target=\"_blank\" rel=\"noopener\">stackoverflow  链接</a></p>\n</blockquote>\n<h2 id=\"docker-镜像加速\"><a href=\"#docker-镜像加速\" class=\"headerlink\" title=\"docker 镜像加速\"></a>docker 镜像加速</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /etc/docker</span><br><span class=\"line\">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class=\"string\">'EOF'</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"registry-mirrors\"</span>: [<span class=\"string\">\"https://etsgrm2s.mirror.aliyuncs.com\"</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ubuntu-18-04-安装-mysql-5-7-root-密码\"><a href=\"#ubuntu-18-04-安装-mysql-5-7-root-密码\" class=\"headerlink\" title=\"ubuntu-18.04 安装 mysql-5.7 root 密码\"></a>ubuntu-18.04 安装 mysql-5.7 root 密码</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install mysql-server mysql-client</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询 默认 用户名 密码</span></span><br><span class=\"line\">sudo vi /etc/mysql/debian.cnf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 登录 mysql 修改 root 密码</span></span><br><span class=\"line\">update mysql.user <span class=\"built_in\">set</span> authentication_string=password(<span class=\"string\">'password'</span>) <span class=\"built_in\">where</span> user=<span class=\"string\">'root'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改远程连接</span></span><br><span class=\"line\">update user <span class=\"built_in\">set</span> host = <span class=\"string\">'%'</span> <span class=\"built_in\">where</span> user = <span class=\"string\">'root'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改验证方式</span></span><br><span class=\"line\">UPDATE user SET plugin=<span class=\"string\">'mysql_native_password'</span> WHERE User=<span class=\"string\">'root'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## option 2</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; CREATE USER <span class=\"string\">'YOUR_SYSTEM_USER'</span>@<span class=\"string\">'localhost'</span> IDENTIFIED BY <span class=\"string\">''</span>;</span><br><span class=\"line\">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO <span class=\"string\">'YOUR_SYSTEM_USER'</span>@<span class=\"string\">'localhost'</span>;</span><br><span class=\"line\">mysql&gt; UPDATE user SET plugin=<span class=\"string\">'auth_socket'</span> WHERE User=<span class=\"string\">'YOUR_SYSTEM_USER'</span>;</span><br><span class=\"line\">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>"},{"title":"hexo 教程","date":"2018-04-28T03:18:40.000Z","_content":"## hexo 简介\n\nHexo是高效的静态站点生成框架，它基于Node.js。通过Hexo，你可以直接使用Markdown语法来撰写博客。\n\n## hexo 安装\n\n```bash\n# 全局安装\nnpm install hexo-cli -g\n\n# 初始化\nhexo init blog\n\n# 安装项目依赖\nnpm install\n\n# 插件安装\nnpm install --save hexo-renderer-sass\n\n# 启动本地化服务即可查看项目\nhexo server\n\n# 生成\nhexo g\n\n# 启动本地服务并监听,修改了配置文件还是需要从新生成一遍才可以看到效果\nhexo s --watch\n\n# 如果报一些奇怪的错误不知道怎么解决不妨清除一下重新生成发布\nhexo clean\n\n\n```\n\n## hexo 部署\n\n```bash\n# 部署依赖\nnpm install hexo-deployer-git --save\n\n# 部署文件冲突解决\nrm -rf .deploy_git\nhexo g\nhexo d\n```\n\n## ubuntu 安装\n\n### 环境介紹\n\n主机： ubuntu 18.04\n\n### 安裝依賴\n\n``` bash\nsudo apt-get install nodejs\nsudo apt install npm\nsudo apt install git\nnpm install -g hexo\n```\n\n### hexo 創建\n\n``` bash\nmkdir hexo_init\ncd hexo_init\nhexo init\nhexo g\nhexo s\n```\n\n登錄 http://localhost:4000  查看效果\n\n### 下載主題\n\n``` bash\ngit clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant\nnpm install hexo-renderer-pug --save\nnpm install hexo-renderer-sass --save\n```\n\n### 修改yml文件\n\n```yml\ntheme: maupassant\n\ndeploy:\n  type: git\n  repository: https://github.com/Leo-youngs/Leo-youngs.github.io\n  branch: master\n  message: update\n```\n\n### 生成静态文件\n\n```bash\nhexo generate\n```\n\n更多信息: [Generating](https://hexo.io/docs/generating.html)\n\n### 发布\n\n```bash\nhexo deploy\n```\n\n更多信息: [Deployment](https://hexo.io/docs/deployment.html)\n\n## 主题库\n\n[Themes](https://hexo.io/themes/index.html)","source":"_posts/hexo.md","raw":"---\ntitle: hexo 教程\ndate: 2018-04-28 11:18:40\ntags: 博客搭建\n---\n## hexo 简介\n\nHexo是高效的静态站点生成框架，它基于Node.js。通过Hexo，你可以直接使用Markdown语法来撰写博客。\n\n## hexo 安装\n\n```bash\n# 全局安装\nnpm install hexo-cli -g\n\n# 初始化\nhexo init blog\n\n# 安装项目依赖\nnpm install\n\n# 插件安装\nnpm install --save hexo-renderer-sass\n\n# 启动本地化服务即可查看项目\nhexo server\n\n# 生成\nhexo g\n\n# 启动本地服务并监听,修改了配置文件还是需要从新生成一遍才可以看到效果\nhexo s --watch\n\n# 如果报一些奇怪的错误不知道怎么解决不妨清除一下重新生成发布\nhexo clean\n\n\n```\n\n## hexo 部署\n\n```bash\n# 部署依赖\nnpm install hexo-deployer-git --save\n\n# 部署文件冲突解决\nrm -rf .deploy_git\nhexo g\nhexo d\n```\n\n## ubuntu 安装\n\n### 环境介紹\n\n主机： ubuntu 18.04\n\n### 安裝依賴\n\n``` bash\nsudo apt-get install nodejs\nsudo apt install npm\nsudo apt install git\nnpm install -g hexo\n```\n\n### hexo 創建\n\n``` bash\nmkdir hexo_init\ncd hexo_init\nhexo init\nhexo g\nhexo s\n```\n\n登錄 http://localhost:4000  查看效果\n\n### 下載主題\n\n``` bash\ngit clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant\nnpm install hexo-renderer-pug --save\nnpm install hexo-renderer-sass --save\n```\n\n### 修改yml文件\n\n```yml\ntheme: maupassant\n\ndeploy:\n  type: git\n  repository: https://github.com/Leo-youngs/Leo-youngs.github.io\n  branch: master\n  message: update\n```\n\n### 生成静态文件\n\n```bash\nhexo generate\n```\n\n更多信息: [Generating](https://hexo.io/docs/generating.html)\n\n### 发布\n\n```bash\nhexo deploy\n```\n\n更多信息: [Deployment](https://hexo.io/docs/deployment.html)\n\n## 主题库\n\n[Themes](https://hexo.io/themes/index.html)","slug":"hexo","published":1,"updated":"2019-05-24T08:58:29.741Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjw1v7ua5000415xsgaeeqtlc","content":"<h2 id=\"hexo-简介\"><a href=\"#hexo-简介\" class=\"headerlink\" title=\"hexo 简介\"></a>hexo 简介</h2><p>Hexo是高效的静态站点生成框架，它基于Node.js。通过Hexo，你可以直接使用Markdown语法来撰写博客。</p>\n<h2 id=\"hexo-安装\"><a href=\"#hexo-安装\" class=\"headerlink\" title=\"hexo 安装\"></a>hexo 安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 全局安装</span></span><br><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化</span></span><br><span class=\"line\">hexo init blog</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装项目依赖</span></span><br><span class=\"line\">npm install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 插件安装</span></span><br><span class=\"line\">npm install --save hexo-renderer-sass</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动本地化服务即可查看项目</span></span><br><span class=\"line\">hexo server</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成</span></span><br><span class=\"line\">hexo g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动本地服务并监听,修改了配置文件还是需要从新生成一遍才可以看到效果</span></span><br><span class=\"line\">hexo s --watch</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果报一些奇怪的错误不知道怎么解决不妨清除一下重新生成发布</span></span><br><span class=\"line\">hexo clean</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"hexo-部署\"><a href=\"#hexo-部署\" class=\"headerlink\" title=\"hexo 部署\"></a>hexo 部署</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 部署依赖</span></span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 部署文件冲突解决</span></span><br><span class=\"line\">rm -rf .deploy_git</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ubuntu-安装\"><a href=\"#ubuntu-安装\" class=\"headerlink\" title=\"ubuntu 安装\"></a>ubuntu 安装</h2><h3 id=\"环境介紹\"><a href=\"#环境介紹\" class=\"headerlink\" title=\"环境介紹\"></a>环境介紹</h3><p>主机： ubuntu 18.04</p>\n<h3 id=\"安裝依賴\"><a href=\"#安裝依賴\" class=\"headerlink\" title=\"安裝依賴\"></a>安裝依賴</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install nodejs</span><br><span class=\"line\">sudo apt install npm</span><br><span class=\"line\">sudo apt install git</span><br><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"hexo-創建\"><a href=\"#hexo-創建\" class=\"headerlink\" title=\"hexo 創建\"></a>hexo 創建</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir hexo_init</span><br><span class=\"line\"><span class=\"built_in\">cd</span> hexo_init</span><br><span class=\"line\">hexo init</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p>登錄 <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"noopener\">http://localhost:4000</a>  查看效果</p>\n<h3 id=\"下載主題\"><a href=\"#下載主題\" class=\"headerlink\" title=\"下載主題\"></a>下載主題</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</span><br><span class=\"line\">npm install hexo-renderer-pug --save</span><br><span class=\"line\">npm install hexo-renderer-sass --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改yml文件\"><a href=\"#修改yml文件\" class=\"headerlink\" title=\"修改yml文件\"></a>修改yml文件</h3><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">maupassant</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repository:</span> <span class=\"attr\">https://github.com/Leo-youngs/Leo-youngs.github.io</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">master</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">update</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>更多信息: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>更多信息: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<h2 id=\"主题库\"><a href=\"#主题库\" class=\"headerlink\" title=\"主题库\"></a>主题库</h2><p><a href=\"https://hexo.io/themes/index.html\" target=\"_blank\" rel=\"noopener\">Themes</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"hexo-简介\"><a href=\"#hexo-简介\" class=\"headerlink\" title=\"hexo 简介\"></a>hexo 简介</h2><p>Hexo是高效的静态站点生成框架，它基于Node.js。通过Hexo，你可以直接使用Markdown语法来撰写博客。</p>\n<h2 id=\"hexo-安装\"><a href=\"#hexo-安装\" class=\"headerlink\" title=\"hexo 安装\"></a>hexo 安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 全局安装</span></span><br><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化</span></span><br><span class=\"line\">hexo init blog</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装项目依赖</span></span><br><span class=\"line\">npm install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 插件安装</span></span><br><span class=\"line\">npm install --save hexo-renderer-sass</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动本地化服务即可查看项目</span></span><br><span class=\"line\">hexo server</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成</span></span><br><span class=\"line\">hexo g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动本地服务并监听,修改了配置文件还是需要从新生成一遍才可以看到效果</span></span><br><span class=\"line\">hexo s --watch</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果报一些奇怪的错误不知道怎么解决不妨清除一下重新生成发布</span></span><br><span class=\"line\">hexo clean</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"hexo-部署\"><a href=\"#hexo-部署\" class=\"headerlink\" title=\"hexo 部署\"></a>hexo 部署</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 部署依赖</span></span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 部署文件冲突解决</span></span><br><span class=\"line\">rm -rf .deploy_git</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ubuntu-安装\"><a href=\"#ubuntu-安装\" class=\"headerlink\" title=\"ubuntu 安装\"></a>ubuntu 安装</h2><h3 id=\"环境介紹\"><a href=\"#环境介紹\" class=\"headerlink\" title=\"环境介紹\"></a>环境介紹</h3><p>主机： ubuntu 18.04</p>\n<h3 id=\"安裝依賴\"><a href=\"#安裝依賴\" class=\"headerlink\" title=\"安裝依賴\"></a>安裝依賴</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install nodejs</span><br><span class=\"line\">sudo apt install npm</span><br><span class=\"line\">sudo apt install git</span><br><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"hexo-創建\"><a href=\"#hexo-創建\" class=\"headerlink\" title=\"hexo 創建\"></a>hexo 創建</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir hexo_init</span><br><span class=\"line\"><span class=\"built_in\">cd</span> hexo_init</span><br><span class=\"line\">hexo init</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p>登錄 <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"noopener\">http://localhost:4000</a>  查看效果</p>\n<h3 id=\"下載主題\"><a href=\"#下載主題\" class=\"headerlink\" title=\"下載主題\"></a>下載主題</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</span><br><span class=\"line\">npm install hexo-renderer-pug --save</span><br><span class=\"line\">npm install hexo-renderer-sass --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改yml文件\"><a href=\"#修改yml文件\" class=\"headerlink\" title=\"修改yml文件\"></a>修改yml文件</h3><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">maupassant</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repository:</span> <span class=\"attr\">https://github.com/Leo-youngs/Leo-youngs.github.io</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">master</span></span><br><span class=\"line\"><span class=\"attr\">  message:</span> <span class=\"string\">update</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>更多信息: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>更多信息: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<h2 id=\"主题库\"><a href=\"#主题库\" class=\"headerlink\" title=\"主题库\"></a>主题库</h2><p><a href=\"https://hexo.io/themes/index.html\" target=\"_blank\" rel=\"noopener\">Themes</a></p>\n"},{"title":"greenplum","date":"2018-05-30T02:52:58.000Z","_content":"\n## 简介\n\nGreenplum是一个MPP（海量并行处理）计算框架的分布式数据库，其数据库引擎层是基于著名的Postgresql数据库，企业级数据库产品，现已开源。Greenplum拥有丰富的特性，包括：\n\n1. 完全支持ANSI SQL 2008标准和SQL OLAP 2003 扩展，支持ODBC和JDBC\n2. 支持分布式事务，支持ACID\n3. 支持行存储、列存储，以及可通过外部表的方式访问其它关系型数据库或者Hadoop\n4. 拥有良好的线性扩展能力，支持上千个节点\n\n## 环境介绍\n\n|     主机    |  IP |  内存(G)   |  系统  |\n| :--------:  | :-----------:  |:--------:  | :----:  |\n| mdw         | 172.16.16.134  |  16   |   CentOS Linux release 7.4.1708   |\n| sdw1        | 172.16.16.135  | 16   |   CentOS Linux release 7.4.1708   |\n| sdw1        | 172.16.16.138  |  16   |  CentOS Linux release 7.4.1708    |\n\n## 系统参数调整\n\n1. 修改hosts文件(三台主机)\n\n    ``` bash\n    172.16.16.134 mdw\n    172.16.16.135 sdw1\n    172.16.16.138 sdw2\n    ```\n\n2. 修改或添加/etc/sysctl.conf(三台主机)\n\n    ```bash\n    xfs_mount_options = rw,noatime,inode64,allocsize=16m\n    kernel.shmmax = 500000000\n    kernel.shmmni = 4096\n    kernel.shmall = 4000000000\n    kernel.sem = 250 512000 100 2048\n    kernel.sysrq = 1\n    kernel.core_uses_pid = 1\n    kernel.msgmnb = 65536\n    kernel.msgmax = 65536\n    kernel.msgmni = 2048\n    net.ipv4.tcp_syncookies = 1\n    net.ipv4.ip_forward = 0\n    net.ipv4.conf.default.accept_source_route = 0\n    net.ipv4.tcp_tw_recycle = 1\n    net.ipv4.tcp_max_syn_backlog = 4096\n    net.ipv4.conf.all.arp_filter = 1\n    net.ipv4.ip_local_port_range = 1025 65535\n    net.core.netdev_max_backlog = 10000\n    vm.overcommit_memory = 2\n    ```\n\n3. 配置/etc/security/limits.conf文件，添加以下内容(三台主机)\n\n    ``` bash\n    * soft nofile 65536\n    * hard nofile 65536\n    * soft nproc 131072\n    * hard nproc 131072\n    ```\n\n4. 设置预读块的值为16384(三台主机 未设置)\n\n    ``` bash\n    # /sbin/blockdev --getra /dev/sda 查看预读块，默认大小为256\n    # /sbin/blockdev --setra 16384 /dev/sda  设置预读块\n    ```\n\n5. 设置磁盘访问I/O调度策略(三台主机 未设置)\n\n    ``` bash\n    #echo deadline > /sys/block/sda/queue/scheduler\n    ```\n\n6. 启动ssh\n\n    ```bash\n    ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key\n    ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key\n    ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key\n    /usr/sbin/sshd\n    ```\n\n7. 创建greenplum的用户和用户组\n\n    ``` bash\n    groupadd -g 530 gpadmin\n    useradd -g 530 -u 530 -m -d /home/gpadmin -s /bin/bash gpadmin\n    chown -R gpadmin:gpadmin /home/gpadmin\n    passwd gpadmin\n    ```\n\n8. 关闭 iptables，selinux\n\n    ```bash\n    service iptables stop\n    chkconfig iptables off\n\n    [root@mdw selinux]# cat /etc/selinux/config \n    # This file controls the state of SELinux on the system.\n    # SELINUX= can take one of these three values:\n    #     enforcing - SELinux security policy is enforced.\n    #     permissive - SELinux prints warnings instead of enforcing.\n    #     disabled - No SELinux policy is loaded.\n    SELINUX=disabled\n    # SELINUXTYPE= can take one of these two values:\n    #     targeted - Targeted processes are protected,\n    #     mls - Multi Level Security protection.\n    SELINUXTYPE=targeted \n\n    ```\n\n## 下载安装包并安装\n\n1. 官网下载 https://network.pivotal.io/products/pivotal-gpdb  (这里可能需要注册)\n\n    ``` bash\n    # greenplum 安装包\n    greenplum-db-5.8.0-rhel7-x86_64.zip\n\n    # greenplum web管理界面\n    greenplum-cc-web-4.1.1-LINUX-x86_64.zip\n\n    ```\n\n2. 上传服务器并安装\n\n    ```bash\n    unzip greenplum-db-4.2.2.4-build-1-CE-RHEL5-i386.zip\n\n    # 这里输入安装目录(我是安装在当前用户home)\n    /bin/bash greenplum-db-4.2.2.4-build-1-CE-RHEL5-i386.bin\n\n    source ～/greenplum-db/greenplum_path.sh\n    ```\n\n3. 创建 hostlist  &nbsp; seg_hosts &nbsp; gpinitsystem_config\n\n    ```bash\n    cat conf/hostlist\n    mdw\n    sdw1\n    sdw2\n\n    cat conf/seg_hosts\n    sdw1\n    sdw2\n\n    cat conf/gpinitsystem_config\n\n    # Segment 的名称前缀\n    SEG_PREFIX=gpseg\n    # Primary Segment 起始的端口号\n    PORT_BASE=33000\n    # 指定 Primary Segment 的数据目录\n    declare -a DATA_DIRECTORY=(/home/gpadmin/gpdata/gpdatap1  /home/gpadmin/gpdata/gpdatap2)\n    # Master 所在机器的 Hostname\n    MASTER_HOSTNAME=mdw\n    # 指定 Master 的数据目录\n    MASTER_DIRECTORY=/home/gpadmin/gpdata/gpmaster\n    # Master 的端口 \n    MASTER_PORT=2345\n    # 指定Bash的版本\n    TRUSTED_SHELL=/usr/bin/ssh\n    # Mirror Segment起始的端口号\n    MIRROR_PORT_BASE=43000\n    # Primary Segment 主备同步的起始端口号\n    REPLICATION_PORT_BASE=34000\n    # Mirror Segment 主备同步的起始端口号\n    MIRROR_REPLICATION_PORT_BASE=44000\n    # Mirror Segment 的数据目录\n    declare -a MIRROR_DATA_DIRECTORY=(/home/gpadmin/gpdata/gpdatam1 /home/gpadmin/gpdata/gpdatam2)\n\n    ```\n\n4. 设置环境变量，打通所有节点\n\n    ``` bash\n    # 这里需要输入 segment  gpadmin的密码 成功则 completed successfully\n\n\n    gpssh-exkeys -f /home/gpadmin/conf/hostlist \n\n    # 批量创建文件\n    gpssh -f /home/gpadmin/conf/hostlist\n\n    mkdir gpdata\n\n    cd gpdata\n\n    mkdir gpmaster gpdatap1 gpdatap2 gpdatam1 gpdatam2\n    ```\n\n5. 分发安装包\n\n    可以通过软连接的方式 更新greenplum文件位置\n\n    ```bash\n\n    # 打包master节点上的安装包\n    tar -cf gp.tar greenplum-db/\n    # 分发\n    gpscp -f /home/gpadmin/conf/hostlist gp.4.3.tar =:/home/gpadmin/\n\n    gpssh -f hostlist\n\n    tar -xf gp.tar\n\n    ```\n\n6. 在每个节点上配置.bash_profile环境变量\n\n    ```bash\n    [gpadmin@mdw ~]$ cat .bash_profile \n    # .bash_profile\n\n    # Get the aliases and functions\n    if [ -f ~/.bashrc ]; then\n        . ~/.bashrc\n    fi\n\n    # User specific environment and startup programs\n\n    PATH=$PATH:$HOME/bin\n\n    export PATH\n\n    source /home/gpadmin/greenplum-db/greenplum_path.sh\n    export MASTER_DATA_DIRECTORY=/home/gpadmin/gpdata/gpmaster/gpseg-1\n    export PGPORT=2345\n    export PGDATABASE=testDB\n\n    [gpadmin@mdw ~]$ source .bash_profile\n\n    ```\n\n7. 初始化数据库, 默认初始化完成就启动数据库了\n\n    ```bash\n    gpinitsystem -c /home/gpadmin/conf/gpinitsystem_config -a\n    ```\n\n## Greenplum-cc-web监控软件安装\n\n1. 运行gpperfmon_install命令\n\n    * 创建greenplum监控用数据库(gpperfmon)\n\n    * 创建greenplum监控用数据库角色(gpmon),后面登陆网页时使用\n\n    * 配置greenplum数据库文件(pg_hba.conf和.pgpass)\n\n    * 设置postgresql.conf文件，增加启用监控相关的参数。\n\n    ```bash\n    # postgresql.conf 添加\n    checkpoint_segments=8\n    gp_enable_gpperfmon=on\n    gpperfmon_port=8888\n    gp_external_enable_exec=on\n    gpperfmon_log_alert_level='warning'\n    gp_enable_query_metrics=on\n\n    # 安装 gpperfmon\n    gpperfmon_install  --enable  --password  gpmon  --port 2345\n\n    # 重启\n    gpstop -r\n\n    # 查看配置是否成功\n    ps -ef |grep gpmmon |grep -v grep\n    ```\n\n2. 安装 GreenplumCommand Center Console (默认所有节点都会安装)\n\n    ```bash\n    unzip greenplum-cc-web-4.1.1-LINUX-x86_64.zip\n\n    ./greenplum-cc-web-4.1.1-LINUX-x86_64.bin\n\n    source ~/greenplum-cc-web/gpcc_path.sh\n    ```\n\n3. 启动\n\n    ```bash\n    gpcc start\n    ```\n\n## 扩充节点\n\n1. 按照如上配置在主机环境\n\n2. 生成expand 配置文件\n\n    ```bash\n    cat expand\n\n    sdw2:sdw2:33002:/data/gpdata/gpdatap1:6:2:p:34002\n    sdw2:sdw2:33003:/data/gpdata/gpdatam1:7:2:m:34003\n\n    内容包括几个字段\n    hostname     主机名\n    address        类似主机名\n    port              segment监听端口\n    fselocation   segment data目录,注意是全路径\n    dbid              gp集群的唯一ID，可以到gp_segment_configuration中获得，必须顺序累加\n    content                 可以到gp_segment_configuration中获得，必须顺序累加\n    prefered_role        角色(p或m)(primary , mirror)\n    replication_port     如果没有mirror则不需要(用于replication的端口)。\n    ```\n\n    ```bash\n    # 查看现有节点情况\n    select * from gp_segment_configuration ;\n\n    # 查看节点数据目录\n    select * from pg_filespace_entry ;\n    ```\n\n    配置文件可以根据以上两个表进行修改， 也可以\n\n    ```bash\n    # cat host\n    sdw2\n\n    gpexpand -f ./host\n\n    ```\n\n3. 运行 `gpexpand -i expand`\n\n4. 数据重分布  `gpexpand  -d 6:00:00` (后面跟需要的时间)\n\n5. 看着日志，错了就回滚  \n\n参考连接 :\n\nhttps://yq.aliyun.com/articles/177\n\nhttps://discuss.pivotal.io/hc/en-us/articles/201202707-How-to-Use-gpexpand-Working-with-One-Host\n\n## BUG 记录\n\n1. Failed to complete obtain psql count Master gp_segment_configuration Script Exiti\n\n    * 问题： 在初始化过程中，如到以下问题：\n\n    ```bash\n    gpadmin-[FATAL]:-Failed to complete obtain psql count Master gp_segment_configuration  Script Exiting!\n    Script has left Greenplum Database in an incomplete state\n    ```\n\n    * 解决方法：\n\n    ```bash\n    echo \"RemoveIPC=no\" >> /etc/systemd/logind.conf\n    /bin/systemctl restart systemd-logind.service\n    ```\n\n2. gpstart error: Do not have enough valid segments to start the array\n\n    * 问题： gpinit 成功了在 gpstart的时候出错\n\n    * 解决： 彻底关闭防火墙并检查是否配置开机自启\n\n## 参考文档\n\n[官方文档](https://gpdb.docs.pivotal.io/580/main/index.html)\n\n[中文文档](https://gp-docs-cn.github.io/docs/common/gpdb-features.html)\n\n[cc-web 官方文档](http://gpcc.docs.pivotal.io/410/welcome.html)","source":"_posts/greenplum.md","raw":"---\ntitle: greenplum\ndate: 2018-05-30 10:52:58\ntags: 数据仓库 大数据 greenplum\n---\n\n## 简介\n\nGreenplum是一个MPP（海量并行处理）计算框架的分布式数据库，其数据库引擎层是基于著名的Postgresql数据库，企业级数据库产品，现已开源。Greenplum拥有丰富的特性，包括：\n\n1. 完全支持ANSI SQL 2008标准和SQL OLAP 2003 扩展，支持ODBC和JDBC\n2. 支持分布式事务，支持ACID\n3. 支持行存储、列存储，以及可通过外部表的方式访问其它关系型数据库或者Hadoop\n4. 拥有良好的线性扩展能力，支持上千个节点\n\n## 环境介绍\n\n|     主机    |  IP |  内存(G)   |  系统  |\n| :--------:  | :-----------:  |:--------:  | :----:  |\n| mdw         | 172.16.16.134  |  16   |   CentOS Linux release 7.4.1708   |\n| sdw1        | 172.16.16.135  | 16   |   CentOS Linux release 7.4.1708   |\n| sdw1        | 172.16.16.138  |  16   |  CentOS Linux release 7.4.1708    |\n\n## 系统参数调整\n\n1. 修改hosts文件(三台主机)\n\n    ``` bash\n    172.16.16.134 mdw\n    172.16.16.135 sdw1\n    172.16.16.138 sdw2\n    ```\n\n2. 修改或添加/etc/sysctl.conf(三台主机)\n\n    ```bash\n    xfs_mount_options = rw,noatime,inode64,allocsize=16m\n    kernel.shmmax = 500000000\n    kernel.shmmni = 4096\n    kernel.shmall = 4000000000\n    kernel.sem = 250 512000 100 2048\n    kernel.sysrq = 1\n    kernel.core_uses_pid = 1\n    kernel.msgmnb = 65536\n    kernel.msgmax = 65536\n    kernel.msgmni = 2048\n    net.ipv4.tcp_syncookies = 1\n    net.ipv4.ip_forward = 0\n    net.ipv4.conf.default.accept_source_route = 0\n    net.ipv4.tcp_tw_recycle = 1\n    net.ipv4.tcp_max_syn_backlog = 4096\n    net.ipv4.conf.all.arp_filter = 1\n    net.ipv4.ip_local_port_range = 1025 65535\n    net.core.netdev_max_backlog = 10000\n    vm.overcommit_memory = 2\n    ```\n\n3. 配置/etc/security/limits.conf文件，添加以下内容(三台主机)\n\n    ``` bash\n    * soft nofile 65536\n    * hard nofile 65536\n    * soft nproc 131072\n    * hard nproc 131072\n    ```\n\n4. 设置预读块的值为16384(三台主机 未设置)\n\n    ``` bash\n    # /sbin/blockdev --getra /dev/sda 查看预读块，默认大小为256\n    # /sbin/blockdev --setra 16384 /dev/sda  设置预读块\n    ```\n\n5. 设置磁盘访问I/O调度策略(三台主机 未设置)\n\n    ``` bash\n    #echo deadline > /sys/block/sda/queue/scheduler\n    ```\n\n6. 启动ssh\n\n    ```bash\n    ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key\n    ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key\n    ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key\n    /usr/sbin/sshd\n    ```\n\n7. 创建greenplum的用户和用户组\n\n    ``` bash\n    groupadd -g 530 gpadmin\n    useradd -g 530 -u 530 -m -d /home/gpadmin -s /bin/bash gpadmin\n    chown -R gpadmin:gpadmin /home/gpadmin\n    passwd gpadmin\n    ```\n\n8. 关闭 iptables，selinux\n\n    ```bash\n    service iptables stop\n    chkconfig iptables off\n\n    [root@mdw selinux]# cat /etc/selinux/config \n    # This file controls the state of SELinux on the system.\n    # SELINUX= can take one of these three values:\n    #     enforcing - SELinux security policy is enforced.\n    #     permissive - SELinux prints warnings instead of enforcing.\n    #     disabled - No SELinux policy is loaded.\n    SELINUX=disabled\n    # SELINUXTYPE= can take one of these two values:\n    #     targeted - Targeted processes are protected,\n    #     mls - Multi Level Security protection.\n    SELINUXTYPE=targeted \n\n    ```\n\n## 下载安装包并安装\n\n1. 官网下载 https://network.pivotal.io/products/pivotal-gpdb  (这里可能需要注册)\n\n    ``` bash\n    # greenplum 安装包\n    greenplum-db-5.8.0-rhel7-x86_64.zip\n\n    # greenplum web管理界面\n    greenplum-cc-web-4.1.1-LINUX-x86_64.zip\n\n    ```\n\n2. 上传服务器并安装\n\n    ```bash\n    unzip greenplum-db-4.2.2.4-build-1-CE-RHEL5-i386.zip\n\n    # 这里输入安装目录(我是安装在当前用户home)\n    /bin/bash greenplum-db-4.2.2.4-build-1-CE-RHEL5-i386.bin\n\n    source ～/greenplum-db/greenplum_path.sh\n    ```\n\n3. 创建 hostlist  &nbsp; seg_hosts &nbsp; gpinitsystem_config\n\n    ```bash\n    cat conf/hostlist\n    mdw\n    sdw1\n    sdw2\n\n    cat conf/seg_hosts\n    sdw1\n    sdw2\n\n    cat conf/gpinitsystem_config\n\n    # Segment 的名称前缀\n    SEG_PREFIX=gpseg\n    # Primary Segment 起始的端口号\n    PORT_BASE=33000\n    # 指定 Primary Segment 的数据目录\n    declare -a DATA_DIRECTORY=(/home/gpadmin/gpdata/gpdatap1  /home/gpadmin/gpdata/gpdatap2)\n    # Master 所在机器的 Hostname\n    MASTER_HOSTNAME=mdw\n    # 指定 Master 的数据目录\n    MASTER_DIRECTORY=/home/gpadmin/gpdata/gpmaster\n    # Master 的端口 \n    MASTER_PORT=2345\n    # 指定Bash的版本\n    TRUSTED_SHELL=/usr/bin/ssh\n    # Mirror Segment起始的端口号\n    MIRROR_PORT_BASE=43000\n    # Primary Segment 主备同步的起始端口号\n    REPLICATION_PORT_BASE=34000\n    # Mirror Segment 主备同步的起始端口号\n    MIRROR_REPLICATION_PORT_BASE=44000\n    # Mirror Segment 的数据目录\n    declare -a MIRROR_DATA_DIRECTORY=(/home/gpadmin/gpdata/gpdatam1 /home/gpadmin/gpdata/gpdatam2)\n\n    ```\n\n4. 设置环境变量，打通所有节点\n\n    ``` bash\n    # 这里需要输入 segment  gpadmin的密码 成功则 completed successfully\n\n\n    gpssh-exkeys -f /home/gpadmin/conf/hostlist \n\n    # 批量创建文件\n    gpssh -f /home/gpadmin/conf/hostlist\n\n    mkdir gpdata\n\n    cd gpdata\n\n    mkdir gpmaster gpdatap1 gpdatap2 gpdatam1 gpdatam2\n    ```\n\n5. 分发安装包\n\n    可以通过软连接的方式 更新greenplum文件位置\n\n    ```bash\n\n    # 打包master节点上的安装包\n    tar -cf gp.tar greenplum-db/\n    # 分发\n    gpscp -f /home/gpadmin/conf/hostlist gp.4.3.tar =:/home/gpadmin/\n\n    gpssh -f hostlist\n\n    tar -xf gp.tar\n\n    ```\n\n6. 在每个节点上配置.bash_profile环境变量\n\n    ```bash\n    [gpadmin@mdw ~]$ cat .bash_profile \n    # .bash_profile\n\n    # Get the aliases and functions\n    if [ -f ~/.bashrc ]; then\n        . ~/.bashrc\n    fi\n\n    # User specific environment and startup programs\n\n    PATH=$PATH:$HOME/bin\n\n    export PATH\n\n    source /home/gpadmin/greenplum-db/greenplum_path.sh\n    export MASTER_DATA_DIRECTORY=/home/gpadmin/gpdata/gpmaster/gpseg-1\n    export PGPORT=2345\n    export PGDATABASE=testDB\n\n    [gpadmin@mdw ~]$ source .bash_profile\n\n    ```\n\n7. 初始化数据库, 默认初始化完成就启动数据库了\n\n    ```bash\n    gpinitsystem -c /home/gpadmin/conf/gpinitsystem_config -a\n    ```\n\n## Greenplum-cc-web监控软件安装\n\n1. 运行gpperfmon_install命令\n\n    * 创建greenplum监控用数据库(gpperfmon)\n\n    * 创建greenplum监控用数据库角色(gpmon),后面登陆网页时使用\n\n    * 配置greenplum数据库文件(pg_hba.conf和.pgpass)\n\n    * 设置postgresql.conf文件，增加启用监控相关的参数。\n\n    ```bash\n    # postgresql.conf 添加\n    checkpoint_segments=8\n    gp_enable_gpperfmon=on\n    gpperfmon_port=8888\n    gp_external_enable_exec=on\n    gpperfmon_log_alert_level='warning'\n    gp_enable_query_metrics=on\n\n    # 安装 gpperfmon\n    gpperfmon_install  --enable  --password  gpmon  --port 2345\n\n    # 重启\n    gpstop -r\n\n    # 查看配置是否成功\n    ps -ef |grep gpmmon |grep -v grep\n    ```\n\n2. 安装 GreenplumCommand Center Console (默认所有节点都会安装)\n\n    ```bash\n    unzip greenplum-cc-web-4.1.1-LINUX-x86_64.zip\n\n    ./greenplum-cc-web-4.1.1-LINUX-x86_64.bin\n\n    source ~/greenplum-cc-web/gpcc_path.sh\n    ```\n\n3. 启动\n\n    ```bash\n    gpcc start\n    ```\n\n## 扩充节点\n\n1. 按照如上配置在主机环境\n\n2. 生成expand 配置文件\n\n    ```bash\n    cat expand\n\n    sdw2:sdw2:33002:/data/gpdata/gpdatap1:6:2:p:34002\n    sdw2:sdw2:33003:/data/gpdata/gpdatam1:7:2:m:34003\n\n    内容包括几个字段\n    hostname     主机名\n    address        类似主机名\n    port              segment监听端口\n    fselocation   segment data目录,注意是全路径\n    dbid              gp集群的唯一ID，可以到gp_segment_configuration中获得，必须顺序累加\n    content                 可以到gp_segment_configuration中获得，必须顺序累加\n    prefered_role        角色(p或m)(primary , mirror)\n    replication_port     如果没有mirror则不需要(用于replication的端口)。\n    ```\n\n    ```bash\n    # 查看现有节点情况\n    select * from gp_segment_configuration ;\n\n    # 查看节点数据目录\n    select * from pg_filespace_entry ;\n    ```\n\n    配置文件可以根据以上两个表进行修改， 也可以\n\n    ```bash\n    # cat host\n    sdw2\n\n    gpexpand -f ./host\n\n    ```\n\n3. 运行 `gpexpand -i expand`\n\n4. 数据重分布  `gpexpand  -d 6:00:00` (后面跟需要的时间)\n\n5. 看着日志，错了就回滚  \n\n参考连接 :\n\nhttps://yq.aliyun.com/articles/177\n\nhttps://discuss.pivotal.io/hc/en-us/articles/201202707-How-to-Use-gpexpand-Working-with-One-Host\n\n## BUG 记录\n\n1. Failed to complete obtain psql count Master gp_segment_configuration Script Exiti\n\n    * 问题： 在初始化过程中，如到以下问题：\n\n    ```bash\n    gpadmin-[FATAL]:-Failed to complete obtain psql count Master gp_segment_configuration  Script Exiting!\n    Script has left Greenplum Database in an incomplete state\n    ```\n\n    * 解决方法：\n\n    ```bash\n    echo \"RemoveIPC=no\" >> /etc/systemd/logind.conf\n    /bin/systemctl restart systemd-logind.service\n    ```\n\n2. gpstart error: Do not have enough valid segments to start the array\n\n    * 问题： gpinit 成功了在 gpstart的时候出错\n\n    * 解决： 彻底关闭防火墙并检查是否配置开机自启\n\n## 参考文档\n\n[官方文档](https://gpdb.docs.pivotal.io/580/main/index.html)\n\n[中文文档](https://gp-docs-cn.github.io/docs/common/gpdb-features.html)\n\n[cc-web 官方文档](http://gpcc.docs.pivotal.io/410/welcome.html)","slug":"greenplum","published":1,"updated":"2019-05-24T08:34:39.401Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjw1v7uaa000a15xs59zisacm","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Greenplum是一个MPP（海量并行处理）计算框架的分布式数据库，其数据库引擎层是基于著名的Postgresql数据库，企业级数据库产品，现已开源。Greenplum拥有丰富的特性，包括：</p>\n<ol>\n<li>完全支持ANSI SQL 2008标准和SQL OLAP 2003 扩展，支持ODBC和JDBC</li>\n<li>支持分布式事务，支持ACID</li>\n<li>支持行存储、列存储，以及可通过外部表的方式访问其它关系型数据库或者Hadoop</li>\n<li>拥有良好的线性扩展能力，支持上千个节点</li>\n</ol>\n<h2 id=\"环境介绍\"><a href=\"#环境介绍\" class=\"headerlink\" title=\"环境介绍\"></a>环境介绍</h2><table>\n<thead>\n<tr>\n<th align=\"center\">主机</th>\n<th align=\"center\">IP</th>\n<th align=\"center\">内存(G)</th>\n<th align=\"center\">系统</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">mdw</td>\n<td align=\"center\">172.16.16.134</td>\n<td align=\"center\">16</td>\n<td align=\"center\">CentOS Linux release 7.4.1708</td>\n</tr>\n<tr>\n<td align=\"center\">sdw1</td>\n<td align=\"center\">172.16.16.135</td>\n<td align=\"center\">16</td>\n<td align=\"center\">CentOS Linux release 7.4.1708</td>\n</tr>\n<tr>\n<td align=\"center\">sdw1</td>\n<td align=\"center\">172.16.16.138</td>\n<td align=\"center\">16</td>\n<td align=\"center\">CentOS Linux release 7.4.1708</td>\n</tr>\n</tbody></table>\n<h2 id=\"系统参数调整\"><a href=\"#系统参数调整\" class=\"headerlink\" title=\"系统参数调整\"></a>系统参数调整</h2><ol>\n<li><p>修改hosts文件(三台主机)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">172.16.16.134 mdw</span><br><span class=\"line\">172.16.16.135 sdw1</span><br><span class=\"line\">172.16.16.138 sdw2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改或添加/etc/sysctl.conf(三台主机)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xfs_mount_options = rw,noatime,inode64,allocsize=16m</span><br><span class=\"line\">kernel.shmmax = 500000000</span><br><span class=\"line\">kernel.shmmni = 4096</span><br><span class=\"line\">kernel.shmall = 4000000000</span><br><span class=\"line\">kernel.sem = 250 512000 100 2048</span><br><span class=\"line\">kernel.sysrq = 1</span><br><span class=\"line\">kernel.core_uses_pid = 1</span><br><span class=\"line\">kernel.msgmnb = 65536</span><br><span class=\"line\">kernel.msgmax = 65536</span><br><span class=\"line\">kernel.msgmni = 2048</span><br><span class=\"line\">net.ipv4.tcp_syncookies = 1</span><br><span class=\"line\">net.ipv4.ip_forward = 0</span><br><span class=\"line\">net.ipv4.conf.default.accept_source_route = 0</span><br><span class=\"line\">net.ipv4.tcp_tw_recycle = 1</span><br><span class=\"line\">net.ipv4.tcp_max_syn_backlog = 4096</span><br><span class=\"line\">net.ipv4.conf.all.arp_filter = 1</span><br><span class=\"line\">net.ipv4.ip_local_port_range = 1025 65535</span><br><span class=\"line\">net.core.netdev_max_backlog = 10000</span><br><span class=\"line\">vm.overcommit_memory = 2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置/etc/security/limits.conf文件，添加以下内容(三台主机)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* soft nofile 65536</span><br><span class=\"line\">* hard nofile 65536</span><br><span class=\"line\">* soft nproc 131072</span><br><span class=\"line\">* hard nproc 131072</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置预读块的值为16384(三台主机 未设置)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /sbin/blockdev --getra /dev/sda 查看预读块，默认大小为256</span></span><br><span class=\"line\"><span class=\"comment\"># /sbin/blockdev --setra 16384 /dev/sda  设置预读块</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置磁盘访问I/O调度策略(三台主机 未设置)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#echo deadline &gt; /sys/block/sda/queue/scheduler</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动ssh</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key</span><br><span class=\"line\">ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key</span><br><span class=\"line\">ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key</span><br><span class=\"line\">/usr/sbin/sshd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建greenplum的用户和用户组</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">groupadd -g 530 gpadmin</span><br><span class=\"line\">useradd -g 530 -u 530 -m -d /home/gpadmin -s /bin/bash gpadmin</span><br><span class=\"line\">chown -R gpadmin:gpadmin /home/gpadmin</span><br><span class=\"line\">passwd gpadmin</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>关闭 iptables，selinux</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service iptables stop</span><br><span class=\"line\">chkconfig iptables off</span><br><span class=\"line\"></span><br><span class=\"line\">[root@mdw selinux]<span class=\"comment\"># cat /etc/selinux/config </span></span><br><span class=\"line\"><span class=\"comment\"># This file controls the state of SELinux on the system.</span></span><br><span class=\"line\"><span class=\"comment\"># SELINUX= can take one of these three values:</span></span><br><span class=\"line\"><span class=\"comment\">#     enforcing - SELinux security policy is enforced.</span></span><br><span class=\"line\"><span class=\"comment\">#     permissive - SELinux prints warnings instead of enforcing.</span></span><br><span class=\"line\"><span class=\"comment\">#     disabled - No SELinux policy is loaded.</span></span><br><span class=\"line\">SELINUX=disabled</span><br><span class=\"line\"><span class=\"comment\"># SELINUXTYPE= can take one of these two values:</span></span><br><span class=\"line\"><span class=\"comment\">#     targeted - Targeted processes are protected,</span></span><br><span class=\"line\"><span class=\"comment\">#     mls - Multi Level Security protection.</span></span><br><span class=\"line\">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"下载安装包并安装\"><a href=\"#下载安装包并安装\" class=\"headerlink\" title=\"下载安装包并安装\"></a>下载安装包并安装</h2><ol>\n<li><p>官网下载 <a href=\"https://network.pivotal.io/products/pivotal-gpdb\" target=\"_blank\" rel=\"noopener\">https://network.pivotal.io/products/pivotal-gpdb</a>  (这里可能需要注册)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># greenplum 安装包</span></span><br><span class=\"line\">greenplum-db-5.8.0-rhel7-x86_64.zip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># greenplum web管理界面</span></span><br><span class=\"line\">greenplum-cc-web-4.1.1-LINUX-x86_64.zip</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>上传服务器并安装</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip greenplum-db-4.2.2.4-build-1-CE-RHEL5-i386.zip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这里输入安装目录(我是安装在当前用户home)</span></span><br><span class=\"line\">/bin/bash greenplum-db-4.2.2.4-build-1-CE-RHEL5-i386.bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ～/greenplum-db/greenplum_path.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建 hostlist  &nbsp; seg_hosts &nbsp; gpinitsystem_config</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat conf/hostlist</span><br><span class=\"line\">mdw</span><br><span class=\"line\">sdw1</span><br><span class=\"line\">sdw2</span><br><span class=\"line\"></span><br><span class=\"line\">cat conf/seg_hosts</span><br><span class=\"line\">sdw1</span><br><span class=\"line\">sdw2</span><br><span class=\"line\"></span><br><span class=\"line\">cat conf/gpinitsystem_config</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Segment 的名称前缀</span></span><br><span class=\"line\">SEG_PREFIX=gpseg</span><br><span class=\"line\"><span class=\"comment\"># Primary Segment 起始的端口号</span></span><br><span class=\"line\">PORT_BASE=33000</span><br><span class=\"line\"><span class=\"comment\"># 指定 Primary Segment 的数据目录</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -a DATA_DIRECTORY=(/home/gpadmin/gpdata/gpdatap1  /home/gpadmin/gpdata/gpdatap2)</span><br><span class=\"line\"><span class=\"comment\"># Master 所在机器的 Hostname</span></span><br><span class=\"line\">MASTER_HOSTNAME=mdw</span><br><span class=\"line\"><span class=\"comment\"># 指定 Master 的数据目录</span></span><br><span class=\"line\">MASTER_DIRECTORY=/home/gpadmin/gpdata/gpmaster</span><br><span class=\"line\"><span class=\"comment\"># Master 的端口 </span></span><br><span class=\"line\">MASTER_PORT=2345</span><br><span class=\"line\"><span class=\"comment\"># 指定Bash的版本</span></span><br><span class=\"line\">TRUSTED_SHELL=/usr/bin/ssh</span><br><span class=\"line\"><span class=\"comment\"># Mirror Segment起始的端口号</span></span><br><span class=\"line\">MIRROR_PORT_BASE=43000</span><br><span class=\"line\"><span class=\"comment\"># Primary Segment 主备同步的起始端口号</span></span><br><span class=\"line\">REPLICATION_PORT_BASE=34000</span><br><span class=\"line\"><span class=\"comment\"># Mirror Segment 主备同步的起始端口号</span></span><br><span class=\"line\">MIRROR_REPLICATION_PORT_BASE=44000</span><br><span class=\"line\"><span class=\"comment\"># Mirror Segment 的数据目录</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -a MIRROR_DATA_DIRECTORY=(/home/gpadmin/gpdata/gpdatam1 /home/gpadmin/gpdata/gpdatam2)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置环境变量，打通所有节点</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这里需要输入 segment  gpadmin的密码 成功则 completed successfully</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">gpssh-exkeys -f /home/gpadmin/conf/hostlist </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 批量创建文件</span></span><br><span class=\"line\">gpssh -f /home/gpadmin/conf/hostlist</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir gpdata</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> gpdata</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir gpmaster gpdatap1 gpdatap2 gpdatam1 gpdatam2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>分发安装包</p>\n<p> 可以通过软连接的方式 更新greenplum文件位置</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打包master节点上的安装包</span></span><br><span class=\"line\">tar -cf gp.tar greenplum-db/</span><br><span class=\"line\"><span class=\"comment\"># 分发</span></span><br><span class=\"line\">gpscp -f /home/gpadmin/conf/hostlist gp.4.3.tar =:/home/gpadmin/</span><br><span class=\"line\"></span><br><span class=\"line\">gpssh -f hostlist</span><br><span class=\"line\"></span><br><span class=\"line\">tar -xf gp.tar</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在每个节点上配置.bash_profile环境变量</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[gpadmin@mdw ~]$ cat .bash_profile </span><br><span class=\"line\"><span class=\"comment\"># .bash_profile</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Get the aliases and functions</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -f ~/.bashrc ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    . ~/.bashrc</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># User specific environment and startup programs</span></span><br><span class=\"line\"></span><br><span class=\"line\">PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$HOME</span>/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> /home/gpadmin/greenplum-db/greenplum_path.sh</span><br><span class=\"line\"><span class=\"built_in\">export</span> MASTER_DATA_DIRECTORY=/home/gpadmin/gpdata/gpmaster/gpseg-1</span><br><span class=\"line\"><span class=\"built_in\">export</span> PGPORT=2345</span><br><span class=\"line\"><span class=\"built_in\">export</span> PGDATABASE=testDB</span><br><span class=\"line\"></span><br><span class=\"line\">[gpadmin@mdw ~]$ <span class=\"built_in\">source</span> .bash_profile</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>初始化数据库, 默认初始化完成就启动数据库了</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpinitsystem -c /home/gpadmin/conf/gpinitsystem_config -a</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"Greenplum-cc-web监控软件安装\"><a href=\"#Greenplum-cc-web监控软件安装\" class=\"headerlink\" title=\"Greenplum-cc-web监控软件安装\"></a>Greenplum-cc-web监控软件安装</h2><ol>\n<li><p>运行gpperfmon_install命令</p>\n<ul>\n<li><p>创建greenplum监控用数据库(gpperfmon)</p>\n</li>\n<li><p>创建greenplum监控用数据库角色(gpmon),后面登陆网页时使用</p>\n</li>\n<li><p>配置greenplum数据库文件(pg_hba.conf和.pgpass)</p>\n</li>\n<li><p>设置postgresql.conf文件，增加启用监控相关的参数。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># postgresql.conf 添加</span></span><br><span class=\"line\">checkpoint_segments=8</span><br><span class=\"line\">gp_enable_gpperfmon=on</span><br><span class=\"line\">gpperfmon_port=8888</span><br><span class=\"line\">gp_external_enable_exec=on</span><br><span class=\"line\">gpperfmon_log_alert_level=<span class=\"string\">'warning'</span></span><br><span class=\"line\">gp_enable_query_metrics=on</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装 gpperfmon</span></span><br><span class=\"line\">gpperfmon_install  --<span class=\"built_in\">enable</span>  --password  gpmon  --port 2345</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启</span></span><br><span class=\"line\">gpstop -r</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看配置是否成功</span></span><br><span class=\"line\">ps -ef |grep gpmmon |grep -v grep</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>安装 GreenplumCommand Center Console (默认所有节点都会安装)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip greenplum-cc-web-4.1.1-LINUX-x86_64.zip</span><br><span class=\"line\"></span><br><span class=\"line\">./greenplum-cc-web-4.1.1-LINUX-x86_64.bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/greenplum-cc-web/gpcc_path.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpcc start</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"扩充节点\"><a href=\"#扩充节点\" class=\"headerlink\" title=\"扩充节点\"></a>扩充节点</h2><ol>\n<li><p>按照如上配置在主机环境</p>\n</li>\n<li><p>生成expand 配置文件</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat expand</span><br><span class=\"line\"></span><br><span class=\"line\">sdw2:sdw2:33002:/data/gpdata/gpdatap1:6:2:p:34002</span><br><span class=\"line\">sdw2:sdw2:33003:/data/gpdata/gpdatam1:7:2:m:34003</span><br><span class=\"line\"></span><br><span class=\"line\">内容包括几个字段</span><br><span class=\"line\">hostname     主机名</span><br><span class=\"line\">address        类似主机名</span><br><span class=\"line\">port              segment监听端口</span><br><span class=\"line\">fselocation   segment data目录,注意是全路径</span><br><span class=\"line\">dbid              gp集群的唯一ID，可以到gp_segment_configuration中获得，必须顺序累加</span><br><span class=\"line\">content                 可以到gp_segment_configuration中获得，必须顺序累加</span><br><span class=\"line\">prefered_role        角色(p或m)(primary , mirror)</span><br><span class=\"line\">replication_port     如果没有mirror则不需要(用于replication的端口)。</span><br></pre></td></tr></table></figure>\n\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看现有节点情况</span></span><br><span class=\"line\">select * from gp_segment_configuration ;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看节点数据目录</span></span><br><span class=\"line\">select * from pg_filespace_entry ;</span><br></pre></td></tr></table></figure>\n\n<p> 配置文件可以根据以上两个表进行修改， 也可以</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cat host</span></span><br><span class=\"line\">sdw2</span><br><span class=\"line\"></span><br><span class=\"line\">gpexpand -f ./host</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>运行 <code>gpexpand -i expand</code></p>\n</li>\n<li><p>数据重分布  <code>gpexpand  -d 6:00:00</code> (后面跟需要的时间)</p>\n</li>\n<li><p>看着日志，错了就回滚  </p>\n</li>\n</ol>\n<p>参考连接 :</p>\n<p><a href=\"https://yq.aliyun.com/articles/177\" target=\"_blank\" rel=\"noopener\">https://yq.aliyun.com/articles/177</a></p>\n<p><a href=\"https://discuss.pivotal.io/hc/en-us/articles/201202707-How-to-Use-gpexpand-Working-with-One-Host\" target=\"_blank\" rel=\"noopener\">https://discuss.pivotal.io/hc/en-us/articles/201202707-How-to-Use-gpexpand-Working-with-One-Host</a></p>\n<h2 id=\"BUG-记录\"><a href=\"#BUG-记录\" class=\"headerlink\" title=\"BUG 记录\"></a>BUG 记录</h2><ol>\n<li><p>Failed to complete obtain psql count Master gp_segment_configuration Script Exiti</p>\n<ul>\n<li><p>问题： 在初始化过程中，如到以下问题：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpadmin-[FATAL]:-Failed to complete obtain psql count Master gp_segment_configuration  Script Exiting!</span><br><span class=\"line\">Script has left Greenplum Database <span class=\"keyword\">in</span> an incomplete state</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解决方法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"RemoveIPC=no\"</span> &gt;&gt; /etc/systemd/logind.conf</span><br><span class=\"line\">/bin/systemctl restart systemd-logind.service</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>gpstart error: Do not have enough valid segments to start the array</p>\n<ul>\n<li><p>问题： gpinit 成功了在 gpstart的时候出错</p>\n</li>\n<li><p>解决： 彻底关闭防火墙并检查是否配置开机自启</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"https://gpdb.docs.pivotal.io/580/main/index.html\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p><a href=\"https://gp-docs-cn.github.io/docs/common/gpdb-features.html\" target=\"_blank\" rel=\"noopener\">中文文档</a></p>\n<p><a href=\"http://gpcc.docs.pivotal.io/410/welcome.html\" target=\"_blank\" rel=\"noopener\">cc-web 官方文档</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Greenplum是一个MPP（海量并行处理）计算框架的分布式数据库，其数据库引擎层是基于著名的Postgresql数据库，企业级数据库产品，现已开源。Greenplum拥有丰富的特性，包括：</p>\n<ol>\n<li>完全支持ANSI SQL 2008标准和SQL OLAP 2003 扩展，支持ODBC和JDBC</li>\n<li>支持分布式事务，支持ACID</li>\n<li>支持行存储、列存储，以及可通过外部表的方式访问其它关系型数据库或者Hadoop</li>\n<li>拥有良好的线性扩展能力，支持上千个节点</li>\n</ol>\n<h2 id=\"环境介绍\"><a href=\"#环境介绍\" class=\"headerlink\" title=\"环境介绍\"></a>环境介绍</h2><table>\n<thead>\n<tr>\n<th align=\"center\">主机</th>\n<th align=\"center\">IP</th>\n<th align=\"center\">内存(G)</th>\n<th align=\"center\">系统</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">mdw</td>\n<td align=\"center\">172.16.16.134</td>\n<td align=\"center\">16</td>\n<td align=\"center\">CentOS Linux release 7.4.1708</td>\n</tr>\n<tr>\n<td align=\"center\">sdw1</td>\n<td align=\"center\">172.16.16.135</td>\n<td align=\"center\">16</td>\n<td align=\"center\">CentOS Linux release 7.4.1708</td>\n</tr>\n<tr>\n<td align=\"center\">sdw1</td>\n<td align=\"center\">172.16.16.138</td>\n<td align=\"center\">16</td>\n<td align=\"center\">CentOS Linux release 7.4.1708</td>\n</tr>\n</tbody></table>\n<h2 id=\"系统参数调整\"><a href=\"#系统参数调整\" class=\"headerlink\" title=\"系统参数调整\"></a>系统参数调整</h2><ol>\n<li><p>修改hosts文件(三台主机)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">172.16.16.134 mdw</span><br><span class=\"line\">172.16.16.135 sdw1</span><br><span class=\"line\">172.16.16.138 sdw2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改或添加/etc/sysctl.conf(三台主机)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xfs_mount_options = rw,noatime,inode64,allocsize=16m</span><br><span class=\"line\">kernel.shmmax = 500000000</span><br><span class=\"line\">kernel.shmmni = 4096</span><br><span class=\"line\">kernel.shmall = 4000000000</span><br><span class=\"line\">kernel.sem = 250 512000 100 2048</span><br><span class=\"line\">kernel.sysrq = 1</span><br><span class=\"line\">kernel.core_uses_pid = 1</span><br><span class=\"line\">kernel.msgmnb = 65536</span><br><span class=\"line\">kernel.msgmax = 65536</span><br><span class=\"line\">kernel.msgmni = 2048</span><br><span class=\"line\">net.ipv4.tcp_syncookies = 1</span><br><span class=\"line\">net.ipv4.ip_forward = 0</span><br><span class=\"line\">net.ipv4.conf.default.accept_source_route = 0</span><br><span class=\"line\">net.ipv4.tcp_tw_recycle = 1</span><br><span class=\"line\">net.ipv4.tcp_max_syn_backlog = 4096</span><br><span class=\"line\">net.ipv4.conf.all.arp_filter = 1</span><br><span class=\"line\">net.ipv4.ip_local_port_range = 1025 65535</span><br><span class=\"line\">net.core.netdev_max_backlog = 10000</span><br><span class=\"line\">vm.overcommit_memory = 2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置/etc/security/limits.conf文件，添加以下内容(三台主机)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* soft nofile 65536</span><br><span class=\"line\">* hard nofile 65536</span><br><span class=\"line\">* soft nproc 131072</span><br><span class=\"line\">* hard nproc 131072</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置预读块的值为16384(三台主机 未设置)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /sbin/blockdev --getra /dev/sda 查看预读块，默认大小为256</span></span><br><span class=\"line\"><span class=\"comment\"># /sbin/blockdev --setra 16384 /dev/sda  设置预读块</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置磁盘访问I/O调度策略(三台主机 未设置)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#echo deadline &gt; /sys/block/sda/queue/scheduler</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动ssh</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key</span><br><span class=\"line\">ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key</span><br><span class=\"line\">ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key</span><br><span class=\"line\">/usr/sbin/sshd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建greenplum的用户和用户组</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">groupadd -g 530 gpadmin</span><br><span class=\"line\">useradd -g 530 -u 530 -m -d /home/gpadmin -s /bin/bash gpadmin</span><br><span class=\"line\">chown -R gpadmin:gpadmin /home/gpadmin</span><br><span class=\"line\">passwd gpadmin</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>关闭 iptables，selinux</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service iptables stop</span><br><span class=\"line\">chkconfig iptables off</span><br><span class=\"line\"></span><br><span class=\"line\">[root@mdw selinux]<span class=\"comment\"># cat /etc/selinux/config </span></span><br><span class=\"line\"><span class=\"comment\"># This file controls the state of SELinux on the system.</span></span><br><span class=\"line\"><span class=\"comment\"># SELINUX= can take one of these three values:</span></span><br><span class=\"line\"><span class=\"comment\">#     enforcing - SELinux security policy is enforced.</span></span><br><span class=\"line\"><span class=\"comment\">#     permissive - SELinux prints warnings instead of enforcing.</span></span><br><span class=\"line\"><span class=\"comment\">#     disabled - No SELinux policy is loaded.</span></span><br><span class=\"line\">SELINUX=disabled</span><br><span class=\"line\"><span class=\"comment\"># SELINUXTYPE= can take one of these two values:</span></span><br><span class=\"line\"><span class=\"comment\">#     targeted - Targeted processes are protected,</span></span><br><span class=\"line\"><span class=\"comment\">#     mls - Multi Level Security protection.</span></span><br><span class=\"line\">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"下载安装包并安装\"><a href=\"#下载安装包并安装\" class=\"headerlink\" title=\"下载安装包并安装\"></a>下载安装包并安装</h2><ol>\n<li><p>官网下载 <a href=\"https://network.pivotal.io/products/pivotal-gpdb\" target=\"_blank\" rel=\"noopener\">https://network.pivotal.io/products/pivotal-gpdb</a>  (这里可能需要注册)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># greenplum 安装包</span></span><br><span class=\"line\">greenplum-db-5.8.0-rhel7-x86_64.zip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># greenplum web管理界面</span></span><br><span class=\"line\">greenplum-cc-web-4.1.1-LINUX-x86_64.zip</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>上传服务器并安装</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip greenplum-db-4.2.2.4-build-1-CE-RHEL5-i386.zip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这里输入安装目录(我是安装在当前用户home)</span></span><br><span class=\"line\">/bin/bash greenplum-db-4.2.2.4-build-1-CE-RHEL5-i386.bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ～/greenplum-db/greenplum_path.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建 hostlist  &nbsp; seg_hosts &nbsp; gpinitsystem_config</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat conf/hostlist</span><br><span class=\"line\">mdw</span><br><span class=\"line\">sdw1</span><br><span class=\"line\">sdw2</span><br><span class=\"line\"></span><br><span class=\"line\">cat conf/seg_hosts</span><br><span class=\"line\">sdw1</span><br><span class=\"line\">sdw2</span><br><span class=\"line\"></span><br><span class=\"line\">cat conf/gpinitsystem_config</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Segment 的名称前缀</span></span><br><span class=\"line\">SEG_PREFIX=gpseg</span><br><span class=\"line\"><span class=\"comment\"># Primary Segment 起始的端口号</span></span><br><span class=\"line\">PORT_BASE=33000</span><br><span class=\"line\"><span class=\"comment\"># 指定 Primary Segment 的数据目录</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -a DATA_DIRECTORY=(/home/gpadmin/gpdata/gpdatap1  /home/gpadmin/gpdata/gpdatap2)</span><br><span class=\"line\"><span class=\"comment\"># Master 所在机器的 Hostname</span></span><br><span class=\"line\">MASTER_HOSTNAME=mdw</span><br><span class=\"line\"><span class=\"comment\"># 指定 Master 的数据目录</span></span><br><span class=\"line\">MASTER_DIRECTORY=/home/gpadmin/gpdata/gpmaster</span><br><span class=\"line\"><span class=\"comment\"># Master 的端口 </span></span><br><span class=\"line\">MASTER_PORT=2345</span><br><span class=\"line\"><span class=\"comment\"># 指定Bash的版本</span></span><br><span class=\"line\">TRUSTED_SHELL=/usr/bin/ssh</span><br><span class=\"line\"><span class=\"comment\"># Mirror Segment起始的端口号</span></span><br><span class=\"line\">MIRROR_PORT_BASE=43000</span><br><span class=\"line\"><span class=\"comment\"># Primary Segment 主备同步的起始端口号</span></span><br><span class=\"line\">REPLICATION_PORT_BASE=34000</span><br><span class=\"line\"><span class=\"comment\"># Mirror Segment 主备同步的起始端口号</span></span><br><span class=\"line\">MIRROR_REPLICATION_PORT_BASE=44000</span><br><span class=\"line\"><span class=\"comment\"># Mirror Segment 的数据目录</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -a MIRROR_DATA_DIRECTORY=(/home/gpadmin/gpdata/gpdatam1 /home/gpadmin/gpdata/gpdatam2)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置环境变量，打通所有节点</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这里需要输入 segment  gpadmin的密码 成功则 completed successfully</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">gpssh-exkeys -f /home/gpadmin/conf/hostlist </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 批量创建文件</span></span><br><span class=\"line\">gpssh -f /home/gpadmin/conf/hostlist</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir gpdata</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> gpdata</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir gpmaster gpdatap1 gpdatap2 gpdatam1 gpdatam2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>分发安装包</p>\n<p> 可以通过软连接的方式 更新greenplum文件位置</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打包master节点上的安装包</span></span><br><span class=\"line\">tar -cf gp.tar greenplum-db/</span><br><span class=\"line\"><span class=\"comment\"># 分发</span></span><br><span class=\"line\">gpscp -f /home/gpadmin/conf/hostlist gp.4.3.tar =:/home/gpadmin/</span><br><span class=\"line\"></span><br><span class=\"line\">gpssh -f hostlist</span><br><span class=\"line\"></span><br><span class=\"line\">tar -xf gp.tar</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在每个节点上配置.bash_profile环境变量</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[gpadmin@mdw ~]$ cat .bash_profile </span><br><span class=\"line\"><span class=\"comment\"># .bash_profile</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Get the aliases and functions</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -f ~/.bashrc ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    . ~/.bashrc</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># User specific environment and startup programs</span></span><br><span class=\"line\"></span><br><span class=\"line\">PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$HOME</span>/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> /home/gpadmin/greenplum-db/greenplum_path.sh</span><br><span class=\"line\"><span class=\"built_in\">export</span> MASTER_DATA_DIRECTORY=/home/gpadmin/gpdata/gpmaster/gpseg-1</span><br><span class=\"line\"><span class=\"built_in\">export</span> PGPORT=2345</span><br><span class=\"line\"><span class=\"built_in\">export</span> PGDATABASE=testDB</span><br><span class=\"line\"></span><br><span class=\"line\">[gpadmin@mdw ~]$ <span class=\"built_in\">source</span> .bash_profile</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>初始化数据库, 默认初始化完成就启动数据库了</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpinitsystem -c /home/gpadmin/conf/gpinitsystem_config -a</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"Greenplum-cc-web监控软件安装\"><a href=\"#Greenplum-cc-web监控软件安装\" class=\"headerlink\" title=\"Greenplum-cc-web监控软件安装\"></a>Greenplum-cc-web监控软件安装</h2><ol>\n<li><p>运行gpperfmon_install命令</p>\n<ul>\n<li><p>创建greenplum监控用数据库(gpperfmon)</p>\n</li>\n<li><p>创建greenplum监控用数据库角色(gpmon),后面登陆网页时使用</p>\n</li>\n<li><p>配置greenplum数据库文件(pg_hba.conf和.pgpass)</p>\n</li>\n<li><p>设置postgresql.conf文件，增加启用监控相关的参数。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># postgresql.conf 添加</span></span><br><span class=\"line\">checkpoint_segments=8</span><br><span class=\"line\">gp_enable_gpperfmon=on</span><br><span class=\"line\">gpperfmon_port=8888</span><br><span class=\"line\">gp_external_enable_exec=on</span><br><span class=\"line\">gpperfmon_log_alert_level=<span class=\"string\">'warning'</span></span><br><span class=\"line\">gp_enable_query_metrics=on</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装 gpperfmon</span></span><br><span class=\"line\">gpperfmon_install  --<span class=\"built_in\">enable</span>  --password  gpmon  --port 2345</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启</span></span><br><span class=\"line\">gpstop -r</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看配置是否成功</span></span><br><span class=\"line\">ps -ef |grep gpmmon |grep -v grep</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>安装 GreenplumCommand Center Console (默认所有节点都会安装)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip greenplum-cc-web-4.1.1-LINUX-x86_64.zip</span><br><span class=\"line\"></span><br><span class=\"line\">./greenplum-cc-web-4.1.1-LINUX-x86_64.bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/greenplum-cc-web/gpcc_path.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpcc start</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"扩充节点\"><a href=\"#扩充节点\" class=\"headerlink\" title=\"扩充节点\"></a>扩充节点</h2><ol>\n<li><p>按照如上配置在主机环境</p>\n</li>\n<li><p>生成expand 配置文件</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat expand</span><br><span class=\"line\"></span><br><span class=\"line\">sdw2:sdw2:33002:/data/gpdata/gpdatap1:6:2:p:34002</span><br><span class=\"line\">sdw2:sdw2:33003:/data/gpdata/gpdatam1:7:2:m:34003</span><br><span class=\"line\"></span><br><span class=\"line\">内容包括几个字段</span><br><span class=\"line\">hostname     主机名</span><br><span class=\"line\">address        类似主机名</span><br><span class=\"line\">port              segment监听端口</span><br><span class=\"line\">fselocation   segment data目录,注意是全路径</span><br><span class=\"line\">dbid              gp集群的唯一ID，可以到gp_segment_configuration中获得，必须顺序累加</span><br><span class=\"line\">content                 可以到gp_segment_configuration中获得，必须顺序累加</span><br><span class=\"line\">prefered_role        角色(p或m)(primary , mirror)</span><br><span class=\"line\">replication_port     如果没有mirror则不需要(用于replication的端口)。</span><br></pre></td></tr></table></figure>\n\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看现有节点情况</span></span><br><span class=\"line\">select * from gp_segment_configuration ;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看节点数据目录</span></span><br><span class=\"line\">select * from pg_filespace_entry ;</span><br></pre></td></tr></table></figure>\n\n<p> 配置文件可以根据以上两个表进行修改， 也可以</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cat host</span></span><br><span class=\"line\">sdw2</span><br><span class=\"line\"></span><br><span class=\"line\">gpexpand -f ./host</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>运行 <code>gpexpand -i expand</code></p>\n</li>\n<li><p>数据重分布  <code>gpexpand  -d 6:00:00</code> (后面跟需要的时间)</p>\n</li>\n<li><p>看着日志，错了就回滚  </p>\n</li>\n</ol>\n<p>参考连接 :</p>\n<p><a href=\"https://yq.aliyun.com/articles/177\" target=\"_blank\" rel=\"noopener\">https://yq.aliyun.com/articles/177</a></p>\n<p><a href=\"https://discuss.pivotal.io/hc/en-us/articles/201202707-How-to-Use-gpexpand-Working-with-One-Host\" target=\"_blank\" rel=\"noopener\">https://discuss.pivotal.io/hc/en-us/articles/201202707-How-to-Use-gpexpand-Working-with-One-Host</a></p>\n<h2 id=\"BUG-记录\"><a href=\"#BUG-记录\" class=\"headerlink\" title=\"BUG 记录\"></a>BUG 记录</h2><ol>\n<li><p>Failed to complete obtain psql count Master gp_segment_configuration Script Exiti</p>\n<ul>\n<li><p>问题： 在初始化过程中，如到以下问题：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpadmin-[FATAL]:-Failed to complete obtain psql count Master gp_segment_configuration  Script Exiting!</span><br><span class=\"line\">Script has left Greenplum Database <span class=\"keyword\">in</span> an incomplete state</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解决方法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"RemoveIPC=no\"</span> &gt;&gt; /etc/systemd/logind.conf</span><br><span class=\"line\">/bin/systemctl restart systemd-logind.service</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>gpstart error: Do not have enough valid segments to start the array</p>\n<ul>\n<li><p>问题： gpinit 成功了在 gpstart的时候出错</p>\n</li>\n<li><p>解决： 彻底关闭防火墙并检查是否配置开机自启</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"https://gpdb.docs.pivotal.io/580/main/index.html\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p><a href=\"https://gp-docs-cn.github.io/docs/common/gpdb-features.html\" target=\"_blank\" rel=\"noopener\">中文文档</a></p>\n<p><a href=\"http://gpcc.docs.pivotal.io/410/welcome.html\" target=\"_blank\" rel=\"noopener\">cc-web 官方文档</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjw1v7u9x000015xsu4wo2g5h","tag_id":"cjw1v7ua4000315xs39gzgk49","_id":"cjw1v7ua7000615xswi5rp9fc"},{"post_id":"cjw1v7ua2000215xs4h4bzq8l","tag_id":"cjw1v7ua6000515xs9yy125b6","_id":"cjw1v7ua7000815xsux782c2v"},{"post_id":"cjw1v7ua5000415xsgaeeqtlc","tag_id":"cjw1v7ua7000715xsxf4kq5j9","_id":"cjw1v7ua8000915xsowhxmm0g"},{"post_id":"cjw1v7uaa000a15xs59zisacm","tag_id":"cjw1v7uab000b15xsd0qu2kyu","_id":"cjw1v7uab000c15xs5jzc60ke"}],"Tag":[{"name":"消息队列 greenplum","_id":"cjw1v7ua4000315xs39gzgk49"},{"name":"echo EOF","_id":"cjw1v7ua6000515xs9yy125b6"},{"name":"博客搭建","_id":"cjw1v7ua7000715xsxf4kq5j9"},{"name":"数据仓库 大数据 greenplum","_id":"cjw1v7uab000b15xsd0qu2kyu"}]}}